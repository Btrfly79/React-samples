{"index.css":"","systemjs.config.js":"System.config({\r\n    transpiler: \"ts\",\r\n    typescriptOptions: {\r\n            target: \"es5\",\r\n            module: \"commonjs\",\r\n            moduleResolution: \"node\",\r\n            emitDecoratorMetadata: true,\r\n            experimentalDecorators: true,\r\n            \"jsx\": \"react\"\r\n    },\r\n     meta: {\r\n      'typescript': {\r\n        \"exports\": \"ts\"\r\n      },\r\n      '*.json': { loader: 'plugin-json' }\r\n    },\r\n    paths: {\r\n        \"syncfusion:\": \"http://cdn.syncfusion.com/ej2/\"},\r\n    map: {\r\n        app: 'app',\r\n        ts: \"https://unpkg.com/plugin-typescript@4.0.10/lib/plugin.js\",\r\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\r\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\r\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\r\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-splitbuttons\": \"syncfusion:ej2-splitbuttons/dist/ej2-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-maps\": \"syncfusion:ej2-maps/dist/ej2-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-treemap\": \"syncfusion:ej2-treemap/dist/ej2-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\r\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-schedule\": \"syncfusion:ej2-schedule/dist/ej2-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\r\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\r\n        \"@syncfusion/ej2-documenteditor\": \"syncfusion:ej2-documenteditor/dist/ej2-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-notifications\": \"syncfusion:ej2-notifications/dist/ej2-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-richtexteditor\": \"syncfusion:ej2-richtexteditor/dist/ej2-richtexteditor.umd.min.js\",\r\n\t\t\"@syncfusion/ej2-svg-base\": \"syncfusion:ej2-svg-base/dist/ej2-svg-base.umd.min.js\",\r\n        \"@syncfusion/ej2-pivotview\": \"syncfusion:ej2-pivotview/dist/ej2-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-heatmap\": \"syncfusion:ej2-heatmap/dist/ej2-heatmap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-base\": \"syncfusion:ej2-react-base/dist/ej2-react-base.umd.min.js\",\r\n        \"@syncfusion/ej2-react-buttons\": \"syncfusion:ej2-react-buttons/dist/ej2-react-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-splitbuttons\": \"syncfusion:ej2-react-splitbuttons/dist/ej2-react-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-charts\": \"syncfusion:ej2-react-charts/dist/ej2-react-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-react-maps\": \"syncfusion:ej2-react-maps/dist/ej2-react-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-react-treemap\": \"syncfusion:ej2-react-treemap/dist/ej2-react-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-circulargauge\": \"syncfusion:ej2-react-circulargauge/dist/ej2-react-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lineargauge\": \"syncfusion:ej2-react-lineargauge/dist/ej2-react-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-calendars\": \"syncfusion:ej2-react-calendars/dist/ej2-react-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-react-dropdowns\": \"syncfusion:ej2-react-dropdowns/dist/ej2-react-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-react-grids\": \"syncfusion:ej2-react-grids/dist/ej2-react-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-react-inputs\": \"syncfusion:ej2-react-inputs/dist/ej2-react-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lists\": \"syncfusion:ej2-react-lists/dist/ej2-react-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-react-navigations\": \"syncfusion:ej2-react-navigations/dist/ej2-react-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-react-popups\": \"syncfusion:ej2-react-popups/dist/ej2-react-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-react-schedule\": \"syncfusion:ej2-react-schedule/dist/ej2-react-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-react-documenteditor\": \"syncfusion:ej2-react-documenteditor/dist/ej2-react-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-notifications\": \"syncfusion:ej2-react-notifications/dist/ej2-react-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-react-richtexteditor\": \"syncfusion:ej2-react-richtexteditor/dist/ej2-react-richtexteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-pivotview\": \"syncfusion:ej2-react-pivotview/dist/ej2-react-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-react-heatmap\": \"syncfusion:ej2-react-heatmap/dist/ej2-react-heatmap.umd.min.js\",\r\n        \"react-dom\":\"https://unpkg.com/react-dom@15.5.4/dist/react-dom.min.js\",\r\n        \"react\":\"https://unpkg.com/react@15.5.4/dist/react.min.js\",\r\n    },\r\n    packages: {\r\n        'app': { main: 'index', defaultExtension: 'tsx' },\r\n    }\r\n});\r\n\r\nSystem.import('app');","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Diagram · ShapeGallery · Essential JS 2 for React · Syncfusion</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <!-- {{:meta}} -->\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <script type=\"text/javascript\">\r\n        var themeName = location.hash || 'material';\r\n        themeName = themeName.replace('#','');\r\n        window.ripple = (themeName === \"material\")\r\n        document.write('<link href=\"http://cdn.syncfusion.com/ej2/' + themeName + '.css\" rel=\"stylesheet\">');\r\n    </script>\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\r\n    <script src=\"systemjs.config.js\"></script>\r\n    <link href=\"index.css\" rel=\"stylesheet\" />\r\n     <style>\r\n        #loader {\r\n            color: #008cff;\r\n            height: 40px;\r\n            left: 45%;\r\n            position: absolute;\r\n            top: 45%;\r\n            width: 30%;\r\n        }\r\n        body {\r\n            touch-action:none;\r\n        }\r\n        .body {\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n        }\r\n\r\n        .e-view {\r\n            bottom: 0;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n        }\r\n\r\n        .sb-left {\r\n            float: left;\r\n        }\r\n\r\n        .sb-right {\r\n            float: right;\r\n        }\r\n\r\n        .sb-block {\r\n            display: block;\r\n        }\r\n\r\n        .sb-table {\r\n            display: table;\r\n        }\r\n\r\n        .sb-table-cell {\r\n            display: table-cell;\r\n            vertical-align: middle;\r\n        }\r\n\r\n        /*sample header*/\r\n\r\n\r\n        .sb-header {\r\n            height: 48px;\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.12);\r\n            z-index: 1001;\r\n            opacity: 100;\r\n        }\r\n\r\n\r\n        .sb-header-left, .sb-header-right {\r\n            height: 100%;\r\n        }\r\n\r\n        #sb-header-text {\r\n            padding-left: 22px;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        .header-logo {\r\n            float: left;\r\n            padding-left: 8px;\r\n            padding-right: 22px;\r\n        }\r\n\r\n        .footer-logo {\r\n            background: url(https://ej2.syncfusion.com/home/images/footer-logo.svg) no-repeat right;\r\n            height: 40px;\r\n            width: 140px;\r\n        }\r\n\r\n        .sb-header-splitter {\r\n            float: left;\r\n            border-left: 1px solid rgb(196, 196, 196);\r\n            height: 32px;\r\n            margin-top: 8px;\r\n            padding-left: 22 px;\r\n        }\r\n\r\n        .sb-header-settings {\r\n            display: none;\r\n        }\r\n\r\n        .product-style a{\r\n        padding-right: 15px;\r\n        font-family:Roboto;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        color: #363636;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        }\r\n        .product-style a:hover {\r\n            color:#3C78EF;\r\n        }\r\n\r\n        .sb-download-btn a {\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-download-text {\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-wrapper {\r\n            padding-right: 27px;\r\n        }\r\n\r\n        .sb-download-btn:hover .sb-download-btn:focus .sb-download-btn.active {\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\";\r\n            font-weight: bold;\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-btn:hover {\r\n            background: #006CE6;\r\n        }\r\n\r\n        .sb-download-btn:focus {\r\n            background: #0051CB;\r\n        }\r\n\r\n        .sb-download-btn.active {\r\n            background: #0036B1;\r\n        }\r\n\r\n        .sb-download-btn {\r\n            background-color: #3C78EF;\r\n            opacity: 100;\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n            font-weight: 500;\r\n            line-height: 18px;\r\n            height: 32px;\r\n            border-color: transparent;\r\n        }\r\n\r\n        .sb-bread-crumb {\r\n            padding-left: 20px;\r\n            padding-top: 24px;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        .category-allcontrols a, .category-text a, .crumb-sample {\r\n            display: table;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #3C78EF;\r\n            text-align: left;\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-bread-crumb .sb-bread-crumb-text>div {\r\n            font-size: 15px;\r\n            font-weight: 500;\r\n            padding-right: 8px;\r\n            cursor: default;\r\n            display: table-cell;\r\n        }\r\n\r\n        .sb-bread-crumb-text>div.seperator {\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            vertical-align: bottom;\r\n        } \r\n\r\n        .content {\r\n        overflow: auto;\r\n        height: calc(100% - 50px);\r\n        top: 50px;\r\n        }\r\n\r\n\r\n        .sample-content {\r\n            top: 48px;\r\n            background: #FFFFFF;\r\n        }\r\n\r\n        .div {\r\n        display: block;\r\n        }\r\n\r\n        .control-section {\r\n            padding-left: 4px;\r\n        }\r\n\r\n        .crumb-sample {\r\n            color: #000000;\r\n            line-height: 18px;\r\n        }\r\n\r\n        #description {\r\n            padding-bottom: 16px;\r\n            padding-left: 20px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n            padding-top: 14px;\r\n        }\r\n\r\n        #action-description {\r\n            padding-left: 20px;\r\n            padding-bottom: 15px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        #description-section {\r\n            padding-left: 20px;\r\n            padding-top: 30px;\r\n            opacity: 0.87;\r\n            font-family:Roboto;\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n\r\n\r\n    </style>\r\n</head>\r\n\r\n<body class='e-view ej2-new' aria-busy=\"true\">\r\n        <div class=\"sample-browser\">\r\n            <div id='sample-header' class=\"sb-header\" role=\"banner\">\r\n                <div class='sb-header-left sb-left sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"header-logo\">\r\n                            <a href=\"https://ej2.syncfusion.com/home/react.html\" target=\"\" rel=\"noopener noreferrer\">\r\n                                <div class=\"footer-logo\"> </div>\r\n                            </a>\r\n                        </div>\r\n    \r\n                    </div>\r\n                    <div class=\"sb-header-splitter sb-download-splitter\"></div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div id='sb-header-text' class='e-sb-header-text'>\r\n    \r\n                            <span class='sb-header-text-left'>Essential JS 2 for React</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class='sb-header-right sb-right sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class='product-style'>\r\n                            <div><a href=\"https://www.syncfusion.com/products/react/diagram\">PRODUCT DETAILS</a></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"sb-header-item sb-table-cell sb-download-wrapper\">\r\n                            <a href=\"https://www.syncfusion.com/downloads/essential-js2\" target=\"_blank\">\r\n                                <button id=\"download-now\" class=\"sb-download-btn\">\r\n                                    <span class=\"sb-download-text\">DOWNLOAD</span>\r\n                                </button>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n            <div class ='content e-view'>\r\n            <div class='sample-content'>\r\n                <div id=\"sample-bread-crumb\" class=\"sb-bread-crumb\">\r\n                    <div class=\"sb-bread-crumb-text\">\r\n                        <div class=\"category-allcontrols\"><a href=\"https://ej2.syncfusion.com/react/demos\"><span>All Controls</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"category-text bread-ctext\"><a href=\"https://ej2.syncfusion.com/react/demos/#/material/diagram/default.html\"><span>Diagram</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"crumb-sample\">ShapeGallery</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"control-content\">\r\n                <div id=\"action-description\">\r\n                        <p>\r\n                            \n          <p>\n            This sample illustrates basic built-in shapes, such as basic shapes,\n            flow shapes, and BPMN shapes.\n          </p>\n        \r\n                        </p>\r\n                    </div>\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"control-section\">\r\n                            <div id='sample'>\r\n                                <div id='loader'>Loading....</div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    </div>\r\n                    <div id=\"description-section\">Description</div>    \r\n                    <div id=\"description\">\r\n                        <p>\r\n                           \n          <p>\n            This example shows how to define built-in shapes that are used to\n            visualize geometric information, work flow, or a business flow\n            diagrams. The <code>shape</code> property can be used to define the\n            category of built-in shapes. Additionally, the\n            <code>type</code> property of the <code>shape</code> allows you to\n            choose the type of the shape.\n          </p>\n          <p 500=\"\" style=\"{{\" fontweight:=\"\" }}=\"\">Injecting Module</p>\n\n          <p>\n            The diagram component&#x2019;s features are segregated into individual\n            feature-wise modules. To use the BPMN shapes, inject\n            <code>BpmnDiagrams</code> module into <code>services</code>.\n          </p>\n          <br>\n        \r\n                         </p>     \r\n                    </div>    \r\n                </div>             \r\n            </div>\r\n                \r\n            </div>\r\n        </div>\r\n          \r\n</body>\r\n</html>\r\n","app/index.tsx":"import * as ReactDOM from \"react-dom\";\r\nimport * as React from \"react\";\r\nimport {\r\n  BpmnDiagrams,\r\n  SnapConstraints,\r\n  DiagramComponent,\r\n  NodeModel,\r\n  BasicShapeModel,\r\n  Node,\r\n  Connector,\r\n  Diagram,\r\n  Inject,\r\n  DataBinding,\r\n  FlowShapes,\r\n  TextModel,\r\n  ShapeModel,\r\n  FlowShapeModel,\r\n  NodeConstraints\r\n} from \"@syncfusion/ej2-react-diagrams\";\r\nimport { SampleBase } from './sample-base';\r\nimport { ChangeEventArgs } from \"@syncfusion/ej2-react-buttons\";\r\nimport {\r\n  DropDownListComponent,\r\n  ChangeEventArgs as DropDownChangeEventArgs\r\n} from \"@syncfusion/ej2-react-dropdowns\";\r\n\r\nlet basicShapeModel: NodeModel[] = [\r\n  {\r\n    shape: { type: \"Text\", content: \"Basic Shapes\" },\r\n    constraints: NodeConstraints.PointerEvents,\r\n    style: {\r\n      fontSize: 16,\r\n      fill: \"None\",\r\n      fontFamily: \"sans-serif\",\r\n      bold: true,\r\n      strokeWidth: 0\r\n    }\r\n  },\r\n  {\r\n    shape: { type: \"Basic\", shape: \"Rectangle\" },\r\n    annotations: [{ content: \"Rectangle\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Basic\", shape: \"Ellipse\" },\r\n    annotations: [{ content: \"Ellipse\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Basic\", shape: \"Triangle\" },\r\n    annotations: [{ content: \"Triangle\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Basic\", shape: \"Plus\" },\r\n    annotations: [{ content: \"Plus\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Basic\", shape: \"Star\" },\r\n    annotations: [{ content: \"Star\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Basic\", shape: \"Pentagon\" },\r\n    annotations: [{ content: \"Pentagon\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Basic\", shape: \"Heptagon\" },\r\n    annotations: [{ content: \"Heptagon\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Basic\", shape: \"Octagon\" },\r\n    annotations: [{ content: \"Octagon\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Basic\", shape: \"Trapezoid\" },\r\n    annotations: [{ content: \"Trapezoid\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Basic\", shape: \"Decagon\" },\r\n    annotations: [{ content: \"Decagon\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Basic\", shape: \"RightTriangle\" },\r\n    annotations: [{ content: \"Right Triangle\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Basic\", shape: \"Parallelogram\" },\r\n    annotations: [{ content: \"Parallelogram\" }]\r\n  }\r\n];\r\n\r\nlet flowShapeModel: NodeModel[] = [\r\n  {\r\n    shape: { type: \"Text\", content: \"Flow Shapes\" },\r\n    constraints: NodeConstraints.PointerEvents,\r\n    style: {\r\n      fontSize: 16,\r\n      fill: \"None\",\r\n      fontFamily: \"sans-serif\",\r\n      bold: true,\r\n      strokeWidth: 0\r\n    }\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"Terminator\" },\r\n    annotations: [{ content: \"Terminator\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"Process\" },\r\n    annotations: [{ content: \"Process\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"Decision\" },\r\n    annotations: [{ content: \"Decision\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"Document\" },\r\n    annotations: [{ content: \"Document\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"PreDefinedProcess\" },\r\n    annotations: [{ content: \"Predefined Process\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"PaperTap\" },\r\n    annotations: [{ content: \"Paper Tape\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"DirectData\" },\r\n    annotations: [{ content: \"Direct Data\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"SequentialData\" },\r\n    annotations: [{ content: \"Direct Data\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"Sort\" },\r\n    annotations: [{ content: \"Sort\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"MultiDocument\" },\r\n    annotations: [{ content: \"Multi-Document\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"Collate\" },\r\n    annotations: [{ content: \"Collate\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"SummingJunction\" },\r\n    annotations: [{ content: \"Summing Junction\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"Or\" },\r\n    annotations: [{ content: \"Or\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"InternalStorage\" },\r\n    annotations: [{ content: \"Internal Storage\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"Extract\" },\r\n    annotations: [{ content: \"Extract\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"ManualOperation\" },\r\n    annotations: [{ content: \"Manual Operation\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"Merge\" },\r\n    annotations: [{ content: \"Merge\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"OffPageReference\" },\r\n    annotations: [{ content: \"Off-Page Reference\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"SequentialAccessStorage\" },\r\n    annotations: [{ content: \"Sequential Access Storage\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"Data\" },\r\n    annotations: [{ content: \"Data\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Flow\", shape: \"Card\" },\r\n    annotations: [{ content: \"Card\" }]\r\n  }\r\n];\r\n\r\nlet bpmnShapeModel: NodeModel[] = [\r\n  {\r\n    shape: { type: \"Text\", content: \"BPMN Shapes\" },\r\n    constraints: NodeConstraints.PointerEvents,\r\n    style: {\r\n      fontSize: 16,\r\n      fill: \"none\",\r\n      fontFamily: \"sans-serif\",\r\n      bold: true,\r\n      strokeWidth: 0\r\n    }\r\n  },\r\n  {\r\n    shape: {\r\n      type: \"Bpmn\",\r\n      shape: \"Event\",\r\n      event: { event: \"Start\", trigger: \"None\" }\r\n    },\r\n    annotations: [{ content: \"Start Event\" }]\r\n  },\r\n  {\r\n    shape: {\r\n      type: \"Bpmn\",\r\n      shape: \"Event\",\r\n      event: { event: \"Intermediate\", trigger: \"None\" }\r\n    },\r\n    annotations: [{ content: \"Intermediate Event\" }]\r\n  },\r\n  {\r\n    shape: {\r\n      type: \"Bpmn\",\r\n      shape: \"Event\",\r\n      event: { event: \"End\", trigger: \"None\" }\r\n    },\r\n    annotations: [{ content: \"End Event\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Bpmn\", shape: \"Gateway\" },\r\n    annotations: [{ content: \"Gateway\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Bpmn\", shape: \"Activity\", activity: { activity: \"Task\" } },\r\n    annotations: [{ content: \"Task\" }]\r\n  },\r\n  {\r\n    shape: {\r\n      type: \"Bpmn\",\r\n      shape: \"Activity\",\r\n      activity: {\r\n        activity: \"SubProcess\",\r\n        subProcess: {\r\n          type: \"Transaction\",\r\n          transaction: {\r\n            success: { visible: false },\r\n            failure: { visible: false },\r\n            cancel: { visible: false }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    annotations: [{ content: \"Transaction\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Bpmn\", shape: \"Message\" },\r\n    annotations: [{ content: \"Message\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Bpmn\", shape: \"DataObject\" },\r\n    annotations: [{ content: \"Data Object\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Bpmn\", shape: \"DataSource\" },\r\n    annotations: [{ content: \"Data Source\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Bpmn\", shape: \"Group\" },\r\n    annotations: [{ content: \"Group\" }]\r\n  },\r\n  {\r\n    shape: { type: \"Bpmn\", shape: \"TextAnnotation\" },\r\n    annotations: [{ content: \"Text Annotation\" }]\r\n  }\r\n];\r\n\r\nlet shape: { [key: string]: Object }[] = [\r\n  { shapeName: \"Basic Shapes\", shapeId: \"Basic\" },\r\n  { shapeName: \"Flow Shapes\", shapeId: \"Flow\" },\r\n  { shapeName: \"BPMN Shapes\", shapeId: \"Bpmn\" }\r\n];\r\n\r\nconst SAMPLE_CSS = `.image-pattern-style {\r\n    background-color: white;\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    height: 75px;\r\n    width: calc((100% - 12px) / 3);\r\n    cursor: pointer;\r\n    border: 1px solid #D5D5D5;\r\n    background-position: center;\r\n    float: left;\r\n}\r\n\r\n.row {\r\n    margin-left: 0px;\r\n    margin-right: 0px;\r\n}\r\n\r\n.row-header {\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n}\r\n\r\n.property-panel-header {\r\n    color: rgba(0, 0, 0, .7)\r\n}\r\n}`;\r\n\r\nlet diagramInstance: DiagramComponent;\r\n\r\nexport class ShapeGallery extends SampleBase<{}, {}> {\r\n  rendereComplete() {\r\n    diagramInstance.fitToPage({ mode: \"Width\" });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"control-pane\">\r\n        <style>{SAMPLE_CSS}</style>\r\n        <div\r\n          className=\"control-section\"\r\n        >\r\n          <div className=\"content-wrapper\" style={{ width: \"100%\" }}>\r\n            <DiagramComponent\r\n              id=\"diagram\"\r\n              ref={diagram => (diagramInstance = diagram)}\r\n              width={\"100%\"}\r\n              height={\"499px\"}\r\n              snapSettings={{ constraints: SnapConstraints.None }}\r\n              nodes={getNodes()}\r\n              //Defines the default node and connector properties\r\n              getNodeDefaults={(obj: Node, diagram: Diagram) => {\r\n                return obj;\r\n              }}\r\n            >\r\n              <Inject services={[DataBinding, BpmnDiagrams]} />\r\n            </DiagramComponent>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction getNodes() {\r\n  var nodes1 = basicShapeModel;\r\n  nodes1 = nodes1.concat(flowShapeModel).concat(bpmnShapeModel);\r\n  var offsetx = 60;\r\n  var offsety = 50;\r\n  var count = 1;\r\n  for (var i = 0; i < nodes1.length; i++) {\r\n    var node = nodes1[i] as NodeModel;\r\n    node.width = 40;\r\n    node.height = 40;\r\n    if (node.shape.type === \"Flow\") {\r\n      let shapeType: FlowShapes = (node.shape as FlowShapeModel).shape;\r\n      if (shapeType === \"Process\" || shapeType === \"Terminator\") {\r\n        node.height = 20;\r\n      } else if (shapeType === \"Decision\") {\r\n        node.height = 35;\r\n      } else if (\r\n        shapeType === \"Document\" ||\r\n        shapeType === \"DirectData\" ||\r\n        shapeType === \"MultiDocument\" ||\r\n        shapeType === \"PreDefinedProcess\"\r\n      ) {\r\n        node.height = 30;\r\n      }\r\n    }\r\n    node.offsetX = offsetx;\r\n    node.offsetY = offsety;\r\n    if (!(node.shape.type === \"Text\")) {\r\n      node.annotations[0].verticalAlignment = \"Top\";\r\n      node.annotations[0].offset = { y: 1 };\r\n      node.annotations[0].margin = { top: 10 };\r\n\r\n      offsetx = offsetx + 90;\r\n      if (count % 10 === 0) {\r\n        offsety = offsety + 100;\r\n        offsetx = 60;\r\n      }\r\n      count++;\r\n    }\r\n    if (node.shape.type === \"Text\") {\r\n      offsetx = 60;\r\n      offsety = offsety + 50;\r\n      count = 1;\r\n      node.width = 150;\r\n      node.height = 100;\r\n      node.offsetX = 90;\r\n      if (!((node.shape as TextModel).content === \"Basic Shapes\")) {\r\n        node.offsetX = 90;\r\n        node.offsetY = offsety + 50;\r\n        offsety = offsety + 100;\r\n      }\r\n    }\r\n  }\r\n  return nodes1;\r\n}\r\n\r\nexport interface GalleryInfo {\r\n  type: string;\r\n  shape: string;\r\n  text: string;\r\n}\r\n\nReactDOM.render(<ShapeGallery />, document.getElementById('sample'));","app/sample-base.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { enableRipple } from '@syncfusion/ej2-base';\r\n\r\nenableRipple((window as any).ripple);\r\nexport class SampleBase<P, S> extends React.PureComponent<RouteComponentProps<any> & P, S>{\r\n    public rendereComplete(): void {\r\n        /**custom render complete function */\r\n    }\r\n    componentDidMount(): void {\r\n        setTimeout(() => {\r\n            this.rendereComplete();\r\n        }\r\n        );\r\n    }\r\n}"}