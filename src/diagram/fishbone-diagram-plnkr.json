{"index.css":"","systemjs.config.js":"System.config({\r\n    transpiler: \"ts\",\r\n    typescriptOptions: {\r\n            target: \"es5\",\r\n            module: \"commonjs\",\r\n            moduleResolution: \"node\",\r\n            emitDecoratorMetadata: true,\r\n            experimentalDecorators: true,\r\n            \"jsx\": \"react\"\r\n    },\r\n     meta: {\r\n      'typescript': {\r\n        \"exports\": \"ts\"\r\n      },\r\n      '*.json': { loader: 'plugin-json' }\r\n    },\r\n    paths: {\r\n        \"syncfusion:\": \"http://cdn.syncfusion.com/ej2/\"},\r\n    map: {\r\n        app: 'app',\r\n        ts: \"https://unpkg.com/plugin-typescript@4.0.10/lib/plugin.js\",\r\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\r\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\r\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\r\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-splitbuttons\": \"syncfusion:ej2-splitbuttons/dist/ej2-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-maps\": \"syncfusion:ej2-maps/dist/ej2-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-treemap\": \"syncfusion:ej2-treemap/dist/ej2-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\r\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-schedule\": \"syncfusion:ej2-schedule/dist/ej2-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\r\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\r\n        \"@syncfusion/ej2-documenteditor\": \"syncfusion:ej2-documenteditor/dist/ej2-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-notifications\": \"syncfusion:ej2-notifications/dist/ej2-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-richtexteditor\": \"syncfusion:ej2-richtexteditor/dist/ej2-richtexteditor.umd.min.js\",\r\n\t\t\"@syncfusion/ej2-svg-base\": \"syncfusion:ej2-svg-base/dist/ej2-svg-base.umd.min.js\",\r\n        \"@syncfusion/ej2-pivotview\": \"syncfusion:ej2-pivotview/dist/ej2-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-heatmap\": \"syncfusion:ej2-heatmap/dist/ej2-heatmap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-base\": \"syncfusion:ej2-react-base/dist/ej2-react-base.umd.min.js\",\r\n        \"@syncfusion/ej2-react-buttons\": \"syncfusion:ej2-react-buttons/dist/ej2-react-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-splitbuttons\": \"syncfusion:ej2-react-splitbuttons/dist/ej2-react-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-charts\": \"syncfusion:ej2-react-charts/dist/ej2-react-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-react-maps\": \"syncfusion:ej2-react-maps/dist/ej2-react-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-react-treemap\": \"syncfusion:ej2-react-treemap/dist/ej2-react-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-circulargauge\": \"syncfusion:ej2-react-circulargauge/dist/ej2-react-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lineargauge\": \"syncfusion:ej2-react-lineargauge/dist/ej2-react-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-calendars\": \"syncfusion:ej2-react-calendars/dist/ej2-react-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-react-dropdowns\": \"syncfusion:ej2-react-dropdowns/dist/ej2-react-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-react-grids\": \"syncfusion:ej2-react-grids/dist/ej2-react-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-react-inputs\": \"syncfusion:ej2-react-inputs/dist/ej2-react-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lists\": \"syncfusion:ej2-react-lists/dist/ej2-react-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-react-navigations\": \"syncfusion:ej2-react-navigations/dist/ej2-react-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-react-popups\": \"syncfusion:ej2-react-popups/dist/ej2-react-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-react-schedule\": \"syncfusion:ej2-react-schedule/dist/ej2-react-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-react-documenteditor\": \"syncfusion:ej2-react-documenteditor/dist/ej2-react-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-notifications\": \"syncfusion:ej2-react-notifications/dist/ej2-react-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-react-richtexteditor\": \"syncfusion:ej2-react-richtexteditor/dist/ej2-react-richtexteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-pivotview\": \"syncfusion:ej2-react-pivotview/dist/ej2-react-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-react-heatmap\": \"syncfusion:ej2-react-heatmap/dist/ej2-react-heatmap.umd.min.js\",\r\n        \"react-dom\":\"https://unpkg.com/react-dom@15.5.4/dist/react-dom.min.js\",\r\n        \"react\":\"https://unpkg.com/react@15.5.4/dist/react.min.js\",\r\n    },\r\n    packages: {\r\n        'app': { main: 'index', defaultExtension: 'tsx' },\r\n    }\r\n});\r\n\r\nSystem.import('app');","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Diagram · Fishbone · Essential JS 2 for React · Syncfusion</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <!-- {{:meta}} -->\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <script type=\"text/javascript\">\r\n        var themeName = location.hash || 'material';\r\n        themeName = themeName.replace('#','');\r\n        window.ripple = (themeName === \"material\")\r\n        document.write('<link href=\"http://cdn.syncfusion.com/ej2/' + themeName + '.css\" rel=\"stylesheet\">');\r\n    </script>\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\r\n    <script src=\"systemjs.config.js\"></script>\r\n    <link href=\"index.css\" rel=\"stylesheet\" />\r\n     <style>\r\n        #loader {\r\n            color: #008cff;\r\n            height: 40px;\r\n            left: 45%;\r\n            position: absolute;\r\n            top: 45%;\r\n            width: 30%;\r\n        }\r\n        body {\r\n            touch-action:none;\r\n        }\r\n        .body {\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n        }\r\n\r\n        .e-view {\r\n            bottom: 0;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n        }\r\n\r\n        .sb-left {\r\n            float: left;\r\n        }\r\n\r\n        .sb-right {\r\n            float: right;\r\n        }\r\n\r\n        .sb-block {\r\n            display: block;\r\n        }\r\n\r\n        .sb-table {\r\n            display: table;\r\n        }\r\n\r\n        .sb-table-cell {\r\n            display: table-cell;\r\n            vertical-align: middle;\r\n        }\r\n\r\n        /*sample header*/\r\n\r\n\r\n        .sb-header {\r\n            height: 48px;\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.12);\r\n            z-index: 1001;\r\n            opacity: 100;\r\n        }\r\n\r\n\r\n        .sb-header-left, .sb-header-right {\r\n            height: 100%;\r\n        }\r\n\r\n        #sb-header-text {\r\n            padding-left: 22px;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        .header-logo {\r\n            float: left;\r\n            padding-left: 8px;\r\n            padding-right: 22px;\r\n        }\r\n\r\n        .footer-logo {\r\n            background: url(https://ej2.syncfusion.com/home/images/footer-logo.svg) no-repeat right;\r\n            height: 40px;\r\n            width: 140px;\r\n        }\r\n\r\n        .sb-header-splitter {\r\n            float: left;\r\n            border-left: 1px solid rgb(196, 196, 196);\r\n            height: 32px;\r\n            margin-top: 8px;\r\n            padding-left: 22 px;\r\n        }\r\n\r\n        .sb-header-settings {\r\n            display: none;\r\n        }\r\n\r\n        .product-style a{\r\n        padding-right: 15px;\r\n        font-family:Roboto;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        color: #363636;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        }\r\n        .product-style a:hover {\r\n            color:#3C78EF;\r\n        }\r\n\r\n        .sb-download-btn a {\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-download-text {\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-wrapper {\r\n            padding-right: 27px;\r\n        }\r\n\r\n        .sb-download-btn:hover .sb-download-btn:focus .sb-download-btn.active {\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\";\r\n            font-weight: bold;\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-btn:hover {\r\n            background: #006CE6;\r\n        }\r\n\r\n        .sb-download-btn:focus {\r\n            background: #0051CB;\r\n        }\r\n\r\n        .sb-download-btn.active {\r\n            background: #0036B1;\r\n        }\r\n\r\n        .sb-download-btn {\r\n            background-color: #3C78EF;\r\n            opacity: 100;\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n            font-weight: 500;\r\n            line-height: 18px;\r\n            height: 32px;\r\n            border-color: transparent;\r\n        }\r\n\r\n        .sb-bread-crumb {\r\n            padding-left: 20px;\r\n            padding-top: 24px;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        .category-allcontrols a, .category-text a, .crumb-sample {\r\n            display: table;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #3C78EF;\r\n            text-align: left;\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-bread-crumb .sb-bread-crumb-text>div {\r\n            font-size: 15px;\r\n            font-weight: 500;\r\n            padding-right: 8px;\r\n            cursor: default;\r\n            display: table-cell;\r\n        }\r\n\r\n        .sb-bread-crumb-text>div.seperator {\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            vertical-align: bottom;\r\n        } \r\n\r\n        .content {\r\n        overflow: auto;\r\n        height: calc(100% - 50px);\r\n        top: 50px;\r\n        }\r\n\r\n\r\n        .sample-content {\r\n            top: 48px;\r\n            background: #FFFFFF;\r\n        }\r\n\r\n        .div {\r\n        display: block;\r\n        }\r\n\r\n        .control-section {\r\n            padding-left: 4px;\r\n        }\r\n\r\n        .crumb-sample {\r\n            color: #000000;\r\n            line-height: 18px;\r\n        }\r\n\r\n        #description {\r\n            padding-bottom: 16px;\r\n            padding-left: 20px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n            padding-top: 14px;\r\n        }\r\n\r\n        #action-description {\r\n            padding-left: 20px;\r\n            padding-bottom: 15px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        #description-section {\r\n            padding-left: 20px;\r\n            padding-top: 30px;\r\n            opacity: 0.87;\r\n            font-family:Roboto;\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n\r\n\r\n    </style>\r\n</head>\r\n\r\n<body class='e-view ej2-new' aria-busy=\"true\">\r\n        <div class=\"sample-browser\">\r\n            <div id='sample-header' class=\"sb-header\" role=\"banner\">\r\n                <div class='sb-header-left sb-left sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"header-logo\">\r\n                            <a href=\"https://ej2.syncfusion.com/home/react.html\" target=\"\" rel=\"noopener noreferrer\">\r\n                                <div class=\"footer-logo\"> </div>\r\n                            </a>\r\n                        </div>\r\n    \r\n                    </div>\r\n                    <div class=\"sb-header-splitter sb-download-splitter\"></div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div id='sb-header-text' class='e-sb-header-text'>\r\n    \r\n                            <span class='sb-header-text-left'>Essential JS 2 for React</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class='sb-header-right sb-right sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class='product-style'>\r\n                            <div><a href=\"https://www.syncfusion.com/products/react/diagram\">PRODUCT DETAILS</a></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"sb-header-item sb-table-cell sb-download-wrapper\">\r\n                            <a href=\"https://www.syncfusion.com/downloads/essential-js2\" target=\"_blank\">\r\n                                <button id=\"download-now\" class=\"sb-download-btn\">\r\n                                    <span class=\"sb-download-text\">DOWNLOAD</span>\r\n                                </button>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n            <div class ='content e-view'>\r\n            <div class='sample-content'>\r\n                <div id=\"sample-bread-crumb\" class=\"sb-bread-crumb\">\r\n                    <div class=\"sb-bread-crumb-text\">\r\n                        <div class=\"category-allcontrols\"><a href=\"https://ej2.syncfusion.com/react/demos\"><span>All Controls</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"category-text bread-ctext\"><a href=\"https://ej2.syncfusion.com/react/demos/#/material/diagram/default.html\"><span>Diagram</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"crumb-sample\">Fishbone</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"control-content\">\r\n                <div id=\"action-description\">\r\n                        <p>\r\n                            \n          <p>\n            This sample visually represents a simple fishbone diagram (Ishikawa).\n             Diagram nodes and annotations are used to define fishbone diagrams. Read-only mode is enabled here.\n</p>\n        \r\n                        </p>\r\n                    </div>\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"control-section\">\r\n                            <div id='sample'>\r\n                                <div id='loader'>Loading....</div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    </div>\r\n                    <div id=\"description-section\">Description</div>    \r\n                    <div id=\"description\">\r\n                        <p>\r\n                           \n          <p>\n            This sample shows how to create a fishbone diagram (Ishikawa) using diagram control.\n            Here, zoom and pan options are enabled. The tool property of the diagram control\n            allows you to enable or disable zoom and pan options.\n\n          </p>\n\n          <p 500=\"\" style=\"{{\" fontweight:=\"\" }}=\"\">Injecting Module</p>\n          <p>\n            The diagram component&#x2019;s features are segregated into individual\n            feature-wise modules. To generate diagrams from an external data\n            source, inject <code>DataBinding</code> module using{&quot; &quot;}\n            <code>Diagram.Inject(DataBinding)</code> method. To automatically\n            arrange the objects in a hierarchical structure, inject{&quot; &quot;}\n            <code>HierarchicalTree</code> module into <code>services</code>.\n          </p>\n          <br>\n        \r\n                         </p>     \r\n                    </div>    \r\n                </div>             \r\n            </div>\r\n                \r\n            </div>\r\n        </div>\r\n          \r\n</body>\r\n</html>\r\n","app/index.tsx":"import * as ReactDOM from \"react-dom\";\r\nimport * as React from \"react\";\r\nimport {\r\n  Node,\r\n  Canvas,\r\n  PathElement,\r\n  HorizontalAlignment,\r\n  DiagramElement,\r\n  TextElement,\r\n  PortVisibility,\r\n  HierarchicalTree,\r\n  DataBinding,\r\n  DiagramComponent,\r\n  Diagram,\r\n  NodeModel,\r\n  ConnectorModel,\r\n  Connector,\r\n  SnapConstraints,\r\n  DecoratorModel,\r\n  Inject,\r\n  DiagramTools\r\n} from \"@syncfusion/ej2-react-diagrams\";\r\nimport { SampleBase } from './sample-base';\r\nimport { DataManager } from \"@syncfusion/ej2-data\";\r\nimport { Point } from \"@syncfusion/ej2-diagrams/src/diagram/primitives/point\";\r\n\r\nlet nodes: NodeModel[] = [\r\n  {\r\n    id: 'Equipment', width: 120, height: 40, offsetX: 300, offsetY: 80,\r\n    annotations: [{ content: 'Equipment', style: { color: 'white' } }],\r\n    style: { fill: '#39AFA9' }, borderColor: '05776C',\r\n    shape: { type: 'Path', data: 'M 10 0 L 166 0 L 156 44 L 0 44 z' }\r\n  },\r\n  {\r\n    id: 'Environment', width: 120, height: 40, offsetX: 450, offsetY: 80,\r\n    annotations: [{ content: 'Environment', style: { color: 'white' } }],\r\n    style: { fill: '#39AFA9' }, borderColor: '05776C',\r\n    shape: { type: 'Path', data: 'M 10 0 L 166 0 L 156 44 L 0 44 z' }\r\n  },\r\n  {\r\n    id: 'Person', width: 120, height: 40, offsetX: 600, offsetY: 80,\r\n    annotations: [{ content: 'Person', style: { color: 'white' } }],\r\n    style: { fill: '#39AFA9' }, borderColor: '05776C',\r\n    shape: { type: 'Path', data: 'M 10 0 L 166 0 L 156 44 L 0 44 z' }\r\n  },\r\n  {\r\n    id: 'Materials', width: 120, height: 40, offsetX: 300, offsetY: 600,\r\n    annotations: [{ content: 'Materials', style: { color: 'white' } }],\r\n    style: { fill: '#39AFA9' }, borderColor: '05776C',\r\n    shape: { type: 'Path', data: 'M 10 0 L 166 0 L 156 44 L 0 44 z' }\r\n  },\r\n  {\r\n    id: 'Machine', width: 120, height: 40, offsetX: 450, offsetY: 600,\r\n    annotations: [{ content: 'Machine', style: { color: 'white' } }],\r\n    style: { fill: '#39AFA9' }, borderColor: '05776C',\r\n    shape: { type: 'Path', data: 'M 10 0 L 166 0 L 156 44 L 0 44 z' }\r\n  },\r\n  {\r\n    id: 'Methods', width: 120, height: 40, offsetX: 600, offsetY: 600,\r\n    annotations: [{ content: 'Methods', style: { color: 'white' } }],\r\n    style: { fill: '#39AFA9' }, borderColor: '05776C',\r\n    shape: {\r\n      type: 'Path', data: 'M 10 0 L 166 0 L 156 44 L 0 44 z'\r\n    }\r\n  },\r\n  {\r\n    id: 'ellipse1', width: 20, height: 20, offsetX: 290, offsetY: 130,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'ellipse2', width: 20, height: 20, offsetX: 323, offsetY: 183,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'ellipse3', width: 20, height: 20, offsetX: 354, offsetY: 237,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'ellipse4', width: 20, height: 20, offsetX: 440, offsetY: 130,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'ellipse5', width: 20, height: 20, offsetX: 470, offsetY: 182,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'ellipse6', width: 20, height: 20, offsetX: 590, offsetY: 130,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'ellipse7', width: 20, height: 20, offsetX: 622, offsetY: 179,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'ellipse8', width: 20, height: 20, offsetX: 660, offsetY: 221,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'ellipse9', width: 20, height: 20, offsetX: 694, offsetY: 264,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'ellipse10', width: 20, height: 20, offsetX: 354, offsetY: 460,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'ellipse11', width: 20, height: 20, offsetX: 590, offsetY: 530,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'ellipse12', width: 20, height: 20, offsetX: 660, offsetY: 460,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'ellipse13', width: 20, height: 20, offsetX: 440, offsetY: 530,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'ellipse14', width: 20, height: 20, offsetX: 510, offsetY: 460,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'ellipse15', width: 20, height: 20, offsetX: 290, offsetY: 530,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'Colorellipse1', width: 50, height: 50, offsetX: 717, offsetY: 310,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'Colorellipse2', width: 50, height: 50, offsetX: 560, offsetY: 310,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'Colorellipse3', width: 50, height: 50, offsetX: 390, offsetY: 310,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'Colorellipse4', width: 50, height: 50, offsetX: 220, offsetY: 310,\r\n    annotations: [{ content: ' ', style: { color: 'white' } }],\r\n    shape: { type: 'Basic', shape: 'Ellipse' }, style: { strokeColor: '#A52A2A' }\r\n  },\r\n  {\r\n    id: 'Colorellipse5', width: 140, height: 90, offsetX: 900, offsetY: 310,\r\n    annotations: [{ content: 'Productivity Increase', style: { color: 'white' } }],\r\n    style: { fill: '#39AFA9' }, borderColor: '05776C',\r\n    shape: { type: 'Basic', shape: 'Ellipse' }\r\n  },\r\n  {\r\n    id: 'TextPrograms', width: 90, height: 20, offsetX: 189, offsetY: 130,\r\n    style: { fill: 'transparent', strokeWidth: 0 },\r\n    shape: { type: 'Text', content: 'Text Programs' }\r\n  },\r\n  {\r\n    id: 'Ventilatorssound', width: 120, height: 20, offsetX: 359, offsetY: 130,\r\n    style: { fill: 'transparent', strokeWidth: 0 },\r\n    shape: { type: 'Text', content: 'Ventilators Sound' }\r\n  },\r\n  {\r\n    id: 'Education', width: 70, height: 20, offsetX: 500, offsetY: 130,\r\n    style: { fill: 'transparent', strokeWidth: 0 },\r\n    shape: { type: 'Text', content: 'Education' }\r\n  },\r\n  {\r\n    id: 'DataBooks', width: 70, height: 20, offsetX: 213, offsetY: 183,\r\n    style: { fill: 'transparent', strokeWidth: 0 },\r\n    shape: { type: 'Text', content: 'DataBooks' }\r\n  },\r\n  {\r\n    id: 'Fixtures', width: 70, height: 20, offsetX: 240, offsetY: 237,\r\n    style: { fill: 'transparent', strokeWidth: 0 },\r\n    shape: { type: 'Text', content: 'Fixtures' }\r\n  },\r\n  {\r\n    id: 'Noise', width: 70, height: 20, offsetX: 390, offsetY: 182,\r\n    style: { fill: 'transparent', strokeWidth: 0 },\r\n    shape: { type: 'Text', content: 'Noise' }\r\n  },\r\n  {\r\n    id: 'Motivation', width: 70, height: 20, offsetX: 535, offsetY: 182,\r\n    style: { fill: 'transparent', strokeWidth: 0 },\r\n    shape: { type: 'Text', content: 'Motivation' }\r\n  },\r\n  {\r\n    id: 'Tiredness', width: 70, height: 20, offsetX: 565, offsetY: 224,\r\n    style: { fill: 'transparent', strokeWidth: 0 },\r\n    shape: { type: 'Text', content: 'Tiredness' }\r\n  },\r\n  {\r\n    id: 'Storer', width: 70, height: 20, offsetX: 606, offsetY: 264,\r\n    style: { fill: 'transparent', strokeWidth: 0 },\r\n    shape: { type: 'Text', content: 'Storer' }\r\n  },\r\n  {\r\n    id: 'Computer', width: 70, height: 20, offsetX: 260, offsetY: 460,\r\n    style: { fill: 'transparent', strokeWidth: 0 },\r\n    shape: { type: 'Text', content: 'Computer' }\r\n  },\r\n  {\r\n    id: 'Quality', width: 120, height: 20, offsetX: 417, offsetY: 460,\r\n    style: { fill: 'transparent', strokeWidth: 0 },\r\n    shape: { type: 'Text', content: 'Quality of Element' }\r\n  },\r\n  {\r\n    id: 'Order', width: 70, height: 20, offsetX: 562, offsetY: 460,\r\n    style: { fill: 'transparent', strokeWidth: 0 },\r\n    shape: { type: 'Text', content: 'Order' }\r\n  },\r\n  {\r\n    id: 'Software', width: 70, height: 20, offsetX: 225, offsetY: 530,\r\n    style: { fill: 'transparent', strokeWidth: 0 },\r\n    shape: { type: 'Text', content: 'Software' }\r\n  },\r\n  {\r\n    id: 'Procurement', width: 70, height: 20, offsetX: 358, offsetY: 530,\r\n    style: { fill: 'transparent', strokeWidth: 0 },\r\n    shape: { type: 'Text', content: 'Procurement' }\r\n  },\r\n  {\r\n    id: 'Standardization', width: 90, height: 20, offsetX: 501, offsetY: 530,\r\n    style: { fill: 'transparent', strokeWidth: 0 },\r\n    shape: { type: 'Text', content: 'Standardization' }\r\n  },\r\n];\r\n//Initializes the Connectors for the diagram\r\nlet connectors: ConnectorModel[] = [\r\n  CreateConnector('equipellise', '5,5', 'Equipment', 'ellipse1', '#A52A2A', 2),\r\n  CreateConnector('connect12', '5,5', 'ellipse1', 'ellipse2', '#A52A2A', 2),\r\n  CreateConnector('connect13', '5,5', 'ellipse2', 'ellipse3', '#A52A2A', 2),\r\n  CreateConnector('connect14', '5,5', 'ellipse3', 'Colorellipse3', '#A52A2A', 2),\r\n  CreateConnector('connect15', '5,5', 'Environment', 'ellipse4', '#A52A2A', 2),\r\n  CreateConnector('connect16', '5,5', 'ellipse4', 'ellipse5', '#A52A2A', 2),\r\n  CreateConnector('connect17', '5,5', 'ellipse4', 'ellipse5', '#A52A2A', 2),\r\n  CreateConnector('connect18', '5,5', 'ellipse5', 'Colorellipse2', '#A52A2A', 2),\r\n  CreateConnector('connect19', '5,5', 'Person', 'ellipse6', '#A52A2A', 2),\r\n  CreateConnector('connect20', '5,5', 'ellipse6', 'ellipse7', '#A52A2A', 2),\r\n  CreateConnector('connect21', '5,5', 'ellipse7', 'ellipse8', '#A52A2A', 2),\r\n  CreateConnector('connect22', '5,5', 'ellipse8', 'ellipse9', '#A52A2A', 2),\r\n  CreateConnector('connect23', '5,5', 'ellipse9', 'Colorellipse1', '#A52A2A', 2),\r\n  CreateConnector('connect24', '5,5', 'Materials', 'ellipse15', '#A52A2A', 2),\r\n  CreateConnector('connect25', '5,5', 'ellipse15', 'ellipse10', '#A52A2A', 2),\r\n  CreateConnector('connect26', '5,5', 'ellipse10', 'Colorellipse3', '#A52A2A', 2),\r\n  CreateConnector('connect27', '5,5', 'Machine', 'ellipse13', '#A52A2A', 2),\r\n  CreateConnector('connect28', '5,5', 'ellipse13', 'ellipse14', '#A52A2A', 2),\r\n  CreateConnector('connect29', '5,5', 'ellipse14', 'Colorellipse2', '#A52A2A', 2),\r\n  CreateConnector('connect30', '5,5', 'Methods', 'ellipse11', '#A52A2A', 2),\r\n  CreateConnector('connect31', '5,5', 'ellipse11', 'ellipse12', '#A52A2A', 2),\r\n  CreateConnector('connect32', '5,5', 'ellipse12', 'Colorellipse1', '#A52A2A', 2),\r\n  CreateConnector('connect33', '', 'Colorellipse4', 'Colorellipse3', '#000000', 2),\r\n  CreateConnector('connect34', '', 'Colorellipse3', 'Colorellipse2', '#000000', 2),\r\n  CreateConnector('connect35', '', 'Colorellipse2', 'Colorellipse1', '#000000', 2),\r\n  CreateConnector('connect36', '', 'Colorellipse1', 'Colorellipse5', '#000000', 2),\r\n  CreateConnector('connect37', '5,5', 'TextPrograms', 'ellipse1', '#A52A2A', 2),\r\n  CreateConnector('connect38', '5,5', 'DataBooks', 'ellipse2', '#A52A2A', 2),\r\n  CreateConnector('connect39', '5,5', 'Fixtures', 'ellipse3', '#A52A2A', 2),\r\n  CreateConnector('connect40', '5,5', 'Ventilatorssound', 'ellipse4', '#A52A2A', 2),\r\n  CreateConnector('connect41', '5,5', 'Noise', 'ellipse5', '#A52A2A', 2),\r\n  CreateConnector('connect42', '5,5', 'Education', 'ellipse6', '#A52A2A', 2),\r\n  CreateConnector('connect43', '5,5', 'Motivation', 'ellipse7', '#A52A2A', 2),\r\n  CreateConnector('connect44', '5,5', 'Tiredness', 'ellipse8', '#A52A2A', 2),\r\n  CreateConnector('connect45', '5,5', 'Storer', 'ellipse9', '#A52A2A', 2),\r\n  CreateConnector('connect46', '5,5', 'Software', 'ellipse15', '#A52A2A', 2),\r\n  CreateConnector('connect47', '5,5', 'Computer', 'ellipse10', '#A52A2A', 2),\r\n  CreateConnector('connect48', '5,5', 'Procurement', 'ellipse13', '#A52A2A', 2),\r\n  CreateConnector('connect49', '5,5', 'Quality', 'ellipse14', '#A52A2A', 2),\r\n  CreateConnector('connect50', '5,5', 'Order', 'ellipse12', '#A52A2A', 2),\r\n  CreateConnector('connect51', '5,5', 'Standardization', 'ellipse11', '#A52A2A', 2)\r\n];\r\nlet diagramInstance: DiagramComponent;\r\n\r\nexport class Fishbone extends SampleBase<{}, {}> {\r\n  rendereComplete() {\r\n    diagramInstance.fitToPage({ mode: 'Width' });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"control-pane\">\r\n        <div className=\"control-section\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <DiagramComponent\r\n              id=\"diagram\"\r\n              ref={diagram => (diagramInstance = diagram)}\r\n              width={\"100%\"}\r\n              height={\"700px\"}\r\n              snapSettings={{ constraints: SnapConstraints.None }}\r\n              nodes={nodes}\r\n              connectors={connectors}\r\n              getConnectorDefaults={(connector: Connector) => {\r\n                connector.targetDecorator = { shape: 'Arrow', width: 5, height: 5 } as DecoratorModel;\r\n                if (connector.id !== 'connect33' && connector.id !== 'connect34' &&\r\n                  connector.id !== 'connect35' && connector.id !== 'connect36') {\r\n                  connector.targetDecorator.style = { strokeColor: '#A52A2A', fill: '#A52A2A' };\r\n                }\r\n              }}\r\n              tool={DiagramTools.ZoomPan}\r\n            >\r\n              <Inject services={[DataBinding, HierarchicalTree]} />\r\n            </DiagramComponent>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction CreateConnector(\r\n  name: string, lineDashArray: string, source: string, target: string, lineColor: string, lineWidth: number): ConnectorModel {\r\n  let connector: ConnectorModel = {};\r\n  connector.id = name;\r\n  connector.sourceID = source;\r\n  connector.targetID = target;\r\n  connector.style = {\r\n    strokeColor: lineColor,\r\n    strokeWidth: lineWidth,\r\n    strokeDashArray: lineDashArray,\r\n  };\r\n  return connector;\r\n}\r\nfunction created() {\r\n\r\n}\nReactDOM.render(<Fishbone />, document.getElementById('sample'));","app/sample-base.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { enableRipple } from '@syncfusion/ej2-base';\r\n\r\nenableRipple((window as any).ripple);\r\nexport class SampleBase<P, S> extends React.PureComponent<RouteComponentProps<any> & P, S>{\r\n    public rendereComplete(): void {\r\n        /**custom render complete function */\r\n    }\r\n    componentDidMount(): void {\r\n        setTimeout(() => {\r\n            this.rendereComplete();\r\n        }\r\n        );\r\n    }\r\n}"}