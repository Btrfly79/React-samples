{"index.css":"","systemjs.config.js":"System.config({\r\n    transpiler: \"ts\",\r\n    typescriptOptions: {\r\n            target: \"es5\",\r\n            module: \"commonjs\",\r\n            moduleResolution: \"node\",\r\n            emitDecoratorMetadata: true,\r\n            experimentalDecorators: true,\r\n            \"jsx\": \"react\"\r\n    },\r\n     meta: {\r\n      'typescript': {\r\n        \"exports\": \"ts\"\r\n      },\r\n      '*.json': { loader: 'plugin-json' }\r\n    },\r\n    paths: {\r\n        \"syncfusion:\": \"http://cdn.syncfusion.com/ej2/\"},\r\n    map: {\r\n        app: 'app',\r\n        ts: \"https://unpkg.com/plugin-typescript@4.0.10/lib/plugin.js\",\r\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\r\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\r\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\r\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-splitbuttons\": \"syncfusion:ej2-splitbuttons/dist/ej2-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-maps\": \"syncfusion:ej2-maps/dist/ej2-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-treemap\": \"syncfusion:ej2-treemap/dist/ej2-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\r\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-schedule\": \"syncfusion:ej2-schedule/dist/ej2-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\r\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\r\n        \"@syncfusion/ej2-documenteditor\": \"syncfusion:ej2-documenteditor/dist/ej2-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-notifications\": \"syncfusion:ej2-notifications/dist/ej2-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-richtexteditor\": \"syncfusion:ej2-richtexteditor/dist/ej2-richtexteditor.umd.min.js\",\r\n\t\t\"@syncfusion/ej2-svg-base\": \"syncfusion:ej2-svg-base/dist/ej2-svg-base.umd.min.js\",\r\n        \"@syncfusion/ej2-pivotview\": \"syncfusion:ej2-pivotview/dist/ej2-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-heatmap\": \"syncfusion:ej2-heatmap/dist/ej2-heatmap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-base\": \"syncfusion:ej2-react-base/dist/ej2-react-base.umd.min.js\",\r\n        \"@syncfusion/ej2-react-buttons\": \"syncfusion:ej2-react-buttons/dist/ej2-react-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-splitbuttons\": \"syncfusion:ej2-react-splitbuttons/dist/ej2-react-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-charts\": \"syncfusion:ej2-react-charts/dist/ej2-react-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-react-maps\": \"syncfusion:ej2-react-maps/dist/ej2-react-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-react-treemap\": \"syncfusion:ej2-react-treemap/dist/ej2-react-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-circulargauge\": \"syncfusion:ej2-react-circulargauge/dist/ej2-react-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lineargauge\": \"syncfusion:ej2-react-lineargauge/dist/ej2-react-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-calendars\": \"syncfusion:ej2-react-calendars/dist/ej2-react-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-react-dropdowns\": \"syncfusion:ej2-react-dropdowns/dist/ej2-react-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-react-grids\": \"syncfusion:ej2-react-grids/dist/ej2-react-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-react-inputs\": \"syncfusion:ej2-react-inputs/dist/ej2-react-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lists\": \"syncfusion:ej2-react-lists/dist/ej2-react-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-react-navigations\": \"syncfusion:ej2-react-navigations/dist/ej2-react-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-react-popups\": \"syncfusion:ej2-react-popups/dist/ej2-react-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-react-schedule\": \"syncfusion:ej2-react-schedule/dist/ej2-react-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-react-documenteditor\": \"syncfusion:ej2-react-documenteditor/dist/ej2-react-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-notifications\": \"syncfusion:ej2-react-notifications/dist/ej2-react-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-react-richtexteditor\": \"syncfusion:ej2-react-richtexteditor/dist/ej2-react-richtexteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-pivotview\": \"syncfusion:ej2-react-pivotview/dist/ej2-react-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-react-heatmap\": \"syncfusion:ej2-react-heatmap/dist/ej2-react-heatmap.umd.min.js\",\r\n        \"react-dom\":\"https://unpkg.com/react-dom@15.5.4/dist/react-dom.min.js\",\r\n        \"react\":\"https://unpkg.com/react@15.5.4/dist/react.min.js\",\r\n    },\r\n    packages: {\r\n        'app': { main: 'index', defaultExtension: 'tsx' },\r\n    }\r\n});\r\n\r\nSystem.import('app');","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Diagram · SymmetricLayout · Essential JS 2 for React · Syncfusion</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <!-- {{:meta}} -->\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <script type=\"text/javascript\">\r\n        var themeName = location.hash || 'material';\r\n        themeName = themeName.replace('#','');\r\n        window.ripple = (themeName === \"material\")\r\n        document.write('<link href=\"http://cdn.syncfusion.com/ej2/' + themeName + '.css\" rel=\"stylesheet\">');\r\n    </script>\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\r\n    <script src=\"systemjs.config.js\"></script>\r\n    <link href=\"index.css\" rel=\"stylesheet\" />\r\n     <style>\r\n        #loader {\r\n            color: #008cff;\r\n            height: 40px;\r\n            left: 45%;\r\n            position: absolute;\r\n            top: 45%;\r\n            width: 30%;\r\n        }\r\n        body {\r\n            touch-action:none;\r\n        }\r\n        .body {\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n        }\r\n\r\n        .e-view {\r\n            bottom: 0;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n        }\r\n\r\n        .sb-left {\r\n            float: left;\r\n        }\r\n\r\n        .sb-right {\r\n            float: right;\r\n        }\r\n\r\n        .sb-block {\r\n            display: block;\r\n        }\r\n\r\n        .sb-table {\r\n            display: table;\r\n        }\r\n\r\n        .sb-table-cell {\r\n            display: table-cell;\r\n            vertical-align: middle;\r\n        }\r\n\r\n        /*sample header*/\r\n\r\n\r\n        .sb-header {\r\n            height: 48px;\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.12);\r\n            z-index: 1001;\r\n            opacity: 100;\r\n        }\r\n\r\n\r\n        .sb-header-left, .sb-header-right {\r\n            height: 100%;\r\n        }\r\n\r\n        #sb-header-text {\r\n            padding-left: 22px;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        .header-logo {\r\n            float: left;\r\n            padding-left: 8px;\r\n            padding-right: 22px;\r\n        }\r\n\r\n        .footer-logo {\r\n            background: url(https://ej2.syncfusion.com/home/images/footer-logo.svg) no-repeat right;\r\n            height: 40px;\r\n            width: 140px;\r\n        }\r\n\r\n        .sb-header-splitter {\r\n            float: left;\r\n            border-left: 1px solid rgb(196, 196, 196);\r\n            height: 32px;\r\n            margin-top: 8px;\r\n            padding-left: 22 px;\r\n        }\r\n\r\n        .sb-header-settings {\r\n            display: none;\r\n        }\r\n\r\n        .product-style a{\r\n        padding-right: 15px;\r\n        font-family:Roboto;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        color: #363636;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        }\r\n        .product-style a:hover {\r\n            color:#3C78EF;\r\n        }\r\n\r\n        .sb-download-btn a {\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-download-text {\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-wrapper {\r\n            padding-right: 27px;\r\n        }\r\n\r\n        .sb-download-btn:hover .sb-download-btn:focus .sb-download-btn.active {\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\";\r\n            font-weight: bold;\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-btn:hover {\r\n            background: #006CE6;\r\n        }\r\n\r\n        .sb-download-btn:focus {\r\n            background: #0051CB;\r\n        }\r\n\r\n        .sb-download-btn.active {\r\n            background: #0036B1;\r\n        }\r\n\r\n        .sb-download-btn {\r\n            background-color: #3C78EF;\r\n            opacity: 100;\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n            font-weight: 500;\r\n            line-height: 18px;\r\n            height: 32px;\r\n            border-color: transparent;\r\n        }\r\n\r\n        .sb-bread-crumb {\r\n            padding-left: 20px;\r\n            padding-top: 24px;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        .category-allcontrols a, .category-text a, .crumb-sample {\r\n            display: table;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #3C78EF;\r\n            text-align: left;\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-bread-crumb .sb-bread-crumb-text>div {\r\n            font-size: 15px;\r\n            font-weight: 500;\r\n            padding-right: 8px;\r\n            cursor: default;\r\n            display: table-cell;\r\n        }\r\n\r\n        .sb-bread-crumb-text>div.seperator {\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            vertical-align: bottom;\r\n        } \r\n\r\n        .content {\r\n        overflow: auto;\r\n        height: calc(100% - 50px);\r\n        top: 50px;\r\n        }\r\n\r\n\r\n        .sample-content {\r\n            top: 48px;\r\n            background: #FFFFFF;\r\n        }\r\n\r\n        .div {\r\n        display: block;\r\n        }\r\n\r\n        .control-section {\r\n            padding-left: 4px;\r\n        }\r\n\r\n        .crumb-sample {\r\n            color: #000000;\r\n            line-height: 18px;\r\n        }\r\n\r\n        #description {\r\n            padding-bottom: 16px;\r\n            padding-left: 20px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n            padding-top: 14px;\r\n        }\r\n\r\n        #action-description {\r\n            padding-left: 20px;\r\n            padding-bottom: 15px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        #description-section {\r\n            padding-left: 20px;\r\n            padding-top: 30px;\r\n            opacity: 0.87;\r\n            font-family:Roboto;\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n\r\n\r\n    </style>\r\n</head>\r\n\r\n<body class='e-view ej2-new' aria-busy=\"true\">\r\n        <div class=\"sample-browser\">\r\n            <div id='sample-header' class=\"sb-header\" role=\"banner\">\r\n                <div class='sb-header-left sb-left sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"header-logo\">\r\n                            <a href=\"https://ej2.syncfusion.com/home/react.html\" target=\"\" rel=\"noopener noreferrer\">\r\n                                <div class=\"footer-logo\"> </div>\r\n                            </a>\r\n                        </div>\r\n    \r\n                    </div>\r\n                    <div class=\"sb-header-splitter sb-download-splitter\"></div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div id='sb-header-text' class='e-sb-header-text'>\r\n    \r\n                            <span class='sb-header-text-left'>Essential JS 2 for React</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class='sb-header-right sb-right sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class='product-style'>\r\n                            <div><a href=\"https://www.syncfusion.com/products/react/diagram\">PRODUCT DETAILS</a></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"sb-header-item sb-table-cell sb-download-wrapper\">\r\n                            <a href=\"https://www.syncfusion.com/downloads/essential-js2\" target=\"_blank\">\r\n                                <button id=\"download-now\" class=\"sb-download-btn\">\r\n                                    <span class=\"sb-download-text\">DOWNLOAD</span>\r\n                                </button>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n            <div class ='content e-view'>\r\n            <div class='sample-content'>\r\n                <div id=\"sample-bread-crumb\" class=\"sb-bread-crumb\">\r\n                    <div class=\"sb-bread-crumb-text\">\r\n                        <div class=\"category-allcontrols\"><a href=\"https://ej2.syncfusion.com/react/demos\"><span>All Controls</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"category-text bread-ctext\"><a href=\"https://ej2.syncfusion.com/react/demos/#/material/diagram/default.html\"><span>Diagram</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"crumb-sample\">SymmetricLayout</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"control-content\">\r\n                <div id=\"action-description\">\r\n                        <p>\r\n                            \n          <p>\n            This sample visualizes a simple network template using symmetrical\n            layout algorithm.\n          </p>\n        \r\n                        </p>\r\n                    </div>\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"control-section\">\r\n                            <div id='sample'>\r\n                                <div id='loader'>Loading....</div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    </div>\r\n                    <div id=\"description-section\">Description</div>    \r\n                    <div id=\"description\">\r\n                        <p>\r\n                           \n          <p>\n            This view is well suited for large networks and is commonly used in\n            network component diagrams. It is typically used with simple\n            straight line links. This example shows how to arrange nodes in a\n            symmetrical structure. The\n            <code>layout</code> property of the diagram can be used to enable\n            it.\n          </p>\n\n          <p 500=\"\" style=\"{{\" fontweight:=\"\" }}=\"\">Injecting Module</p>\n          <p>\n            The diagram component&#x2019;s features are segregated into individual\n            feature-wise modules. To generate diagrams from an external data\n            source, inject <code>DataBinding</code> module into{&quot; &quot;}\n            <code>services</code>. To automatically arrange the objects in a\n            symmetrical structure, inject <code>SymmetricalLayout</code> module\n            into <code>services</code>.\n          </p>\n          <br>\n        \r\n                         </p>     \r\n                    </div>    \r\n                </div>             \r\n            </div>\r\n                \r\n            </div>\r\n        </div>\r\n          \r\n</body>\r\n</html>\r\n","app/index.tsx":"import * as ReactDOM from \"react-dom\";\r\nimport * as React from \"react\";\r\nimport {\r\n  BasicShapeModel,\r\n  Node,\r\n  SymmetricLayout as SymmetricalLayoutModule,\r\n  DataBinding,\r\n  DiagramComponent,\r\n  Diagram,\r\n  NodeModel,\r\n  ConnectorModel,\r\n  SnapConstraints,\r\n  Inject,\r\n  DiagramTools\r\n} from \"@syncfusion/ej2-react-diagrams\";\r\nimport { SampleBase } from './sample-base';\r\nimport { DataManager } from \"@syncfusion/ej2-data\";\r\nimport { Point } from \"@syncfusion/ej2-diagrams/src/diagram/primitives/point\";\r\nimport { NumericTextBoxComponent } from \"@syncfusion/ej2-react-inputs\";\r\nimport { ButtonComponent } from \"@syncfusion/ej2-react-buttons\";\r\n\r\n/**\r\n * Local data for diagram layouts\r\n */\r\nexport let data: object[] = [\r\n  {\r\n    Id: \"parent\",\r\n    Type: \"Server\"\r\n  },\r\n  {\r\n    Id: 1,\r\n    Source: \"parent\",\r\n    Type: \"Server\"\r\n  },\r\n  {\r\n    Id: 2,\r\n    Source: \"parent\",\r\n    Type: \"Server\"\r\n  },\r\n  {\r\n    Id: 3,\r\n    Source: \"parent\",\r\n    Type: \"Server\"\r\n  },\r\n  {\r\n    Id: 4,\r\n    Source: \"parent\",\r\n    Type: \"Server\"\r\n  },\r\n  {\r\n    Id: 5,\r\n    Source: \"parent\",\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 6,\r\n    Source: 1,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 7,\r\n    Source: 1,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 8,\r\n    Source: 1,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 9,\r\n    Source: 1,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 10,\r\n    Source: 1,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 11,\r\n    Source: 1,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 12,\r\n    Source: 1,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 13,\r\n    Source: 1,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 14,\r\n    Source: 2,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 15,\r\n    Source: 2,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 16,\r\n    Source: 2,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 17,\r\n    Source: 2,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 18,\r\n    Source: 2,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 19,\r\n    Source: 2,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 20,\r\n    Source: 2,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 21,\r\n    Source: 2,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 22,\r\n    Source: 2,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 23,\r\n    Source: 2,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 24,\r\n    Source: 3,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 25,\r\n    Source: 3,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 26,\r\n    Source: 3,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 27,\r\n    Source: 3,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 28,\r\n    Source: 3,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 29,\r\n    Source: 3,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 30,\r\n    Source: 3,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 31,\r\n    Source: 3,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 32,\r\n    Source: 4,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 33,\r\n    Source: 4,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 34,\r\n    Source: 4,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 35,\r\n    Source: 4,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 36,\r\n    Source: 4,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 37,\r\n    Source: 4,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 38,\r\n    Source: 4,\r\n    Type: \"Hub\"\r\n  },\r\n  {\r\n    Id: 39,\r\n    Source: 4,\r\n    Type: \"Hub\"\r\n  }\r\n];\r\n\r\nexport interface EmployeeInfo {\r\n  Name: string;\r\n}\r\n\r\nconst SAMPLE_CSS = `.image-pattern-style {\r\n  background-color: white;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  height: 75px;\r\n  width: calc((100% - 12px) / 3);\r\n  cursor: pointer;\r\n  border: 1px solid #D5D5D5;\r\n  background-position: center;\r\n  float: left;\r\n}\r\n\r\n.image-pattern-style:hover {\r\n  border-color: gray;\r\n  border-width: 2px;\r\n}\r\n\r\n.property-panel-header {\r\npadding-top: 15px;\r\npadding-bottom: 15px;\r\n}\r\n\r\n.row {\r\n  margin-left: 0px;\r\n  margin-right: 0px;\r\n}\r\n\r\n.row-header {\r\n  font-size: 13px;\r\n  font-weight: 500;\r\n}\r\n\r\n.e-checkbox-wrapper .e-label {\r\n  font-size: 12px;\r\n}\r\n\r\n.e-selected-style {\r\n  border-color: #006CE6;\r\n  border-width: 2px;\r\n}\r\n\r\n.diagram-control-pane .col-xs-6 {\r\n  padding-left: 0px;\r\n  padding-right: 0px;\r\n}`;\r\n\r\nlet diagramInstance: DiagramComponent;\r\nlet springLength: NumericTextBoxComponent;\r\nlet springfactor: NumericTextBoxComponent;\r\nlet maxiteration: NumericTextBoxComponent;\r\n\r\nexport class SymmetricLayout extends SampleBase<{}, {}> {\r\n  rendereComplete() {\r\n    //used to apply the alignment of the layout.\r\n    document.getElementById(\"refresh\").onclick = () => {\r\n      diagramInstance.layout.springLength = springLength.value;\r\n      diagramInstance.layout.springFactor = springfactor.value;\r\n      diagramInstance.layout.maxIteration = maxiteration.value;\r\n      diagramInstance.doLayout();\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"control-pane\">\r\n        <div className=\"col-lg-8 control-section\">\r\n          <div className=\"content-wrapper\">\r\n            <DiagramComponent\r\n              id=\"diagram\"\r\n              ref={diagram => (diagramInstance = diagram)}\r\n              width={\"100%\"}\r\n              height={\"550px\"}\r\n              layout={{\r\n                type: \"SymmetricalLayout\",\r\n                springLength: 80,\r\n                springFactor: 0.8,\r\n                maxIteration: 500,\r\n                margin: { left: 20, top: 20 }\r\n              }}\r\n              //Sets the parent and child relationship of DataSource.\r\n              dataSourceSettings={{\r\n                id: \"Id\",\r\n                parentId: \"Source\",\r\n                dataManager: new DataManager(data)\r\n              }}\r\n              //Sets the constraints of the SnapSettings\r\n              snapSettings={{ constraints: SnapConstraints.None }}\r\n              //Sets the default values of Node\r\n              getNodeDefaults={(obj: Node, diagram: Diagram) => {\r\n                obj.height = 20;\r\n                obj.width = 20;\r\n                obj.style = { fill: \"transparent\", strokeWidth: 2 };\r\n                return obj;\r\n              }}\r\n              //Sets the default values of connector\r\n              getConnectorDefaults={(\r\n                connector: ConnectorModel,\r\n                diagram: Diagram\r\n              ) => {\r\n                connector.targetDecorator.shape = \"None\";\r\n                connector.type = \"Straight\";\r\n                return connector;\r\n              }}\r\n              setNodeTemplate={(obj: Node, diagram: Diagram) => {\r\n                setNodeTemplate(obj, diagram);\r\n              }}\r\n              tool={DiagramTools.ZoomPan}\r\n            >\r\n              <Inject services={[DataBinding, SymmetricalLayoutModule]} />\r\n            </DiagramComponent>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-4 property-section\">\r\n          <div className=\"property-panel-header\">Properties</div>\r\n          <table id=\"property\">\r\n            <tr>\r\n              <td style={{ width: \"30%\" }}> Spring Length </td>\r\n              <td style={{ width: \"60%\" }}>\r\n                <NumericTextBoxComponent\r\n                  id=\"springlength\"\r\n                  ref={lenref => (springLength = lenref)}\r\n                  format={\"###.##\"}\r\n                  value={80}\r\n                  step={1}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style={{ width: \"30%\" }}>Spring Factor</td>\r\n              <td style={{ width: \"60%\" }}>\r\n                <NumericTextBoxComponent\r\n                  id=\"springfactor\"\r\n                  ref={lenref => (springfactor = lenref)}\r\n                  format={\"###.##\"}\r\n                  value={0.8}\r\n                  step={0.1}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style={{ width: \"30%\" }}>Maximum Iteration</td>\r\n              <td style={{ width: \"60%\" }}>\r\n                <NumericTextBoxComponent\r\n                  id=\"maxiteration\"\r\n                  ref={lenref => (maxiteration = lenref)}\r\n                  format={\"###.##\"}\r\n                  value={500}\r\n                  step={1}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td style={{ width: \"50%\" }} />\r\n              <td style={{ width: \"50%\" }}>\r\n                <ButtonComponent id=\"refresh\">Refresh</ButtonComponent>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Funtion to add the Template of the Node.\r\nfunction setNodeTemplate(obj: Node, diagram: Diagram): void {\r\n  let shape: BasicShapeModel = { type: \"Basic\", shape: \"Ellipse\" };\r\n  if (\r\n    !(obj.data as EmployeeInfo).Type ||\r\n    (obj.data as EmployeeInfo).Type === \"Server\"\r\n  ) {\r\n    obj.width = 30;\r\n    obj.height = 30;\r\n    obj.shape = {\r\n      type: \"Native\",\r\n      content:\r\n        '<svg width=\"50\" height=\"65\"><g id=\"Server2_shape\" fill=\"transparent\" stroke=\"transparent\" stroke-width=\"1\"' +\r\n        ' opacity=\"1\" stroke-dasharray=\"\" transform=\"translate(-15.517241379310343,-2.6329421835819375),' +\r\n        'scale(1.7241379310344827,1.3774530437803194)\" width=\"50\" height=\"65\"><g><g xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<polygon fill=\"#DBD5DA\" points=\"37.3,7.3 19.4,17.8 9.8,12.1 9.2,12.9 19,18.7 19,49 20,49 20,18.5 37.8,8.1  \">' +\r\n        '</polygon>    <polygon fill=\"#E5DCE1\" points=\"36.3,7.8 28.2,2.6 10.5,12.5 19.5,17.8  \"></polygon> <polygon' +\r\n        ' fill=\"#BBB5B9\" points=\"20,18.5 37,8.6 36.9,38.4 20,47.9  \"></polygon> <polygon fill=\"#DBD2D7\" ' +\r\n        'points=\"10,13.4 19,18.7 19,48.2 10,42.7  \"></polygon>    <path fill=\"#656666\" d=\"M19.2,49.1c-0.5,' +\r\n        \"0-0.9-0.1-1.3-0.4L10.2,44C9.4,43.5,9,42.7,9,41.8V13.6c0-0.9,0.5-1.7,1.3-2.2l16.7-9.2   c0.8-0.4,1.8-0.4,\" +\r\n        \"2.5,0.1L36.8,7C37.6,7.5,38,8.2,38,9.1l-0.1,28.4c0,0.9-0.5,1.7-1.3,2.2l-16.2,9.1C20.1,49,19.6,49.1,19.2,49.1z \" +\r\n        \"M28.1,2.9c-0.3,0-0.5,0.1-0.7,0.2l-16.6,9.2c-0.5,0.3-0.8,0.8-0.8,1.3v28.2c0,0.5,0.3,1,0.7,1.3l7.7,4.8c0.5,0.3,\" +\r\n        '1.1,0.3,1.5,0  l16.2-9.1c0.5-0.3,0.8-0.8,0.8-1.3L37,9.1c0-0.5-0.3-1-0.7-1.3L29,3.2C28.7,3,28.4,2.9,28.1,2.9z\">' +\r\n        '</path><ellipse fill=\"#656666\"  cx=\"14.3\" cy=\"40.2\" rx=\"0.6\" ry=\"1.1\"></ellipse> <polygon fill=\"#656666\" ' +\r\n        'points=\"10.9,22.6 10.9,22.6 10.9,22.6  \"></polygon> <polygon fill=\"#656666\" class=\"st4ed\" points=\"11.9,' +\r\n        '22 11.9,23.2 16.7,26 16.7,24.9 \"></polygon><polygon fill=\"#656666\" points=\"10.9,18.9 10.9,18.9 10.9,18.9\"></polygon>' +\r\n        '<polygon fill=\"#656666\" points=\"11.9,18.4 11.9,19.5 16.7,22.4 16.7,21.2  \"></polygon></g></g></g></svg>'\r\n    };\r\n  } else {\r\n    obj.shape = shape;\r\n    obj.style = { fill: \"orange\" };\r\n  }\r\n}\r\n\r\nexport interface EmployeeInfo {\r\n  Type: string;\r\n}\r\n\nReactDOM.render(<SymmetricLayout />, document.getElementById('sample'));","app/sample-base.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { enableRipple } from '@syncfusion/ej2-base';\r\n\r\nenableRipple((window as any).ripple);\r\nexport class SampleBase<P, S> extends React.PureComponent<RouteComponentProps<any> & P, S>{\r\n    public rendereComplete(): void {\r\n        /**custom render complete function */\r\n    }\r\n    componentDidMount(): void {\r\n        setTimeout(() => {\r\n            this.rendereComplete();\r\n        }\r\n        );\r\n    }\r\n}"}