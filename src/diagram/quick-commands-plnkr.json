{"index.css":"","systemjs.config.js":"System.config({\r\n    transpiler: \"ts\",\r\n    typescriptOptions: {\r\n            target: \"es5\",\r\n            module: \"commonjs\",\r\n            moduleResolution: \"node\",\r\n            emitDecoratorMetadata: true,\r\n            experimentalDecorators: true,\r\n            \"jsx\": \"react\"\r\n    },\r\n     meta: {\r\n      'typescript': {\r\n        \"exports\": \"ts\"\r\n      },\r\n      '*.json': { loader: 'plugin-json' }\r\n    },\r\n    paths: {\r\n        \"syncfusion:\": \"http://cdn.syncfusion.com/ej2/\"},\r\n    map: {\r\n        app: 'app',\r\n        ts: \"https://unpkg.com/plugin-typescript@4.0.10/lib/plugin.js\",\r\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\r\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\r\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\r\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-splitbuttons\": \"syncfusion:ej2-splitbuttons/dist/ej2-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-maps\": \"syncfusion:ej2-maps/dist/ej2-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-treemap\": \"syncfusion:ej2-treemap/dist/ej2-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\r\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-schedule\": \"syncfusion:ej2-schedule/dist/ej2-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\r\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\r\n        \"@syncfusion/ej2-documenteditor\": \"syncfusion:ej2-documenteditor/dist/ej2-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-notifications\": \"syncfusion:ej2-notifications/dist/ej2-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-richtexteditor\": \"syncfusion:ej2-richtexteditor/dist/ej2-richtexteditor.umd.min.js\",\r\n\t\t\"@syncfusion/ej2-svg-base\": \"syncfusion:ej2-svg-base/dist/ej2-svg-base.umd.min.js\",\r\n        \"@syncfusion/ej2-pivotview\": \"syncfusion:ej2-pivotview/dist/ej2-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-heatmap\": \"syncfusion:ej2-heatmap/dist/ej2-heatmap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-base\": \"syncfusion:ej2-react-base/dist/ej2-react-base.umd.min.js\",\r\n        \"@syncfusion/ej2-react-buttons\": \"syncfusion:ej2-react-buttons/dist/ej2-react-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-splitbuttons\": \"syncfusion:ej2-react-splitbuttons/dist/ej2-react-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-charts\": \"syncfusion:ej2-react-charts/dist/ej2-react-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-react-maps\": \"syncfusion:ej2-react-maps/dist/ej2-react-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-react-treemap\": \"syncfusion:ej2-react-treemap/dist/ej2-react-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-circulargauge\": \"syncfusion:ej2-react-circulargauge/dist/ej2-react-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lineargauge\": \"syncfusion:ej2-react-lineargauge/dist/ej2-react-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-calendars\": \"syncfusion:ej2-react-calendars/dist/ej2-react-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-react-dropdowns\": \"syncfusion:ej2-react-dropdowns/dist/ej2-react-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-react-grids\": \"syncfusion:ej2-react-grids/dist/ej2-react-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-react-inputs\": \"syncfusion:ej2-react-inputs/dist/ej2-react-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lists\": \"syncfusion:ej2-react-lists/dist/ej2-react-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-react-navigations\": \"syncfusion:ej2-react-navigations/dist/ej2-react-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-react-popups\": \"syncfusion:ej2-react-popups/dist/ej2-react-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-react-schedule\": \"syncfusion:ej2-react-schedule/dist/ej2-react-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-react-documenteditor\": \"syncfusion:ej2-react-documenteditor/dist/ej2-react-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-notifications\": \"syncfusion:ej2-react-notifications/dist/ej2-react-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-react-richtexteditor\": \"syncfusion:ej2-react-richtexteditor/dist/ej2-react-richtexteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-pivotview\": \"syncfusion:ej2-react-pivotview/dist/ej2-react-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-react-heatmap\": \"syncfusion:ej2-react-heatmap/dist/ej2-react-heatmap.umd.min.js\",\r\n        \"react-dom\":\"https://unpkg.com/react-dom@15.5.4/dist/react-dom.min.js\",\r\n        \"react\":\"https://unpkg.com/react@15.5.4/dist/react.min.js\",\r\n    },\r\n    packages: {\r\n        'app': { main: 'index', defaultExtension: 'tsx' },\r\n    }\r\n});\r\n\r\nSystem.import('app');","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Diagram · CloneTool · Essential JS 2 for React · Syncfusion</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <!-- {{:meta}} -->\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <script type=\"text/javascript\">\r\n        var themeName = location.hash || 'material';\r\n        themeName = themeName.replace('#','');\r\n        window.ripple = (themeName === \"material\")\r\n        document.write('<link href=\"http://cdn.syncfusion.com/ej2/' + themeName + '.css\" rel=\"stylesheet\">');\r\n    </script>\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\r\n    <script src=\"systemjs.config.js\"></script>\r\n    <link href=\"index.css\" rel=\"stylesheet\" />\r\n     <style>\r\n        #loader {\r\n            color: #008cff;\r\n            height: 40px;\r\n            left: 45%;\r\n            position: absolute;\r\n            top: 45%;\r\n            width: 30%;\r\n        }\r\n        body {\r\n            touch-action:none;\r\n        }\r\n        .body {\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n        }\r\n\r\n        .e-view {\r\n            bottom: 0;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n        }\r\n\r\n        .sb-left {\r\n            float: left;\r\n        }\r\n\r\n        .sb-right {\r\n            float: right;\r\n        }\r\n\r\n        .sb-block {\r\n            display: block;\r\n        }\r\n\r\n        .sb-table {\r\n            display: table;\r\n        }\r\n\r\n        .sb-table-cell {\r\n            display: table-cell;\r\n            vertical-align: middle;\r\n        }\r\n\r\n        /*sample header*/\r\n\r\n\r\n        .sb-header {\r\n            height: 48px;\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.12);\r\n            z-index: 1001;\r\n            opacity: 100;\r\n        }\r\n\r\n\r\n        .sb-header-left, .sb-header-right {\r\n            height: 100%;\r\n        }\r\n\r\n        #sb-header-text {\r\n            padding-left: 22px;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        .header-logo {\r\n            float: left;\r\n            padding-left: 8px;\r\n            padding-right: 22px;\r\n        }\r\n\r\n        .footer-logo {\r\n            background: url(https://ej2.syncfusion.com/home/images/footer-logo.svg) no-repeat right;\r\n            height: 40px;\r\n            width: 140px;\r\n        }\r\n\r\n        .sb-header-splitter {\r\n            float: left;\r\n            border-left: 1px solid rgb(196, 196, 196);\r\n            height: 32px;\r\n            margin-top: 8px;\r\n            padding-left: 22 px;\r\n        }\r\n\r\n        .sb-header-settings {\r\n            display: none;\r\n        }\r\n\r\n        .product-style a{\r\n        padding-right: 15px;\r\n        font-family:Roboto;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        color: #363636;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        }\r\n        .product-style a:hover {\r\n            color:#3C78EF;\r\n        }\r\n\r\n        .sb-download-btn a {\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-download-text {\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-wrapper {\r\n            padding-right: 27px;\r\n        }\r\n\r\n        .sb-download-btn:hover .sb-download-btn:focus .sb-download-btn.active {\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\";\r\n            font-weight: bold;\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-btn:hover {\r\n            background: #006CE6;\r\n        }\r\n\r\n        .sb-download-btn:focus {\r\n            background: #0051CB;\r\n        }\r\n\r\n        .sb-download-btn.active {\r\n            background: #0036B1;\r\n        }\r\n\r\n        .sb-download-btn {\r\n            background-color: #3C78EF;\r\n            opacity: 100;\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n            font-weight: 500;\r\n            line-height: 18px;\r\n            height: 32px;\r\n            border-color: transparent;\r\n        }\r\n\r\n        .sb-bread-crumb {\r\n            padding-left: 20px;\r\n            padding-top: 24px;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        .category-allcontrols a, .category-text a, .crumb-sample {\r\n            display: table;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #3C78EF;\r\n            text-align: left;\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-bread-crumb .sb-bread-crumb-text>div {\r\n            font-size: 15px;\r\n            font-weight: 500;\r\n            padding-right: 8px;\r\n            cursor: default;\r\n            display: table-cell;\r\n        }\r\n\r\n        .sb-bread-crumb-text>div.seperator {\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            vertical-align: bottom;\r\n        } \r\n\r\n        .content {\r\n        overflow: auto;\r\n        height: calc(100% - 50px);\r\n        top: 50px;\r\n        }\r\n\r\n\r\n        .sample-content {\r\n            top: 48px;\r\n            background: #FFFFFF;\r\n        }\r\n\r\n        .div {\r\n        display: block;\r\n        }\r\n\r\n        .control-section {\r\n            padding-left: 4px;\r\n        }\r\n\r\n        .crumb-sample {\r\n            color: #000000;\r\n            line-height: 18px;\r\n        }\r\n\r\n        #description {\r\n            padding-bottom: 16px;\r\n            padding-left: 20px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n            padding-top: 14px;\r\n        }\r\n\r\n        #action-description {\r\n            padding-left: 20px;\r\n            padding-bottom: 15px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        #description-section {\r\n            padding-left: 20px;\r\n            padding-top: 30px;\r\n            opacity: 0.87;\r\n            font-family:Roboto;\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n\r\n\r\n    </style>\r\n</head>\r\n\r\n<body class='e-view ej2-new' aria-busy=\"true\">\r\n        <div class=\"sample-browser\">\r\n            <div id='sample-header' class=\"sb-header\" role=\"banner\">\r\n                <div class='sb-header-left sb-left sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"header-logo\">\r\n                            <a href=\"https://ej2.syncfusion.com/home/react.html\" target=\"\" rel=\"noopener noreferrer\">\r\n                                <div class=\"footer-logo\"> </div>\r\n                            </a>\r\n                        </div>\r\n    \r\n                    </div>\r\n                    <div class=\"sb-header-splitter sb-download-splitter\"></div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div id='sb-header-text' class='e-sb-header-text'>\r\n    \r\n                            <span class='sb-header-text-left'>Essential JS 2 for React</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class='sb-header-right sb-right sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class='product-style'>\r\n                            <div><a href=\"https://www.syncfusion.com/products/react/diagram\">PRODUCT DETAILS</a></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"sb-header-item sb-table-cell sb-download-wrapper\">\r\n                            <a href=\"https://www.syncfusion.com/downloads/essential-js2\" target=\"_blank\">\r\n                                <button id=\"download-now\" class=\"sb-download-btn\">\r\n                                    <span class=\"sb-download-text\">DOWNLOAD</span>\r\n                                </button>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n            <div class ='content e-view'>\r\n            <div class='sample-content'>\r\n                <div id=\"sample-bread-crumb\" class=\"sb-bread-crumb\">\r\n                    <div class=\"sb-bread-crumb-text\">\r\n                        <div class=\"category-allcontrols\"><a href=\"https://ej2.syncfusion.com/react/demos\"><span>All Controls</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"category-text bread-ctext\"><a href=\"https://ej2.syncfusion.com/react/demos/#/material/diagram/default.html\"><span>Diagram</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"crumb-sample\">CloneTool</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"control-content\">\r\n                <div id=\"action-description\">\r\n                        <p>\r\n                            \n          <p>\n            This sample visualizes a simple flow diagram along with options to\n            execute the frequently used commands using user handles.\n          </p>\n        \r\n                        </p>\r\n                    </div>\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"control-section\">\r\n                            <div id='sample'>\r\n                                <div id='loader'>Loading....</div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    </div>\r\n                    <div id=\"description-section\">Description</div>    \r\n                    <div id=\"description\">\r\n                        <p>\r\n                           \n          <p>\n            User handles are icons that are placed around the node to run the\n            frequently used commands. This example shows how to render and\n            configure user handles and how to interact with the diagram using\n            user handles. The <code>userHandles</code> property of the{&quot; &quot;}\n            <code>selectedItems</code> can be used to add user handles to the\n            diagram. Click the templates in the property panel, to customize the\n            size, position, and appearance of the user handles.\n          </p>\n          <br>\n        \r\n                         </p>     \r\n                    </div>    \r\n                </div>             \r\n            </div>\r\n                \r\n            </div>\r\n        </div>\r\n          \r\n</body>\r\n</html>\r\n","app/index.tsx":"import * as ReactDOM from \"react-dom\";\r\nimport * as React from \"react\";\r\nimport {\r\n  ToolBase,\r\n  MoveTool,\r\n  randomId,\r\n  SelectorConstraints,\r\n  cloneObject,\r\n  MouseEventArgs,\r\n  IElement,\r\n  UserHandleModel,\r\n  DiagramComponent,\r\n  NodeModel,\r\n  ConnectorModel,\r\n  Node,\r\n  Connector,\r\n  Diagram,\r\n  Side,\r\n  SnapConstraints\r\n} from \"@syncfusion/ej2-react-diagrams\";\r\nimport { SampleBase } from './sample-base';\r\n\r\nconst SAMPLE_CSS = `.image-pattern-style {\r\n        background-color: white;\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n        height: 50px;\r\n        width: calc((100% - 18px) / 3);\r\n        cursor: pointer;\r\n        border: 1px solid #D5D5D5;\r\n        background-position: center;\r\n        float: left;\r\n    }\r\n\r\n    .image-pattern-style:hover {\r\n        border-color: gray;\r\n        border-width: 2px;\r\n    }\r\n\r\n    .row {\r\n        margin: 10px 0px 0px 0px;\r\n    }\r\n\r\n    .e-selected-style {\r\n        border-color: #006CE6;\r\n        border-width: 2px;\r\n    }\r\n\r\n    .row-header {\r\n        font-size: 15px;\r\n        font-weight: 500;\r\n        margin-top: 10px\r\n    }\r\n\r\n    .property-panel-header {\r\n        padding-top: 2px;\r\n        padding-bottom: 5px;\r\n    }\r\n\r\n    .e-checkbox-wrapper .e-label {\r\n        font-size: 12px;\r\n    }\r\n\r\n    .container-fluid {\r\n        padding-left: 0px;\r\n    }\r\n\r\n    .diagram-control-pane .col-xs-6 {\r\n        padding-left: 0px;\r\n        padding-right: 0px;\r\n        padding-top: 5px;\r\n    }`;\r\n\r\nexport interface EmployeeInfo {\r\n  Role: string;\r\n  color: string;\r\n}\r\n\r\nlet diagramInstance: Diagram;\r\n\r\n//Defines the nodes collection in diagram\r\nlet nodes: NodeModel[] = [\r\n  {\r\n    id: \"NewIdea\",\r\n    width: 150,\r\n    height: 60,\r\n    offsetX: 300,\r\n    offsetY: 60,\r\n    shape: { type: \"Flow\", shape: \"Terminator\" },\r\n    annotations: [{ content: \"New idea identified\" }]\r\n  },\r\n  {\r\n    id: \"Meeting\",\r\n    width: 150,\r\n    height: 60,\r\n    offsetX: 300,\r\n    offsetY: 155,\r\n    shape: { type: \"Flow\", shape: \"Process\" },\r\n    annotations: [{ content: \"Meeting with board\" }]\r\n  },\r\n  {\r\n    id: \"BoardDecision\",\r\n    width: 150,\r\n    height: 110,\r\n    offsetX: 300,\r\n    offsetY: 280,\r\n    shape: { type: \"Flow\", shape: \"Decision\" },\r\n    annotations: [{ content: \"Board decides \\n whether to proceed\" }]\r\n  },\r\n  {\r\n    id: \"Project\",\r\n    width: 150,\r\n    height: 100,\r\n    offsetX: 300,\r\n    offsetY: 430,\r\n    shape: { type: \"Flow\", shape: \"Decision\" },\r\n    annotations: [{ content: \"Find Project manager\" }]\r\n  },\r\n  {\r\n    id: \"End\",\r\n    width: 150,\r\n    height: 60,\r\n    offsetX: 300,\r\n    offsetY: 555,\r\n    shape: { type: \"Flow\", shape: \"Process\" },\r\n    annotations: [{ content: \"Implement and Deliver\" }]\r\n  },\r\n  {\r\n    id: \"Decision\",\r\n    width: 250,\r\n    height: 60,\r\n    offsetX: 550,\r\n    offsetY: 60,\r\n    shape: { type: \"Flow\", shape: \"Card\" },\r\n    annotations: [{ content: \"Decision process for new software ideas\" }]\r\n  },\r\n  {\r\n    id: \"Reject\",\r\n    width: 150,\r\n    height: 60,\r\n    offsetX: 550,\r\n    offsetY: 280,\r\n    shape: { type: \"Flow\", shape: \"Process\" },\r\n    annotations: [{ content: \"Reject\" }]\r\n  },\r\n  {\r\n    id: \"Resources\",\r\n    width: 150,\r\n    height: 60,\r\n    offsetX: 550,\r\n    offsetY: 430,\r\n    shape: { type: \"Flow\", shape: \"Process\" },\r\n    annotations: [{ content: \"Hire new resources\" }]\r\n  }\r\n];\r\n\r\n//Defines the connectors collection in diagram\r\nlet connectors: ConnectorModel[] = [\r\n  {\r\n    id: \"connector1\",\r\n    type: \"Straight\",\r\n    sourceID: \"NewIdea\",\r\n    targetID: \"Meeting\"\r\n  },\r\n  {\r\n    id: \"connector2\",\r\n    type: \"Straight\",\r\n    sourceID: \"Meeting\",\r\n    targetID: \"BoardDecision\"\r\n  },\r\n  {\r\n    id: \"connector3\",\r\n    type: \"Straight\",\r\n    sourceID: \"BoardDecision\",\r\n    targetID: \"Project\"\r\n  },\r\n  { id: \"connector4\", type: \"Straight\", sourceID: \"Project\", targetID: \"End\" },\r\n  {\r\n    id: \"connector5\",\r\n    type: \"Straight\",\r\n    sourceID: \"BoardDecision\",\r\n    targetID: \"Reject\"\r\n  },\r\n  {\r\n    id: \"connector6\",\r\n    type: \"Straight\",\r\n    sourceID: \"Project\",\r\n    targetID: \"Resources\"\r\n  }\r\n];\r\n\r\n//Defines the user handle collection for nodes in diagram\r\nlet handles: UserHandleModel[] = [\r\n  {\r\n    name: \"clone\",\r\n    pathData:\r\n      \"M60.3,18H27.5c-3,0-5.5,2.4-5.5,5.5v38.2h5.5V23.5h32.7V18z M68.5,28.9h-30c-3,\" +\r\n      \"0-5.5,2.4-5.5,5.5v38.2c0,3,2.4,5.5,5.5,5.5h30c3,0,5.5-2.4,5.5-5.5V34.4C73.9,31.4,71.5,28.9,68.5,28.9z \" +\r\n      \"M68.5,72.5h-30V34.4h30V72.5z\",\r\n    visible: true,\r\n    offset: 0,\r\n    side: \"Bottom\",\r\n    margin: { top: 0, bottom: 0, left: 0, right: 0 },\r\n    pathColor: \"white\"\r\n  }\r\n];\r\n\r\n//Defines the clone tool used to copy Node/Connector\r\nclass CloneTool extends MoveTool {\r\n  public mouseDown(args: MouseEventArgs): void {\r\n    let newObject: any;\r\n    if (diagramInstance.selectedItems.nodes.length > 0) {\r\n      newObject = cloneObject(\r\n        diagramInstance.selectedItems.nodes[0]\r\n      ) as NodeModel;\r\n    } else {\r\n      newObject = cloneObject(\r\n        diagramInstance.selectedItems.connectors[0]\r\n      ) as ConnectorModel;\r\n    }\r\n    newObject.id += randomId();\r\n    diagramInstance.paste([newObject]);\r\n    args.source = diagramInstance.nodes[\r\n      diagramInstance.nodes.length - 1\r\n    ] as IElement;\r\n    args.sourceWrapper = args.source.wrapper;\r\n    super.mouseDown(args);\r\n    this.inAction = true;\r\n  }\r\n}\r\n\r\nexport class UserHandle extends SampleBase<{}, {}> {\r\n  rendereComplete() {\r\n    diagramInstance.fitToPage();\r\n    diagramInstance.select([diagramInstance.nodes[0]]);\r\n    document.getElementById(\"appearance\").onclick = (args: MouseEvent) => {\r\n      let target: HTMLElement = args.target as HTMLElement;\r\n      let selectedElement: HTMLCollection = document.getElementsByClassName(\r\n        \"e-selected-style\"\r\n      );\r\n      if (selectedElement.length) {\r\n        selectedElement[0].classList.remove(\"e-selected-style\");\r\n      }\r\n      if (target.className === \"image-pattern-style\") {\r\n        switch (target.id) {\r\n          case \"left\":\r\n            setuserhandleposition(0, \"Bottom\", target);\r\n            break;\r\n          case \"right\":\r\n            setuserhandleposition(1, \"Bottom\", target);\r\n            break;\r\n          case \"topr\":\r\n            setuserhandleposition(0, \"Right\", target);\r\n            break;\r\n        }\r\n      }\r\n      diagramInstance.dataBind();\r\n    };\r\n    document.getElementById(\"pattern\").onclick = (args: MouseEvent) => {\r\n      let target: HTMLElement = args.target as HTMLElement;\r\n      let selectedElement: HTMLCollection = document.getElementsByClassName(\r\n        \"e-selected-style\"\r\n      );\r\n      if (selectedElement.length) {\r\n        selectedElement[0].classList.remove(\"e-selected-style\");\r\n      }\r\n      if (target.className === \"image-pattern-style\") {\r\n        switch (target.id) {\r\n          case \"pattern1\":\r\n            applyuserhandlestyle(\"#1E90FF\", target);\r\n            break;\r\n          case \"pattern2\":\r\n            applyuserhandlestyle(\"#3CB371\", target);\r\n            break;\r\n          case \"pattern3\":\r\n            applyuserhandlestyle(\"#FF6347\", target);\r\n            break;\r\n        }\r\n      }\r\n      diagramInstance.dataBind();\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"control-pane\">\r\n        <style>{SAMPLE_CSS}</style>\r\n        <div\r\n          className=\"col-lg-8 control-section\"\r\n        >\r\n          <div className=\"content-wrapper\" style={{ width: \"100%\" }}>\r\n            <DiagramComponent\r\n              id=\"diagram\"\r\n              ref={diagram => (diagramInstance = diagram)}\r\n              width={\"100%\"}\r\n              height={\"600px\"}\r\n              nodes={nodes}\r\n              connectors={connectors}\r\n              selectedItems={{\r\n                constraints: SelectorConstraints.UserHandle,\r\n                userHandles: handles\r\n              }}\r\n              snapSettings={{ constraints: SnapConstraints.None }}\r\n              //set Node default value\r\n              getNodeDefaults={(node: Node) => {\r\n                return {\r\n                  style: { fill: \"#578CA9\", strokeColor: \"none\" },\r\n                  annotations: [{ style: { color: \"white\" } }]\r\n                };\r\n              }}\r\n              //set CustomTool\r\n              getCustomTool={getTool}\r\n            >\r\n            </DiagramComponent>\r\n          </div>\r\n        </div>\r\n          <div\r\n            className=\"col-lg-4 property-section\"\r\n          >\r\n            <div className=\"property-panel-header\">Properties</div>\r\n            <div className=\"row property-panel-content\" id=\"appearance\">\r\n              <div className=\"row row-header\">Alignment</div>\r\n              <div className=\"row\" style={{ paddingTop: \"8px\" }}>\r\n                <div\r\n                  className=\"image-pattern-style e-selected-style\"\r\n                  id=\"left\"\r\n                  style={{\r\n                    backgroundImage:\r\n                      \"url('http://ej2.syncfusion.com/react/demos/src/diagram/Images/user-handle/bottoml.png')\",\r\n                    marginRight: \"4px\"\r\n                  }}\r\n                />\r\n                <div\r\n                  className=\"image-pattern-style\"\r\n                  id=\"right\"\r\n                  style={{\r\n                    backgroundImage:\r\n                      \"url('http://ej2.syncfusion.com/react/demos/src/diagram/Images/user-handle/bottomr.png')\",\r\n                    margin: \"0px 4px\"\r\n                  }}\r\n                />\r\n                <div\r\n                  className=\"image-pattern-style\"\r\n                  id=\"topr\"\r\n                  style={{\r\n                    backgroundImage:\r\n                      \"url('http://ej2.syncfusion.com/react/demos/src/diagram/Images/user-handle/topr.png')\"\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row property-panel-content\" id=\"pattern\">\r\n              <div className=\"row row-header\">Appearance</div>\r\n              <div className=\"row\" style={{ paddingTop: \"8px\" }}>\r\n                <div\r\n                  className=\"image-pattern-style\"\r\n                  id=\"pattern1\"\r\n                  style={{\r\n                    backgroundImage:\r\n                      \"url('http://ej2.syncfusion.com/react/demos/src/diagram/Images/user-handle/pattern1.png')\",\r\n                    marginRight: \"4px\"\r\n                  }}\r\n                />\r\n                <div\r\n                  className=\"image-pattern-style\"\r\n                  id=\"pattern2\"\r\n                  style={{\r\n                    backgroundImage:\r\n                      \"url('http://ej2.syncfusion.com/react/demos/src/diagram/Images/user-handle/pattern2.png')\",\r\n                    margin: \"0px 4px\"\r\n                  }}\r\n                />\r\n                <div\r\n                  className=\"image-pattern-style\"\r\n                  id=\"pattern3\"\r\n                  style={{\r\n                    backgroundImage:\r\n                      \"url('http://ej2.syncfusion.com/react/demos/src/diagram/Images/user-handle/pattern3.png')\"\r\n                  }}\r\n                />\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Enable the clone Tool for UserHandle.\r\nfunction getTool(action: string): ToolBase {\r\n  let tool: ToolBase;\r\n  if (action === \"clone\") {\r\n    tool = new CloneTool(diagramInstance.commandHandler);\r\n  }\r\n  return tool;\r\n}\r\n//set the position of the userhandle.\r\nfunction setuserhandleposition(\r\n  offset: number,\r\n  side: Side,\r\n  target: HTMLElement\r\n): void {\r\n  diagramInstance.selectedItems.userHandles[0].offset = offset;\r\n  diagramInstance.selectedItems.userHandles[0].side = side;\r\n  target.classList.add(\"e-selected-style\");\r\n}\r\n//set the style of the userhandle.\r\nfunction applyuserhandlestyle(bgcolor: string, target: HTMLElement): void {\r\n  diagramInstance.selectedItems.userHandles[0].backgroundColor = bgcolor;\r\n  diagramInstance.selectedItems.userHandles[0].pathColor = \"White\";\r\n  target.classList.add(\"e-selected-style\");\r\n}\r\n\nReactDOM.render(<CloneTool />, document.getElementById('sample'));","app/sample-base.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { enableRipple } from '@syncfusion/ej2-base';\r\n\r\nenableRipple((window as any).ripple);\r\nexport class SampleBase<P, S> extends React.PureComponent<RouteComponentProps<any> & P, S>{\r\n    public rendereComplete(): void {\r\n        /**custom render complete function */\r\n    }\r\n    componentDidMount(): void {\r\n        setTimeout(() => {\r\n            this.rendereComplete();\r\n        }\r\n        );\r\n    }\r\n}"}