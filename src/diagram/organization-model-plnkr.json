{"index.css":"","systemjs.config.js":"System.config({\r\n    transpiler: \"ts\",\r\n    typescriptOptions: {\r\n            target: \"es5\",\r\n            module: \"commonjs\",\r\n            moduleResolution: \"node\",\r\n            emitDecoratorMetadata: true,\r\n            experimentalDecorators: true,\r\n            \"jsx\": \"react\"\r\n    },\r\n     meta: {\r\n      'typescript': {\r\n        \"exports\": \"ts\"\r\n      },\r\n      '*.json': { loader: 'plugin-json' }\r\n    },\r\n    paths: {\r\n        \"syncfusion:\": \"http://cdn.syncfusion.com/ej2/\"},\r\n    map: {\r\n        app: 'app',\r\n        ts: \"https://unpkg.com/plugin-typescript@4.0.10/lib/plugin.js\",\r\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\r\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\r\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\r\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-splitbuttons\": \"syncfusion:ej2-splitbuttons/dist/ej2-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-maps\": \"syncfusion:ej2-maps/dist/ej2-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-treemap\": \"syncfusion:ej2-treemap/dist/ej2-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\r\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-schedule\": \"syncfusion:ej2-schedule/dist/ej2-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\r\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\r\n        \"@syncfusion/ej2-documenteditor\": \"syncfusion:ej2-documenteditor/dist/ej2-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-notifications\": \"syncfusion:ej2-notifications/dist/ej2-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-richtexteditor\": \"syncfusion:ej2-richtexteditor/dist/ej2-richtexteditor.umd.min.js\",\r\n\t\t\"@syncfusion/ej2-svg-base\": \"syncfusion:ej2-svg-base/dist/ej2-svg-base.umd.min.js\",\r\n        \"@syncfusion/ej2-pivotview\": \"syncfusion:ej2-pivotview/dist/ej2-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-heatmap\": \"syncfusion:ej2-heatmap/dist/ej2-heatmap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-base\": \"syncfusion:ej2-react-base/dist/ej2-react-base.umd.min.js\",\r\n        \"@syncfusion/ej2-react-buttons\": \"syncfusion:ej2-react-buttons/dist/ej2-react-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-splitbuttons\": \"syncfusion:ej2-react-splitbuttons/dist/ej2-react-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-charts\": \"syncfusion:ej2-react-charts/dist/ej2-react-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-react-maps\": \"syncfusion:ej2-react-maps/dist/ej2-react-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-react-treemap\": \"syncfusion:ej2-react-treemap/dist/ej2-react-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-circulargauge\": \"syncfusion:ej2-react-circulargauge/dist/ej2-react-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lineargauge\": \"syncfusion:ej2-react-lineargauge/dist/ej2-react-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-calendars\": \"syncfusion:ej2-react-calendars/dist/ej2-react-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-react-dropdowns\": \"syncfusion:ej2-react-dropdowns/dist/ej2-react-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-react-grids\": \"syncfusion:ej2-react-grids/dist/ej2-react-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-react-inputs\": \"syncfusion:ej2-react-inputs/dist/ej2-react-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lists\": \"syncfusion:ej2-react-lists/dist/ej2-react-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-react-navigations\": \"syncfusion:ej2-react-navigations/dist/ej2-react-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-react-popups\": \"syncfusion:ej2-react-popups/dist/ej2-react-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-react-schedule\": \"syncfusion:ej2-react-schedule/dist/ej2-react-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-react-documenteditor\": \"syncfusion:ej2-react-documenteditor/dist/ej2-react-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-notifications\": \"syncfusion:ej2-react-notifications/dist/ej2-react-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-react-richtexteditor\": \"syncfusion:ej2-react-richtexteditor/dist/ej2-react-richtexteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-pivotview\": \"syncfusion:ej2-react-pivotview/dist/ej2-react-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-react-heatmap\": \"syncfusion:ej2-react-heatmap/dist/ej2-react-heatmap.umd.min.js\",\r\n        \"react-dom\":\"https://unpkg.com/react-dom@15.5.4/dist/react-dom.min.js\",\r\n        \"react\":\"https://unpkg.com/react@15.5.4/dist/react.min.js\",\r\n    },\r\n    packages: {\r\n        'app': { main: 'index', defaultExtension: 'tsx' },\r\n    }\r\n});\r\n\r\nSystem.import('app');","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Diagram · OrganizationModel · Essential JS 2 for React · Syncfusion</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <!-- {{:meta}} -->\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <script type=\"text/javascript\">\r\n        var themeName = location.hash || 'material';\r\n        themeName = themeName.replace('#','');\r\n        window.ripple = (themeName === \"material\")\r\n        document.write('<link href=\"http://cdn.syncfusion.com/ej2/' + themeName + '.css\" rel=\"stylesheet\">');\r\n    </script>\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\r\n    <script src=\"systemjs.config.js\"></script>\r\n    <link href=\"index.css\" rel=\"stylesheet\" />\r\n     <style>\r\n        #loader {\r\n            color: #008cff;\r\n            height: 40px;\r\n            left: 45%;\r\n            position: absolute;\r\n            top: 45%;\r\n            width: 30%;\r\n        }\r\n        body {\r\n            touch-action:none;\r\n        }\r\n        .body {\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n        }\r\n\r\n        .e-view {\r\n            bottom: 0;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n        }\r\n\r\n        .sb-left {\r\n            float: left;\r\n        }\r\n\r\n        .sb-right {\r\n            float: right;\r\n        }\r\n\r\n        .sb-block {\r\n            display: block;\r\n        }\r\n\r\n        .sb-table {\r\n            display: table;\r\n        }\r\n\r\n        .sb-table-cell {\r\n            display: table-cell;\r\n            vertical-align: middle;\r\n        }\r\n\r\n        /*sample header*/\r\n\r\n\r\n        .sb-header {\r\n            height: 48px;\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.12);\r\n            z-index: 1001;\r\n            opacity: 100;\r\n        }\r\n\r\n\r\n        .sb-header-left, .sb-header-right {\r\n            height: 100%;\r\n        }\r\n\r\n        #sb-header-text {\r\n            padding-left: 22px;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        .header-logo {\r\n            float: left;\r\n            padding-left: 8px;\r\n            padding-right: 22px;\r\n        }\r\n\r\n        .footer-logo {\r\n            background: url(https://ej2.syncfusion.com/home/images/footer-logo.svg) no-repeat right;\r\n            height: 40px;\r\n            width: 140px;\r\n        }\r\n\r\n        .sb-header-splitter {\r\n            float: left;\r\n            border-left: 1px solid rgb(196, 196, 196);\r\n            height: 32px;\r\n            margin-top: 8px;\r\n            padding-left: 22 px;\r\n        }\r\n\r\n        .sb-header-settings {\r\n            display: none;\r\n        }\r\n\r\n        .product-style a{\r\n        padding-right: 15px;\r\n        font-family:Roboto;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        color: #363636;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        }\r\n        .product-style a:hover {\r\n            color:#3C78EF;\r\n        }\r\n\r\n        .sb-download-btn a {\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-download-text {\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-wrapper {\r\n            padding-right: 27px;\r\n        }\r\n\r\n        .sb-download-btn:hover .sb-download-btn:focus .sb-download-btn.active {\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\";\r\n            font-weight: bold;\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-btn:hover {\r\n            background: #006CE6;\r\n        }\r\n\r\n        .sb-download-btn:focus {\r\n            background: #0051CB;\r\n        }\r\n\r\n        .sb-download-btn.active {\r\n            background: #0036B1;\r\n        }\r\n\r\n        .sb-download-btn {\r\n            background-color: #3C78EF;\r\n            opacity: 100;\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n            font-weight: 500;\r\n            line-height: 18px;\r\n            height: 32px;\r\n            border-color: transparent;\r\n        }\r\n\r\n        .sb-bread-crumb {\r\n            padding-left: 20px;\r\n            padding-top: 24px;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        .category-allcontrols a, .category-text a, .crumb-sample {\r\n            display: table;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #3C78EF;\r\n            text-align: left;\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-bread-crumb .sb-bread-crumb-text>div {\r\n            font-size: 15px;\r\n            font-weight: 500;\r\n            padding-right: 8px;\r\n            cursor: default;\r\n            display: table-cell;\r\n        }\r\n\r\n        .sb-bread-crumb-text>div.seperator {\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            vertical-align: bottom;\r\n        } \r\n\r\n        .content {\r\n        overflow: auto;\r\n        height: calc(100% - 50px);\r\n        top: 50px;\r\n        }\r\n\r\n\r\n        .sample-content {\r\n            top: 48px;\r\n            background: #FFFFFF;\r\n        }\r\n\r\n        .div {\r\n        display: block;\r\n        }\r\n\r\n        .control-section {\r\n            padding-left: 4px;\r\n        }\r\n\r\n        .crumb-sample {\r\n            color: #000000;\r\n            line-height: 18px;\r\n        }\r\n\r\n        #description {\r\n            padding-bottom: 16px;\r\n            padding-left: 20px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n            padding-top: 14px;\r\n        }\r\n\r\n        #action-description {\r\n            padding-left: 20px;\r\n            padding-bottom: 15px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        #description-section {\r\n            padding-left: 20px;\r\n            padding-top: 30px;\r\n            opacity: 0.87;\r\n            font-family:Roboto;\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n\r\n\r\n    </style>\r\n</head>\r\n\r\n<body class='e-view ej2-new' aria-busy=\"true\">\r\n        <div class=\"sample-browser\">\r\n            <div id='sample-header' class=\"sb-header\" role=\"banner\">\r\n                <div class='sb-header-left sb-left sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"header-logo\">\r\n                            <a href=\"https://ej2.syncfusion.com/home/react.html\" target=\"\" rel=\"noopener noreferrer\">\r\n                                <div class=\"footer-logo\"> </div>\r\n                            </a>\r\n                        </div>\r\n    \r\n                    </div>\r\n                    <div class=\"sb-header-splitter sb-download-splitter\"></div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div id='sb-header-text' class='e-sb-header-text'>\r\n    \r\n                            <span class='sb-header-text-left'>Essential JS 2 for React</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class='sb-header-right sb-right sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class='product-style'>\r\n                            <div><a href=\"https://www.syncfusion.com/products/react/diagram\">PRODUCT DETAILS</a></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"sb-header-item sb-table-cell sb-download-wrapper\">\r\n                            <a href=\"https://www.syncfusion.com/downloads/essential-js2\" target=\"_blank\">\r\n                                <button id=\"download-now\" class=\"sb-download-btn\">\r\n                                    <span class=\"sb-download-text\">DOWNLOAD</span>\r\n                                </button>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n            <div class ='content e-view'>\r\n            <div class='sample-content'>\r\n                <div id=\"sample-bread-crumb\" class=\"sb-bread-crumb\">\r\n                    <div class=\"sb-bread-crumb-text\">\r\n                        <div class=\"category-allcontrols\"><a href=\"https://ej2.syncfusion.com/react/demos\"><span>All Controls</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"category-text bread-ctext\"><a href=\"https://ej2.syncfusion.com/react/demos/#/material/diagram/default.html\"><span>Diagram</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"crumb-sample\">OrganizationModel</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"control-content\">\r\n                <div id=\"action-description\">\r\n                        <p>\r\n                            \n          <p>\n            This sample illustrates a simple business management structure that\n            is built from an external data source. Hierarchical tree layout\n            algorithm is used to build organizational charts. Customizing the\n            orientation and structure of the organizational chart is illustrated\n            in this example.\n          </p>\n        \r\n                        </p>\r\n                    </div>\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"control-section\">\r\n                            <div id='sample'>\r\n                                <div id='loader'>Loading....</div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    </div>\r\n                    <div id=\"description-section\">Description</div>    \r\n                    <div id=\"description\">\r\n                        <p>\r\n                           \n          <p>\n            This example shows how to generate an organizational chart from an\n            external data source. The spacing between the objects can also be\n            customized in the chart. The <code>horizontalSpacing</code> and{&quot; &quot;}\n            <code>verticalSpacing</code> properties of\n            <code>layout</code> can be used to customize the space between\n            objects in a tree. The <code>layoutOrientation</code> property of\n            <code>layout</code> can be used to change the orientation of the\n            chart. The <code>getLayoutInfo</code> property of\n            <code>layout</code> can be used to customize the tree structure. To\n            change the tree structure, choose any template in the palette.\n          </p>\n\n          <p 500=\"\" style=\"{{\" fontweight:=\"\" }}=\"\">Injecting Module</p>\n          <p>\n            The diagram component&#x2019;s features are segregated into individual\n            feature-wise modules. To generate diagrams from an external data\n            source, inject\n            <code>DataBinding</code> module into <code>services</code>. To\n            automatically arrange the objects in an organizational chart, inject\n            <code>HierarchicalTree</code> module into <code>services</code>.\n          </p>\n          <br>\n        \r\n                         </p>     \r\n                    </div>    \r\n                </div>             \r\n            </div>\r\n                \r\n            </div>\r\n        </div>\r\n          \r\n</body>\r\n</html>\r\n","app/index.tsx":"import * as ReactDOM from \"react-dom\";\r\nimport * as React from \"react\";\r\nimport {\r\n  TreeInfo,\r\n  Node,\r\n  SubTreeOrientation,\r\n  LayoutOrientation,\r\n  SubTreeAlignments,\r\n  LayoutAnimation,\r\n  HierarchicalTree,\r\n  DataBinding,\r\n  DiagramComponent,\r\n  Diagram,\r\n  NodeModel,\r\n  ConnectorModel,\r\n  SnapConstraints,\r\n  Inject,\r\n  DiagramTools\r\n} from \"@syncfusion/ej2-react-diagrams\";\r\nimport { SampleBase } from './sample-base';\r\nimport { DataManager } from \"@syncfusion/ej2-data\";\r\nimport { Point } from \"@syncfusion/ej2-diagrams/src/diagram/primitives/point\";\r\nimport { NumericTextBoxComponent } from \"@syncfusion/ej2-react-inputs\";\r\n\r\nexport interface EmployeeInfo {\r\n  Role: string;\r\n  color: string;\r\n}\r\n\r\nexport let localBindData: object[] = [\r\n  { Id: \"parent\", Role: \"Board\", color: \"#71AF17\" },\r\n  {\r\n    Id: \"1\",\r\n    Role: \"General Manager\",\r\n    Manager: \"parent\",\r\n    ChartType: \"right\",\r\n    color: \"#71AF17\"\r\n  },\r\n  {\r\n    Id: \"11\",\r\n    Role: \"Assistant General Manager\",\r\n    Manager: \"1\",\r\n    color: \"#71AF17\"\r\n  },\r\n  {\r\n    Id: \"2\",\r\n    Role: \"Human Resource Manager\",\r\n    Manager: \"1\",\r\n    ChartType: \"right\",\r\n    color: \"#1859B7\"\r\n  },\r\n  { Id: \"3\", Role: \"Trainers\", Manager: \"2\", color: \"#2E95D8\" },\r\n  { Id: \"4\", Role: \"Recruiting Team\", Manager: \"2\", color: \"#2E95D8\" },\r\n  { Id: \"5\", Role: \"Finance Asst. Manager\", Manager: \"2\", color: \"#2E95D8\" },\r\n  {\r\n    Id: \"6\",\r\n    Role: \"Design Manager\",\r\n    Manager: \"1\",\r\n    ChartType: \"right\",\r\n    color: \"#1859B7\"\r\n  },\r\n  { Id: \"7\", Role: \"Design Supervisor\", Manager: \"6\", color: \"#2E95D8\" },\r\n  { Id: \"8\", Role: \"Development Supervisor\", Manager: \"6\", color: \"#2E95D8\" },\r\n  { Id: \"9\", Role: \"Drafting Supervisor\", Manager: \"6\", color: \"#2E95D8\" },\r\n  {\r\n    Id: \"10\",\r\n    Role: \"Operations Manager\",\r\n    Manager: \"1\",\r\n    ChartType: \"right\",\r\n    color: \"#1859B7\"\r\n  },\r\n  { Id: \"11\", Role: \"Statistics Department\", Manager: \"10\", color: \"#2E95D8\" },\r\n  { Id: \"12\", Role: \"Logistics Department\", Manager: \"10\", color: \"#2E95D8\" },\r\n  {\r\n    Id: \"16\",\r\n    Role: \"Marketing Manager\",\r\n    Manager: \"1\",\r\n    ChartType: \"right\",\r\n    color: \"#1859B7\"\r\n  },\r\n  { Id: \"17\", Role: \"Overseas Sales Manager\", Manager: \"16\", color: \"#2E95D8\" },\r\n  { Id: \"18\", Role: \"Petroleum Manager\", Manager: \"16\", color: \"#2E95D8\" },\r\n  {\r\n    Id: \"20\",\r\n    Role: \"Service Department Manager\",\r\n    Manager: \"16\",\r\n    color: \"#2E95D8\"\r\n  },\r\n  {\r\n    Id: \"21\",\r\n    Role: \"Quality Control Department\",\r\n    Manager: \"16\",\r\n    color: \"#2E95D8\"\r\n  }\r\n];\r\n\r\nexport interface EmployeeInfo {\r\n  Name: string;\r\n}\r\n\r\nconst SAMPLE_CSS = `.image-pattern-style {\r\n        background-color: white;\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n        height: 75px;\r\n        width: calc((100% - 18px) / 3);\r\n        cursor: pointer;\r\n        border: 1px solid #D5D5D5;\r\n        background-position: center;\r\n        float: left;\r\n    }\r\n\r\n    .image-pattern-style:hover {\r\n        border-color: gray;\r\n        border-width: 2px;\r\n    }\r\n\r\n    .row {\r\n        margin-left: 0px;\r\n        margin-right: 0px;\r\n    }\r\n\r\n    .row-header {\r\n        font-size: 13px;\r\n        font-weight: 500;\r\n    }\r\n\r\n    .row-header1 {\r\n        font-size: 12px;\r\n        padding-left: 2px;\r\n        font-weight: 400;\r\n    }\r\n\r\n    .property-panel-header {\r\n      padding-top: 15px;\r\n      padding-bottom: 15px;\r\n    }\r\n\r\n    .e-selected-orientation-style {\r\n        border-color: #006CE6;\r\n        border-width: 2px;\r\n    }\r\n\r\n    .e-selected-pattern-style {\r\n        border-color: #006CE6;\r\n        border-width: 2px;\r\n    }\r\n\r\n    .e-checkbox-wrapper .e-label {\r\n        font-size: 12px;\r\n    }\r\n\r\n    .diagram-control-pane .col-xs-6 {\r\n        padding-left: 0px;\r\n        padding-right: 0px;\r\n    }`;\r\n\r\nlet diagramInstance: DiagramComponent;\r\nlet hSpacing: NumericTextBoxComponent;\r\nlet vSpacing: NumericTextBoxComponent;\r\nlet orien: LayoutOrientation;\r\nlet typ: SubTreeAlignments;\r\n\r\nexport class OrganizationModel extends SampleBase<{}, {}> {\r\n  rendereComplete() {\r\n    //Click Event for orientation of the PropertyPanel.\r\n    document.getElementById(\"orientation\").onclick = (args: MouseEvent) => {\r\n      let target: HTMLElement = args.target as HTMLElement;\r\n      let selectedElement: HTMLCollection = document.getElementsByClassName(\r\n        \"e-selected-orientation-style\"\r\n      );\r\n      if (selectedElement.length) {\r\n        selectedElement[0].classList.remove(\"e-selected-orientation-style\");\r\n      }\r\n      if (!target.classList.contains(\"e-selected-orientation-style\")) {\r\n        target.classList.add(\"e-selected-orientation-style\");\r\n      }\r\n      if (\r\n        target.className === \"image-pattern-style e-selected-orientation-style\"\r\n      ) {\r\n        switch (target.id) {\r\n          case \"toptobottom\":\r\n            diagramInstance.layout.orientation = \"TopToBottom\";\r\n            break;\r\n          case \"bottomtotop\":\r\n            diagramInstance.layout.orientation = \"BottomToTop\";\r\n            break;\r\n          case \"lefttoright\":\r\n            diagramInstance.layout.orientation = \"LeftToRight\";\r\n            break;\r\n          case \"righttoleft\":\r\n            diagramInstance.layout.orientation = \"RightToLeft\";\r\n            break;\r\n          default:\r\n            if (selectedElement.length) {\r\n              selectedElement[0].classList.remove(\r\n                \"e-selected-orientation-style\"\r\n              );\r\n            }\r\n        }\r\n        diagramInstance.dataBind();\r\n        diagramInstance.doLayout();\r\n      }\r\n    };\r\n    //Click Event for pattern of the PropertyPanel.\r\n    document.getElementById(\"pattern\").onclick = (args: MouseEvent) => {\r\n      let target: HTMLElement = args.target as HTMLElement;\r\n      let selectedpatternElement: HTMLCollection = document.getElementsByClassName(\r\n        \"e-selected-pattern-style\"\r\n      );\r\n      if (selectedpatternElement.length) {\r\n        selectedpatternElement[0].classList.remove(\"e-selected-pattern-style\");\r\n      }\r\n      if (!target.classList.contains(\"e-selected-pattern-style\")) {\r\n        target.classList.add(\"e-selected-pattern-style\");\r\n      }\r\n      if (target.className === \"image-pattern-style e-selected-pattern-style\") {\r\n        switch (target.id) {\r\n          case \"pattern1\":\r\n            orien = \"Vertical\".toString() as LayoutOrientation;\r\n            typ = \"Alternate\" as SubTreeAlignments;\r\n            break;\r\n          case \"pattern2\":\r\n            orien = \"Vertical\".toString() as LayoutOrientation;\r\n            typ = \"Left\" as SubTreeAlignments;\r\n            break;\r\n          case \"pattern3\":\r\n            orien = \"Vertical\".toString() as LayoutOrientation;\r\n            typ = \"Left\" as SubTreeAlignments;\r\n            break;\r\n          case \"pattern4\":\r\n            orien = \"Vertical\".toString() as LayoutOrientation;\r\n            typ = \"Right\" as SubTreeAlignments;\r\n            break;\r\n          case \"pattern5\":\r\n            orien = \"Vertical\".toString() as LayoutOrientation;\r\n            typ = \"Right\" as SubTreeAlignments;\r\n            break;\r\n          case \"pattern6\":\r\n            orien = \"Horizontal\".toString() as LayoutOrientation;\r\n            typ = \"Balanced\" as SubTreeAlignments;\r\n            break;\r\n          case \"pattern7\":\r\n            orien = \"Horizontal\".toString() as LayoutOrientation;\r\n            typ = \"Center\" as SubTreeAlignments;\r\n            break;\r\n          case \"pattern8\":\r\n            orien = \"Horizontal\".toString() as LayoutOrientation;\r\n            typ = \"Left\" as SubTreeAlignments;\r\n            break;\r\n          case \"pattern9\":\r\n            orien = \"Horizontal\".toString() as LayoutOrientation;\r\n            typ = \"Right\" as SubTreeAlignments;\r\n            break;\r\n          default:\r\n            if (selectedpatternElement.length) {\r\n              selectedpatternElement[0].classList.remove(\r\n                \"e-selected-pattern-style\"\r\n              );\r\n            }\r\n        }\r\n        diagramInstance.layout.getLayoutInfo = (\r\n          node: Node,\r\n          options: TreeInfo\r\n        ) => {\r\n          if (target.id === \"pattern4\" || target.id === \"pattern3\") {\r\n            options.offset = -50;\r\n          }\r\n          if (orien) {\r\n            getLayoutInfo(node, options, orien, typ);\r\n          }\r\n        };\r\n\r\n        diagramInstance.dataBind();\r\n        diagramInstance.doLayout();\r\n      }\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"control-pane diagram-control-pane\">\r\n        <style>{SAMPLE_CSS}</style>\r\n        <div className=\"col-lg-8 control-section\">\r\n          <div className=\"content-wrapper\"style={{width : \"100%\"}}>\r\n            <DiagramComponent\r\n              id=\"diagram\"\r\n              ref={diagram => (diagramInstance = diagram)}\r\n              width={\"100%\"}\r\n              height={\"700px\"}\r\n              snapSettings={{ constraints: SnapConstraints.None }}\r\n              //configures data source settings\r\n              dataSourceSettings={{\r\n                id: \"Id\",\r\n                parentId: \"Manager\",\r\n                dataManager: new DataManager(localBindData as JSON[]),\r\n                doBinding: (\r\n                  nodeModel: NodeModel,\r\n                  data: object,\r\n                  diagram: Diagram\r\n                ) => {\r\n                  nodeModel.shape = {\r\n                    type: \"Text\",\r\n                    content: (data as EmployeeInfo).Role,\r\n                    margin: { left: 10, right: 10, top: 10, bottom: 10 }\r\n                  };\r\n                }\r\n              }}\r\n              //Disables all interactions except zoom/pan\r\n              tool={DiagramTools.ZoomPan}\r\n              //Configures automatic layout\r\n              layout={{\r\n                type: \"OrganizationalChart\",\r\n                getLayoutInfo: (node: Node, options: TreeInfo) => {\r\n                  /* tslint:disable:no-string-literal */\r\n                  if ((node.data as DataInfo)[\"Role\"] === \"General Manager\") {\r\n                    options.assistants.push(options.children[0]);\r\n                    options.children.splice(0, 1);\r\n                  }\r\n                  if (!options.hasSubTree) {\r\n                    options.type = \"Right\";\r\n                  }\r\n                }\r\n              }}\r\n              //Defines the default node and connector properties\r\n              getNodeDefaults={(obj: Node, diagram: Diagram) => {\r\n                /* tslint:disable:no-string-literal */\r\n                return nodeDefaults(obj, diagram);\r\n              }}\r\n              getConnectorDefaults={(\r\n                connector: ConnectorModel,\r\n                diagram: Diagram\r\n              ) => {\r\n                return connectorDefaults(connector, diagram);\r\n              }}\r\n            >\r\n              <Inject\r\n                services={[DataBinding, HierarchicalTree, LayoutAnimation]}\r\n              />\r\n            </DiagramComponent>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"col-lg-4 property-section\"\r\n          style={{ float: \"right\", height: \"80%\" }}\r\n        >\r\n          <div className=\"property-panel-header\">Properties</div>\r\n          <div className=\"row property-panel-content\" id=\"appearance\">\r\n            <div className=\"row\" style={{ paddingTop: \"10px\" }}>\r\n              <div className=\"row row-header\">Orientation</div>\r\n              <div id=\"orientation\">\r\n                <div className=\"row\" style={{ paddingTop: \"8px\" }}>\r\n                  <div\r\n                    className=\"image-pattern-style e-selected-orientation-style\"\r\n                    id=\"toptobottom\"\r\n                    style={{\r\n                      backgroundImage:\r\n                        \"url('http://ej2.syncfusion.com/react/demos/src/diagram/Images/common-orientation/toptobottom.png')\",\r\n                      marginRight: \"3px\"\r\n                    }}\r\n                  />\r\n                  <div\r\n                    className=\"image-pattern-style\"\r\n                    id=\"bottomtotop\"\r\n                    style={{\r\n                      backgroundImage:\r\n                        \"url('http://ej2.syncfusion.com/react/demos/src/diagram/Images/common-orientation/bottomtotop.png')\",\r\n                      margin: \"0px 3px\"\r\n                    }}\r\n                  />\r\n                  <div\r\n                    className=\"image-pattern-style\"\r\n                    id=\"lefttoright\"\r\n                    style={{\r\n                      backgroundImage:\r\n                        \"url('http://ej2.syncfusion.com/react/demos/src/diagram/Images/common-orientation/lefttoright.png')\",\r\n                      marginRight: \"0px 3px\"\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"row\" style={{ paddingTop: \"8px\" }}>\r\n                  <div\r\n                    className=\"image-pattern-style\"\r\n                    id=\"righttoleft\"\r\n                    style={{\r\n                      backgroundImage:\r\n                        \"url('http://ej2.syncfusion.com/react/demos/src/diagram/Images/common-orientation/righttoleft.png')\",\r\n                      margin: \"0px 3px\"\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row row-header\" style={{ paddingTop: \"10px\" }}>\r\n                Subtree Alignment\r\n              </div>\r\n              <div id=\"pattern\">\r\n                <div className=\"row\" style={{ paddingTop: \"8px\" }}>\r\n                  <div\r\n                    className=\"image-pattern-style\"\r\n                    id=\"pattern1\"\r\n                    style={{\r\n                      backgroundImage:\r\n                        \"url('http://ej2.syncfusion.com/react/demos/src/diagram/patternimages/Pattern_1.png')\",\r\n                      marginRight: \"3px\"\r\n                    }}\r\n                  />\r\n                  <div\r\n                    className=\"image-pattern-style e-selected-pattern-style\"\r\n                    id=\"pattern2\"\r\n                    style={{\r\n                      backgroundImage:\r\n                        \"url('http://ej2.syncfusion.com/react/demos/src/diagram/patternimages/Pattern_2.png')\",\r\n                      marginRight: \"3px\"\r\n                    }}\r\n                  />\r\n                  <div\r\n                    className=\"image-pattern-style\"\r\n                    id=\"pattern5\"\r\n                    style={{\r\n                      backgroundImage:\r\n                        \"url('http://ej2.syncfusion.com/react/demos/src/diagram/patternimages/Pattern_5.png')\",\r\n                      margin: \"0px 3px\"\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"row\" style={{ paddingTop: \"8px\" }}>\r\n                  <div\r\n                    className=\"image-pattern-style\"\r\n                    id=\"pattern6\"\r\n                    style={{\r\n                      backgroundImage:\r\n                        \"url('http://ej2.syncfusion.com/react/demos/src/diagram/patternimages/Pattern_6.png')\",\r\n                      marginRight: \"3px\"\r\n                    }}\r\n                  />\r\n                  <div\r\n                    className=\"image-pattern-style\"\r\n                    id=\"pattern7\"\r\n                    style={{\r\n                      backgroundImage:\r\n                        \"url('http://ej2.syncfusion.com/react/demos/src/diagram/patternimages/Pattern_7.png')\",\r\n                      marginRight: \"3px\"\r\n                    }}\r\n                  />\r\n                  <div\r\n                    className=\"image-pattern-style\"\r\n                    id=\"pattern8\"\r\n                    style={{\r\n                      backgroundImage:\r\n                        \"url('http://ej2.syncfusion.com/react/demos/src/diagram/patternimages/Pattern_8.png')\",\r\n                      margin: \"0px 3px\"\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"row\" style={{ paddingTop: \"8px\" }}>\r\n                  <div\r\n                    className=\"image-pattern-style\"\r\n                    id=\"pattern9\"\r\n                    style={{\r\n                      backgroundImage:\r\n                        \"url('http://ej2.syncfusion.com/react/demos/src/diagram/patternimages/Pattern_9.png')\",\r\n                      margin: \"0px 3px\"\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row property-panel-content\" style={{ paddingTop: \"10px\" }}>\r\n            <div className=\"row row-header\">Behavior</div>\r\n            <div className=\"row\" style={{ paddingTop: \"8px\" }}>\r\n              <div\r\n                style={{ display: \"table\", height: \"35px\" }}\r\n                className=\"col-xs-6\"\r\n              >\r\n                <div style={{ display: \"table-cell\", verticalAlign: \"middle\" }}>\r\n                  Horizontal Spacing\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xs-6\">\r\n                <NumericTextBoxComponent\r\n                  ref={hSpacingRef => (hSpacing = hSpacingRef)}\r\n                  id=\"hSpacing\"\r\n                  style={{ width: \"100%\" }}\r\n                  min={20}\r\n                  max={60}\r\n                  step={2}\r\n                  value={30}\r\n                  change={() => {\r\n                    diagramInstance.layout.horizontalSpacing = Number(\r\n                      hSpacing.value\r\n                    );\r\n                    diagramInstance.dataBind();\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\" style={{ paddingTop: \"8px\" }}>\r\n              <div\r\n                style={{ display: \"table\", height: \"35px\" }}\r\n                className=\"col-xs-6\"\r\n              >\r\n                <div style={{ display: \"table-cell\", verticalAlign: \"middle\" }}>\r\n                  Vertical Spacing\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xs-6\">\r\n                <NumericTextBoxComponent\r\n                  ref={vSpacingRef => (vSpacing = vSpacingRef)}\r\n                  id=\"vSpacing\"\r\n                  style={{ width: \"100%\" }}\r\n                  min={20}\r\n                  max={60}\r\n                  step={2}\r\n                  value={30}\r\n                  change={() => {\r\n                    diagramInstance.layout.verticalSpacing = Number(\r\n                      vSpacing.value\r\n                    );\r\n                    diagramInstance.dataBind();\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//set orientation and type of the Layout.\r\nfunction getLayoutInfo(\r\n  node: Node,\r\n  options: TreeInfo,\r\n  orientation: LayoutOrientation,\r\n  type: SubTreeAlignments\r\n): void {\r\n  /* tslint:disable:no-string-literal */\r\n  if ((node.data as DataInfo)[\"Role\"] === \"General Manager\") {\r\n    options.assistants.push(options.children[0]);\r\n    options.children.splice(0, 1);\r\n  }\r\n  if (!options.hasSubTree) {\r\n    options.orientation = orientation as SubTreeOrientation;\r\n    options.type = type;\r\n  }\r\n}\r\n\r\n//sets default value for Node.\r\nfunction nodeDefaults(obj: Node, diagram: Diagram): Node {\r\n  obj.backgroundColor = (obj.data as EmployeeInfo).color;\r\n  obj.style = { fill: \"none\", strokeColor: \"none\", color: \"white\" };\r\n  obj.expandIcon = {\r\n    height: 10,\r\n    width: 10,\r\n    shape: \"None\",\r\n    fill: \"lightgray\",\r\n    offset: { x: 0.5, y: 1 }\r\n  };\r\n  obj.expandIcon.verticalAlignment = \"Center\";\r\n  obj.expandIcon.margin = { left: 0, right: 0, top: 0, bottom: 0 };\r\n  obj.collapseIcon.offset = { x: 0.5, y: 1 };\r\n  obj.collapseIcon.verticalAlignment = \"Center\";\r\n  obj.collapseIcon.margin = { left: 0, right: 0, top: 0, bottom: 0 };\r\n  obj.collapseIcon.height = 10;\r\n  obj.collapseIcon.width = 10;\r\n  obj.collapseIcon.shape = \"None\";\r\n  obj.collapseIcon.fill = \"lightgray\";\r\n  obj.width = 120;\r\n  obj.height = 30;\r\n  return obj;\r\n}\r\n\r\n//sets default value for Connector.\r\nfunction connectorDefaults(\r\n  connector: ConnectorModel,\r\n  diagram: Diagram\r\n): ConnectorModel {\r\n  connector.targetDecorator.shape = \"None\";\r\n  connector.type = \"Orthogonal\";\r\n  connector.constraints = 0;\r\n  connector.cornerRadius = 0;\r\n  return connector;\r\n}\r\n\r\nexport interface DataInfo {\r\n  [key: string]: string;\r\n}\r\n\nReactDOM.render(<OrganizationModel />, document.getElementById('sample'));","app/sample-base.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { enableRipple } from '@syncfusion/ej2-base';\r\n\r\nenableRipple((window as any).ripple);\r\nexport class SampleBase<P, S> extends React.PureComponent<RouteComponentProps<any> & P, S>{\r\n    public rendereComplete(): void {\r\n        /**custom render complete function */\r\n    }\r\n    componentDidMount(): void {\r\n        setTimeout(() => {\r\n            this.rendereComplete();\r\n        }\r\n        );\r\n    }\r\n}"}