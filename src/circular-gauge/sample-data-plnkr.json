{"index.css":"","systemjs.config.js":"System.config({\r\n    transpiler: \"ts\",\r\n    typescriptOptions: {\r\n            target: \"es5\",\r\n            module: \"commonjs\",\r\n            moduleResolution: \"node\",\r\n            emitDecoratorMetadata: true,\r\n            experimentalDecorators: true,\r\n            \"jsx\": \"react\"\r\n    },\r\n     meta: {\r\n      'typescript': {\r\n        \"exports\": \"ts\"\r\n      },\r\n      '*.json': { loader: 'plugin-json' }\r\n    },\r\n    paths: {\r\n        \"syncfusion:\": \"http://cdn.syncfusion.com/ej2/\"},\r\n    map: {\r\n        app: 'app',\r\n        ts: \"https://unpkg.com/plugin-typescript@4.0.10/lib/plugin.js\",\r\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\r\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\r\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\r\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-splitbuttons\": \"syncfusion:ej2-splitbuttons/dist/ej2-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-maps\": \"syncfusion:ej2-maps/dist/ej2-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-treemap\": \"syncfusion:ej2-treemap/dist/ej2-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\r\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-schedule\": \"syncfusion:ej2-schedule/dist/ej2-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\r\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\r\n        \"@syncfusion/ej2-documenteditor\": \"syncfusion:ej2-documenteditor/dist/ej2-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-notifications\": \"syncfusion:ej2-notifications/dist/ej2-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-richtexteditor\": \"syncfusion:ej2-richtexteditor/dist/ej2-richtexteditor.umd.min.js\",\r\n\t\t\"@syncfusion/ej2-svg-base\": \"syncfusion:ej2-svg-base/dist/ej2-svg-base.umd.min.js\",\r\n        \"@syncfusion/ej2-pivotview\": \"syncfusion:ej2-pivotview/dist/ej2-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-heatmap\": \"syncfusion:ej2-heatmap/dist/ej2-heatmap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-base\": \"syncfusion:ej2-react-base/dist/ej2-react-base.umd.min.js\",\r\n        \"@syncfusion/ej2-react-buttons\": \"syncfusion:ej2-react-buttons/dist/ej2-react-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-splitbuttons\": \"syncfusion:ej2-react-splitbuttons/dist/ej2-react-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-charts\": \"syncfusion:ej2-react-charts/dist/ej2-react-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-react-maps\": \"syncfusion:ej2-react-maps/dist/ej2-react-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-react-treemap\": \"syncfusion:ej2-react-treemap/dist/ej2-react-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-circulargauge\": \"syncfusion:ej2-react-circulargauge/dist/ej2-react-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lineargauge\": \"syncfusion:ej2-react-lineargauge/dist/ej2-react-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-calendars\": \"syncfusion:ej2-react-calendars/dist/ej2-react-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-react-dropdowns\": \"syncfusion:ej2-react-dropdowns/dist/ej2-react-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-react-grids\": \"syncfusion:ej2-react-grids/dist/ej2-react-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-react-inputs\": \"syncfusion:ej2-react-inputs/dist/ej2-react-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lists\": \"syncfusion:ej2-react-lists/dist/ej2-react-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-react-navigations\": \"syncfusion:ej2-react-navigations/dist/ej2-react-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-react-popups\": \"syncfusion:ej2-react-popups/dist/ej2-react-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-react-schedule\": \"syncfusion:ej2-react-schedule/dist/ej2-react-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-react-documenteditor\": \"syncfusion:ej2-react-documenteditor/dist/ej2-react-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-notifications\": \"syncfusion:ej2-react-notifications/dist/ej2-react-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-react-richtexteditor\": \"syncfusion:ej2-react-richtexteditor/dist/ej2-react-richtexteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-pivotview\": \"syncfusion:ej2-react-pivotview/dist/ej2-react-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-react-heatmap\": \"syncfusion:ej2-react-heatmap/dist/ej2-react-heatmap.umd.min.js\",\r\n        \"react-dom\":\"https://unpkg.com/react-dom@15.5.4/dist/react-dom.min.js\",\r\n        \"react\":\"https://unpkg.com/react@15.5.4/dist/react.min.js\",\r\n    },\r\n    packages: {\r\n        'app': { main: 'index', defaultExtension: 'tsx' },\r\n    }\r\n});\r\n\r\nSystem.import('app');","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Circular-gauge · SampleData · Essential JS 2 for React · Syncfusion</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <!-- {{:meta}} -->\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <script type=\"text/javascript\">\r\n        var themeName = location.hash || 'material';\r\n        themeName = themeName.replace('#','');\r\n        window.ripple = (themeName === \"material\")\r\n        document.write('<link href=\"http://cdn.syncfusion.com/ej2/' + themeName + '.css\" rel=\"stylesheet\">');\r\n    </script>\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\r\n    <script src=\"systemjs.config.js\"></script>\r\n    <link href=\"index.css\" rel=\"stylesheet\" />\r\n     <style>\r\n        #loader {\r\n            color: #008cff;\r\n            height: 40px;\r\n            left: 45%;\r\n            position: absolute;\r\n            top: 45%;\r\n            width: 30%;\r\n        }\r\n        body {\r\n            touch-action:none;\r\n        }\r\n        .body {\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n        }\r\n\r\n        .e-view {\r\n            bottom: 0;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n        }\r\n\r\n        .sb-left {\r\n            float: left;\r\n        }\r\n\r\n        .sb-right {\r\n            float: right;\r\n        }\r\n\r\n        .sb-block {\r\n            display: block;\r\n        }\r\n\r\n        .sb-table {\r\n            display: table;\r\n        }\r\n\r\n        .sb-table-cell {\r\n            display: table-cell;\r\n            vertical-align: middle;\r\n        }\r\n\r\n        /*sample header*/\r\n\r\n\r\n        .sb-header {\r\n            height: 48px;\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.12);\r\n            z-index: 1001;\r\n            opacity: 100;\r\n        }\r\n\r\n\r\n        .sb-header-left, .sb-header-right {\r\n            height: 100%;\r\n        }\r\n\r\n        #sb-header-text {\r\n            padding-left: 22px;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        .header-logo {\r\n            float: left;\r\n            padding-left: 8px;\r\n            padding-right: 22px;\r\n        }\r\n\r\n        .footer-logo {\r\n            background: url(https://ej2.syncfusion.com/home/images/footer-logo.svg) no-repeat right;\r\n            height: 40px;\r\n            width: 140px;\r\n        }\r\n\r\n        .sb-header-splitter {\r\n            float: left;\r\n            border-left: 1px solid rgb(196, 196, 196);\r\n            height: 32px;\r\n            margin-top: 8px;\r\n            padding-left: 22 px;\r\n        }\r\n\r\n        .sb-header-settings {\r\n            display: none;\r\n        }\r\n\r\n        .product-style a{\r\n        padding-right: 15px;\r\n        font-family:Roboto;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        color: #363636;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        }\r\n        .product-style a:hover {\r\n            color:#3C78EF;\r\n        }\r\n\r\n        .sb-download-btn a {\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-download-text {\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-wrapper {\r\n            padding-right: 27px;\r\n        }\r\n\r\n        .sb-download-btn:hover .sb-download-btn:focus .sb-download-btn.active {\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\";\r\n            font-weight: bold;\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-btn:hover {\r\n            background: #006CE6;\r\n        }\r\n\r\n        .sb-download-btn:focus {\r\n            background: #0051CB;\r\n        }\r\n\r\n        .sb-download-btn.active {\r\n            background: #0036B1;\r\n        }\r\n\r\n        .sb-download-btn {\r\n            background-color: #3C78EF;\r\n            opacity: 100;\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n            font-weight: 500;\r\n            line-height: 18px;\r\n            height: 32px;\r\n            border-color: transparent;\r\n        }\r\n\r\n        .sb-bread-crumb {\r\n            padding-left: 20px;\r\n            padding-top: 24px;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        .category-allcontrols a, .category-text a, .crumb-sample {\r\n            display: table;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #3C78EF;\r\n            text-align: left;\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-bread-crumb .sb-bread-crumb-text>div {\r\n            font-size: 15px;\r\n            font-weight: 500;\r\n            padding-right: 8px;\r\n            cursor: default;\r\n            display: table-cell;\r\n        }\r\n\r\n        .sb-bread-crumb-text>div.seperator {\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            vertical-align: bottom;\r\n        } \r\n\r\n        .content {\r\n        overflow: auto;\r\n        height: calc(100% - 50px);\r\n        top: 50px;\r\n        }\r\n\r\n\r\n        .sample-content {\r\n            top: 48px;\r\n            background: #FFFFFF;\r\n        }\r\n\r\n        .div {\r\n        display: block;\r\n        }\r\n\r\n        .control-section {\r\n            padding-left: 4px;\r\n        }\r\n\r\n        .crumb-sample {\r\n            color: #000000;\r\n            line-height: 18px;\r\n        }\r\n\r\n        #description {\r\n            padding-bottom: 16px;\r\n            padding-left: 20px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n            padding-top: 14px;\r\n        }\r\n\r\n        #action-description {\r\n            padding-left: 20px;\r\n            padding-bottom: 15px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        #description-section {\r\n            padding-left: 20px;\r\n            padding-top: 30px;\r\n            opacity: 0.87;\r\n            font-family:Roboto;\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n\r\n\r\n    </style>\r\n</head>\r\n\r\n<body class='e-view ej2-new' aria-busy=\"true\">\r\n        <div class=\"sample-browser\">\r\n            <div id='sample-header' class=\"sb-header\" role=\"banner\">\r\n                <div class='sb-header-left sb-left sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"header-logo\">\r\n                            <a href=\"https://ej2.syncfusion.com/home/react.html\" target=\"\" rel=\"noopener noreferrer\">\r\n                                <div class=\"footer-logo\"> </div>\r\n                            </a>\r\n                        </div>\r\n    \r\n                    </div>\r\n                    <div class=\"sb-header-splitter sb-download-splitter\"></div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div id='sb-header-text' class='e-sb-header-text'>\r\n    \r\n                            <span class='sb-header-text-left'>Essential JS 2 for React</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class='sb-header-right sb-right sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class='product-style'>\r\n                            <div><a href=\"https://www.syncfusion.com/products/react/circular-gauge\">PRODUCT DETAILS</a></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"sb-header-item sb-table-cell sb-download-wrapper\">\r\n                            <a href=\"https://www.syncfusion.com/downloads/essential-js2\" target=\"_blank\">\r\n                                <button id=\"download-now\" class=\"sb-download-btn\">\r\n                                    <span class=\"sb-download-text\">DOWNLOAD</span>\r\n                                </button>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n            <div class ='content e-view'>\r\n            <div class='sample-content'>\r\n                <div id=\"sample-bread-crumb\" class=\"sb-bread-crumb\">\r\n                    <div class=\"sb-bread-crumb-text\">\r\n                        <div class=\"category-allcontrols\"><a href=\"https://ej2.syncfusion.com/react/demos\"><span>All Controls</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"category-text bread-ctext\"><a href=\"https://ej2.syncfusion.com/react/demos/#/material/circular-gauge/default.html\"><span>Circular-gauge</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"crumb-sample\">SampleData</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"control-content\">\r\n                <div id=\"action-description\">\r\n                        <p>\r\n                            \n                    <p>\n                    This sample demonstrates the live data sample in circular gauge.\n                </p>\n                    \r\n                        </p>\r\n                    </div>\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"control-section\">\r\n                            <div id='sample'>\r\n                                <div id='loader'>Loading....</div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    </div>\r\n                    <div id=\"description-section\">Description</div>    \r\n                    <div id=\"description\">\r\n                        <p>\r\n                           \n                        <p>\n                            Pointer values in the gauge can be updated dynamically by using&#xA0;<code>setPointerValue</code>&#xA0;method.\n                            In this example, a stock price changes over the countries, are showed by using a gauge.\n                        </p>\n                        <p>\n                            More information on the gauge and its methods can be found in can be found in this\n                            <a target=\"_blank\" href=\"http://ej2.syncfusion.com/documentation\"> documentation section</a>.\n                        </p>\n                    \r\n                         </p>     \r\n                    </div>    \r\n                </div>             \r\n            </div>\r\n                \r\n            </div>\r\n        </div>\r\n          \r\n</body>\r\n</html>\r\n","app/index.tsx":"/**\r\n * Sample for data sample\r\n */\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport {\r\n    CircularGaugeComponent, AxesDirective, AxisDirective, Inject, ILoadedEventArgs,\r\n    PointersDirective, PointerDirective, RangesDirective, RangeDirective,\r\n    Annotations, AnnotationDirective, AnnotationsDirective, GaugeTheme,\r\n} from '@syncfusion/ej2-react-circulargauge';\r\nimport { GridComponent, ColumnsDirective, ColumnDirective } from '@syncfusion/ej2-react-grids';\r\nimport { SampleBase } from './sample-base';\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }\r\n    .imageStyle {\r\n        width: 16px;\r\n        height: 16px;\r\n        margin-top: 4px;\r\n    }\r\n        \r\n    .fontDes {\r\n        float: right;\r\n        padding-left: 5px;\r\n        color:#424242;\r\n        font-size:20px;\r\n        font-family:Roboto\";\r\n    }\r\n    .fontDes1 {\r\n        color:#9E9E9E;\r\n        font-size:16px;\r\n        font-family:Roboto\";\r\n    }\r\n    `;\r\nexport class SampleData extends SampleBase<{}, {}> {\r\n    private grid1: GridComponent;\r\n    public load(args: ILoadedEventArgs): void {\r\n        let selectedTheme: string = location.hash.split('/')[1];\r\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\r\n        args.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)) as GaugeTheme;\r\n    }\r\n    private sampleGauge1: CircularGaugeComponent;\r\n    private sampleGauge2: CircularGaugeComponent;\r\n    private sampleGauge3: CircularGaugeComponent;\r\n    public dataInterval1: Object;\r\n    public dataInterval2: Object;\r\n    public orderData: Object[] = [\r\n        {\r\n            'Country': 'Germany',\r\n            'Sales': 500,\r\n            'Target': 400,\r\n            'vsTarget': 300\r\n        }, {\r\n            'Country': 'USA',\r\n            'Sales': 1000,\r\n            'Target': 600,\r\n            'vsTarget': 360\r\n        }, {\r\n            'Country': 'UK',\r\n            'Sales': 600,\r\n            'Target': 700,\r\n            'vsTarget': -100\r\n        }\r\n    ];\r\n    public onChartLoad(args: ILoadedEventArgs): void {\r\n\r\n        this.dataInterval1 = setInterval(\r\n            (): void => {\r\n                let value1: number = Math.round(Math.random() * (90 - 55) + 55);\r\n                let value2: number = Math.round(Math.random() * (75 - 60) + 60);\r\n                let value3: number = Math.round(Math.random() * (40 - 10) + 10);\r\n                let gridData1: number = 4 * value1;\r\n                let gridData2: number = 6 * value2;\r\n                let gridData3: number = 7 * value3;\r\n                let newVal: number = Math.random() * (90 - 20) + 20;\r\n                if (document.getElementById('sample1-container')) {\r\n                    this.sampleGauge1.axes[0].pointers[0].animation.enable = true;\r\n                    this.sampleGauge2.axes[0].pointers[0].animation.enable = true;\r\n                    this.sampleGauge3.axes[0].pointers[0].animation.enable = true;\r\n                    this.sampleGauge1.setPointerValue(0, 0, value1);\r\n                    this.sampleGauge2.setPointerValue(0, 0, value2);\r\n                    this.sampleGauge3.setPointerValue(0, 0, value3);\r\n                    this.sampleGauge1.setAnnotationValue(0, 0, this.sampleGauge1.axes[0].annotations[0].content);\r\n                    this.sampleGauge2.setAnnotationValue(0, 0, this.sampleGauge2.axes[0].annotations[0].content);\r\n                    this.sampleGauge3.setAnnotationValue(0, 0, this.sampleGauge3.axes[0].annotations[0].content);\r\n                    this.orderData = [\r\n                        {\r\n                            'Country': 'Germany',\r\n                            'Sales': 500,\r\n                            'Target': 400,\r\n                            'vsTarget': gridData1\r\n                        }, {\r\n                            'Country': 'USA',\r\n                            'Sales': 1000,\r\n                            'Target': 600,\r\n                            'vsTarget': gridData2\r\n                        }, {\r\n                            'Country': 'UK',\r\n                            'Sales': 600,\r\n                            'Target': 700,\r\n                            'vsTarget': -gridData3\r\n                        }];\r\n                } else {\r\n                    clearInterval(+this.dataInterval1);\r\n                }\r\n            },\r\n            2000\r\n        );\r\n    };\r\n    public onGridLoad(args: {}): void {\r\n        this.dataInterval2 = setInterval(\r\n            (): void => {\r\n                if (document.getElementById('sample1-container')) {\r\n                    this.grid1.dataSource = this.orderData;\r\n                    this.grid1.refresh()\r\n                } else {\r\n                    clearInterval(+this.dataInterval2);\r\n                }\r\n            }, 2000)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-4\">\r\n                                    <CircularGaugeComponent load={this.load.bind(this)} style={{ height: \"250px\" }} ref={gauge => this.sampleGauge1 = gauge} id='sample1-container'>\r\n                                        <Inject services={[Annotations]} />\r\n                                        <AxesDirective>\r\n                                            <AxisDirective startAngle={230} endAngle={130} minimum={0} maximum={100}\r\n                                                lineStyle={{\r\n                                                    width: 0\r\n                                                }}\r\n                                                majorTicks={{\r\n                                                    width: 0\r\n                                                }}\r\n                                                minorTicks={{\r\n                                                    width: 0\r\n                                                }} labelStyle={{\r\n                                                    font: { size: '0' }\r\n                                                }}>\r\n                                                <AnnotationsDirective>\r\n                                                    <AnnotationDirective\r\n                                                        content='<div id=\"templateWrap\"><img class=\"imageStyle\" src=\"http://ej2.syncfusion.com/react/demos/src/circular-gauge/images/positive.png\" /><div class=\"fontDes\">${pointers[0].value}%</div></div></div>'\r\n                                                        angle={180} zIndex='1'\r\n                                                        radius='30%' />\r\n                                                    <AnnotationDirective\r\n                                                        content='<div class=\"fontDes1\">Germany</div>'\r\n                                                        angle={180} zIndex='1'\r\n                                                        radius='65%' />\r\n                                                </AnnotationsDirective>\r\n                                                <RangesDirective>\r\n                                                    <RangeDirective start={0} end={50} startWidth={15} endWidth={15} color='#EC121C' />\r\n                                                    <RangeDirective start={50} end={100} startWidth={15} endWidth={15} color='#45EA0C' />\r\n                                                </RangesDirective>\r\n                                                <PointersDirective>\r\n                                                    <PointerDirective value={75} radius='60%'\r\n                                                        animation={{ enable: false }}\r\n                                                        color='#777777' pointerWidth={5}\r\n                                                        cap={{\r\n                                                            radius: 6,\r\n                                                            border: { width: 0 },\r\n                                                            color: '#777777'\r\n                                                        }}\r\n                                                        needleTail={{\r\n                                                            length: '25%',\r\n                                                            color: '#777777'\r\n                                                        }}>\r\n                                                    </PointerDirective>\r\n                                                </PointersDirective>\r\n                                            </AxisDirective>\r\n                                        </AxesDirective>\r\n                                    </CircularGaugeComponent>\r\n                                </div>\r\n                                <div className=\"col-sm-4\">\r\n                                    <CircularGaugeComponent load={this.load.bind(this)} style={{ height: \"250px\" }} ref={gauge => this.sampleGauge2 = gauge} id='sample2-container'>\r\n                                        <Inject services={[Annotations]} />\r\n                                        <AxesDirective>\r\n                                            <AxisDirective startAngle={230} endAngle={130} minimum={0} maximum={100}\r\n                                                lineStyle={{\r\n                                                    width: 0\r\n                                                }}\r\n                                                majorTicks={{\r\n                                                    width: 0\r\n                                                }}\r\n                                                minorTicks={{\r\n                                                    width: 0\r\n                                                }} labelStyle={{\r\n                                                    font: { size: '0' }\r\n                                                }}>\r\n                                                <AnnotationsDirective>\r\n                                                    <AnnotationDirective\r\n                                                        content='<div id=\"templateWrap\"><img class=\"imageStyle\" src=\"http://ej2.syncfusion.com/react/demos/src/circular-gauge/images/positive.png\" /><div class=\"fontDes\">${pointers[0].value}%</div></div></div>'\r\n                                                        angle={180} zIndex='1'\r\n                                                        radius='30%' />\r\n                                                    <AnnotationDirective\r\n                                                        content='<div class=\"fontDes1\">USA</div>'\r\n                                                        angle={180} zIndex='1'\r\n                                                        radius='65%' />\r\n                                                </AnnotationsDirective>\r\n                                                <RangesDirective>\r\n                                                    <RangeDirective start={0} end={50} startWidth={15} endWidth={15} color='#EC121C' />\r\n                                                    <RangeDirective start={50} end={100} startWidth={15} endWidth={15} color='#45EA0C' />\r\n                                                </RangesDirective>\r\n                                                <PointersDirective>\r\n                                                    <PointerDirective value={60} radius='60%'\r\n                                                        animation={{ enable: false }}\r\n                                                        color='#777777' pointerWidth={5}\r\n                                                        cap={{\r\n                                                            radius: 6,\r\n                                                            border: { width: 0 },\r\n                                                            color: '#777777'\r\n                                                        }}\r\n                                                        needleTail={{\r\n                                                            length: '25%',\r\n                                                            color: '#777777'\r\n                                                        }}>\r\n                                                    </PointerDirective>\r\n                                                </PointersDirective>\r\n                                            </AxisDirective>\r\n                                        </AxesDirective>\r\n                                    </CircularGaugeComponent>\r\n                                </div>\r\n                                <div className=\"col-sm-4\">\r\n                                    <CircularGaugeComponent load={this.load.bind(this)} style={{ height: \"250px\" }} ref={gauge => this.sampleGauge3 = gauge} loaded={this.onChartLoad.bind(this)} id='sample3-container'>\r\n                                        <Inject services={[Annotations]} />\r\n                                        <AxesDirective>\r\n                                            <AxisDirective startAngle={230} endAngle={130} minimum={0} maximum={100}\r\n                                                lineStyle={{\r\n                                                    width: 0\r\n                                                }}\r\n                                                majorTicks={{\r\n                                                    width: 0\r\n                                                }}\r\n                                                minorTicks={{\r\n                                                    width: 0\r\n                                                }} labelStyle={{\r\n                                                    font: { size: '0' }\r\n                                                }}>\r\n                                                <AnnotationsDirective>\r\n                                                    <AnnotationDirective\r\n                                                        content='<div id=\"templateWrap\"><img class=\"imageStyle\" src=\"http://ej2.syncfusion.com/react/demos/src/circular-gauge/images/negative.png\" /><div class=\"fontDes\">${pointers[0].value}%</div></div></div>'\r\n                                                        angle={180} zIndex='1'\r\n                                                        radius='30%' />\r\n                                                    <AnnotationDirective\r\n                                                        content='<div class=\"fontDes1\">UK</div>'\r\n                                                        angle={180} zIndex='1'\r\n                                                        radius='65%' />\r\n                                                </AnnotationsDirective>\r\n                                                <RangesDirective>\r\n                                                    <RangeDirective start={0} end={50} startWidth={15} endWidth={15} color='#EC121C' />\r\n                                                    <RangeDirective start={50} end={100} startWidth={15} endWidth={15} color='#45EA0C' />\r\n                                                </RangesDirective>\r\n                                                <PointersDirective>\r\n                                                    <PointerDirective value={25} radius='60%'\r\n                                                        animation={{ enable: false }}\r\n                                                        color='#777777' pointerWidth={5}\r\n                                                        cap={{\r\n                                                            radius: 6,\r\n                                                            border: { width: 0 },\r\n                                                            color: '#777777'\r\n                                                        }}\r\n                                                        needleTail={{\r\n                                                            length: '25%',\r\n                                                            color: '#777777'\r\n                                                        }}>\r\n                                                    </PointerDirective>\r\n                                                </PointersDirective>\r\n                                            </AxisDirective>\r\n                                        </AxesDirective>\r\n                                    </CircularGaugeComponent>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"row\">\r\n                                <GridComponent dataBound={this.onGridLoad.bind(this)} ref={grid => this.grid1 = grid} dataSource={this.orderData.slice(0, 30)}>\r\n                                    <ColumnsDirective>\r\n                                        <ColumnDirective field='Country' headerText='Country' width='80'></ColumnDirective>\r\n                                        <ColumnDirective field='Sales' headerText='Sales $' width='80'></ColumnDirective>\r\n                                        <ColumnDirective field='Target' headerText='Target $' width='80' />\r\n                                        <ColumnDirective field='vsTarget' headerText='vs Target' width='80' />\r\n                                    </ColumnsDirective>\r\n                                </GridComponent>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\nReactDOM.render(<SampleData />, document.getElementById('sample'));","app/sample-base.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { enableRipple } from '@syncfusion/ej2-base';\r\n\r\nenableRipple((window as any).ripple);\r\nexport class SampleBase<P, S> extends React.PureComponent<RouteComponentProps<any> & P, S>{\r\n    public rendereComplete(): void {\r\n        /**custom render complete function */\r\n    }\r\n    componentDidMount(): void {\r\n        setTimeout(() => {\r\n            this.rendereComplete();\r\n        }\r\n        );\r\n    }\r\n}"}