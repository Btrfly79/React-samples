{"index.css":".e-rte-custom-tbar-section #special_char,\r\n.e-rte-custom-tbar-section .char_block {\r\n    display: inline-block;\r\n}\r\n\r\n    #custom_tbar,\r\n    #custom_tbar div{\r\n        cursor: pointer;\r\n    }\r\n\r\n    #rteSpecial_char {\r\n        padding: 15px 0 15px 0;\r\n    }\r\n\r\n    .material .e-rte-custom-tbar-section .char_block.e-active {\r\n        outline: 1px solid #e3165b;\r\n        border-color: #e3165b;\r\n    }\r\n\r\n    .fabric .e-rte-custom-tbar-section .char_block.e-active {\r\n        outline: 1px solid #0078d6;\r\n        border-color: #0078d6;\r\n    }\r\n\r\n    .bootstrap .e-rte-custom-tbar-section .char_block.e-active {\r\n        outline: 1px solid #317ab9;\r\n        border-color: #317ab9;\r\n    }\r\n\r\n    .highcontrast .e-rte-custom-tbar-section .char_block.e-active {\r\n        outline: 1px solid #ffd939;\r\n        border-color: #ffd939;\r\n    }\r\n\r\n    .fabric.e-bigger .e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-btn .e-tbar-btn-text,\r\n    .highcontrast.e-bigger .e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-btn .e-tbar-btn-text {\r\n        padding-right: 10px;\r\n    }\r\n\r\n    .bootstrap.e-bigger .e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-btn .e-tbar-btn-text,\r\n    .bootstrap .e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-btn .e-tbar-btn-text {\r\n        padding-right: 6px;\r\n    }\r\n\r\n    .fabric .e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-btn .e-tbar-btn-text,\r\n    .highcontrast .e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-btn .e-tbar-btn-text {\r\n        padding-right: 8px;\r\n    }\r\n\r\n    .e-rte-custom-tbar-section .char_block {\r\n        width: 30px;\r\n        height: 30px;\r\n        line-height: 30px;\r\n        margin: 0 5px 5px 0;\r\n        text-align: center;\r\n        vertical-align: middle;\r\n        border: 1px solid #DDDDDD;\r\n        font-size: 20px;\r\n        cursor: pointer;\r\n        user-select: none;\r\n    }\r\n\r\n    #rteSection {\r\n        height: 500px;\r\n    }\r\n\r\n    #rteCustomTool .e-richtexteditor .e-rte-content .e-content {\r\n        float: left;\r\n        width: 100%;\r\n    }\r\n\r\n    #rteCustomTool {\r\n        overflow: hidden;\r\n    }\r\n\r\n    #rteCustomTool .content-wrapper {\r\n        width: auto;\r\n        margin: 0;\r\n    }\r\n\r\n    #custom_tbar div{\r\n        font-size: 16px;\r\n    }\r\n\r\n    .e-bigger #custom_tbar div{\r\n        font-size: 18px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 480px) {\r\n        .fabric.e-bigger #customTbarDlg {\r\n            min-width: 281px;\r\n        }\r\n\r\n        .fabric #customTbarDlg {\r\n            min-width: 241px;\r\n        }\r\n\r\n        .bootstrap.e-bigger #customTbarDlg,\r\n        .bootstrap #customTbarDlg {\r\n            min-width: 223px;\r\n        }\r\n\r\n        .highcontrast.e-bigger #customTbarDlg {\r\n            min-width: 283px;\r\n        }\r\n        .highcontrast #customTbarDlg {\r\n            min-width: 243px;\r\n        }\r\n        .material #customTbarDlg {\r\n            min-width: 224px;\r\n        }\r\n        .material.e-bigger #customTbarDlg {\r\n            min-width: 236px;\r\n        }\r\n    }","systemjs.config.js":"System.config({\r\n    transpiler: \"ts\",\r\n    typescriptOptions: {\r\n            target: \"es5\",\r\n            module: \"commonjs\",\r\n            moduleResolution: \"node\",\r\n            emitDecoratorMetadata: true,\r\n            experimentalDecorators: true,\r\n            \"jsx\": \"react\"\r\n    },\r\n     meta: {\r\n      'typescript': {\r\n        \"exports\": \"ts\"\r\n      },\r\n      '*.json': { loader: 'plugin-json' }\r\n    },\r\n    paths: {\r\n        \"syncfusion:\": \"http://cdn.syncfusion.com/ej2/\"},\r\n    map: {\r\n        app: 'app',\r\n        ts: \"https://unpkg.com/plugin-typescript@4.0.10/lib/plugin.js\",\r\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\r\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\r\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\r\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-splitbuttons\": \"syncfusion:ej2-splitbuttons/dist/ej2-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-maps\": \"syncfusion:ej2-maps/dist/ej2-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-treemap\": \"syncfusion:ej2-treemap/dist/ej2-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\r\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-schedule\": \"syncfusion:ej2-schedule/dist/ej2-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\r\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\r\n        \"@syncfusion/ej2-documenteditor\": \"syncfusion:ej2-documenteditor/dist/ej2-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-notifications\": \"syncfusion:ej2-notifications/dist/ej2-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-richtexteditor\": \"syncfusion:ej2-richtexteditor/dist/ej2-richtexteditor.umd.min.js\",\r\n\t\t\"@syncfusion/ej2-svg-base\": \"syncfusion:ej2-svg-base/dist/ej2-svg-base.umd.min.js\",\r\n        \"@syncfusion/ej2-pivotview\": \"syncfusion:ej2-pivotview/dist/ej2-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-heatmap\": \"syncfusion:ej2-heatmap/dist/ej2-heatmap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-base\": \"syncfusion:ej2-react-base/dist/ej2-react-base.umd.min.js\",\r\n        \"@syncfusion/ej2-react-buttons\": \"syncfusion:ej2-react-buttons/dist/ej2-react-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-splitbuttons\": \"syncfusion:ej2-react-splitbuttons/dist/ej2-react-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-charts\": \"syncfusion:ej2-react-charts/dist/ej2-react-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-react-maps\": \"syncfusion:ej2-react-maps/dist/ej2-react-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-react-treemap\": \"syncfusion:ej2-react-treemap/dist/ej2-react-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-circulargauge\": \"syncfusion:ej2-react-circulargauge/dist/ej2-react-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lineargauge\": \"syncfusion:ej2-react-lineargauge/dist/ej2-react-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-calendars\": \"syncfusion:ej2-react-calendars/dist/ej2-react-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-react-dropdowns\": \"syncfusion:ej2-react-dropdowns/dist/ej2-react-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-react-grids\": \"syncfusion:ej2-react-grids/dist/ej2-react-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-react-inputs\": \"syncfusion:ej2-react-inputs/dist/ej2-react-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lists\": \"syncfusion:ej2-react-lists/dist/ej2-react-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-react-navigations\": \"syncfusion:ej2-react-navigations/dist/ej2-react-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-react-popups\": \"syncfusion:ej2-react-popups/dist/ej2-react-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-react-schedule\": \"syncfusion:ej2-react-schedule/dist/ej2-react-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-react-documenteditor\": \"syncfusion:ej2-react-documenteditor/dist/ej2-react-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-notifications\": \"syncfusion:ej2-react-notifications/dist/ej2-react-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-react-richtexteditor\": \"syncfusion:ej2-react-richtexteditor/dist/ej2-react-richtexteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-pivotview\": \"syncfusion:ej2-react-pivotview/dist/ej2-react-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-react-heatmap\": \"syncfusion:ej2-react-heatmap/dist/ej2-react-heatmap.umd.min.js\",\r\n        \"react-dom\":\"https://unpkg.com/react-dom@15.5.4/dist/react-dom.min.js\",\r\n        \"react\":\"https://unpkg.com/react@15.5.4/dist/react.min.js\",\r\n    },\r\n    packages: {\r\n        'app': { main: 'index', defaultExtension: 'tsx' },\r\n    }\r\n});\r\n\r\nSystem.import('app');","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Rich-text-editor · CustomTool · Essential JS 2 for React · Syncfusion</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <!-- {{:meta}} -->\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <script type=\"text/javascript\">\r\n        var themeName = location.hash || 'material';\r\n        themeName = themeName.replace('#','');\r\n        window.ripple = (themeName === \"material\")\r\n        document.write('<link href=\"http://cdn.syncfusion.com/ej2/' + themeName + '.css\" rel=\"stylesheet\">');\r\n    </script>\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\r\n    <script src=\"systemjs.config.js\"></script>\r\n    <link href=\"index.css\" rel=\"stylesheet\" />\r\n     <style>\r\n        #loader {\r\n            color: #008cff;\r\n            height: 40px;\r\n            left: 45%;\r\n            position: absolute;\r\n            top: 45%;\r\n            width: 30%;\r\n        }\r\n        body {\r\n            touch-action:none;\r\n        }\r\n        .body {\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n        }\r\n\r\n        .e-view {\r\n            bottom: 0;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n        }\r\n\r\n        .sb-left {\r\n            float: left;\r\n        }\r\n\r\n        .sb-right {\r\n            float: right;\r\n        }\r\n\r\n        .sb-block {\r\n            display: block;\r\n        }\r\n\r\n        .sb-table {\r\n            display: table;\r\n        }\r\n\r\n        .sb-table-cell {\r\n            display: table-cell;\r\n            vertical-align: middle;\r\n        }\r\n\r\n        /*sample header*/\r\n\r\n\r\n        .sb-header {\r\n            height: 48px;\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.12);\r\n            z-index: 1001;\r\n            opacity: 100;\r\n        }\r\n\r\n\r\n        .sb-header-left, .sb-header-right {\r\n            height: 100%;\r\n        }\r\n\r\n        #sb-header-text {\r\n            padding-left: 22px;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        .header-logo {\r\n            float: left;\r\n            padding-left: 8px;\r\n            padding-right: 22px;\r\n        }\r\n\r\n        .footer-logo {\r\n            background: url(https://ej2.syncfusion.com/home/images/footer-logo.svg) no-repeat right;\r\n            height: 40px;\r\n            width: 140px;\r\n        }\r\n\r\n        .sb-header-splitter {\r\n            float: left;\r\n            border-left: 1px solid rgb(196, 196, 196);\r\n            height: 32px;\r\n            margin-top: 8px;\r\n            padding-left: 22 px;\r\n        }\r\n\r\n        .sb-header-settings {\r\n            display: none;\r\n        }\r\n\r\n        .product-style a{\r\n        padding-right: 15px;\r\n        font-family:Roboto;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        color: #363636;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        }\r\n        .product-style a:hover {\r\n            color:#3C78EF;\r\n        }\r\n\r\n        .sb-download-btn a {\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-download-text {\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-wrapper {\r\n            padding-right: 27px;\r\n        }\r\n\r\n        .sb-download-btn:hover .sb-download-btn:focus .sb-download-btn.active {\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\";\r\n            font-weight: bold;\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-btn:hover {\r\n            background: #006CE6;\r\n        }\r\n\r\n        .sb-download-btn:focus {\r\n            background: #0051CB;\r\n        }\r\n\r\n        .sb-download-btn.active {\r\n            background: #0036B1;\r\n        }\r\n\r\n        .sb-download-btn {\r\n            background-color: #3C78EF;\r\n            opacity: 100;\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n            font-weight: 500;\r\n            line-height: 18px;\r\n            height: 32px;\r\n            border-color: transparent;\r\n        }\r\n\r\n        .sb-bread-crumb {\r\n            padding-left: 20px;\r\n            padding-top: 24px;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        .category-allcontrols a, .category-text a, .crumb-sample {\r\n            display: table;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #3C78EF;\r\n            text-align: left;\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-bread-crumb .sb-bread-crumb-text>div {\r\n            font-size: 15px;\r\n            font-weight: 500;\r\n            padding-right: 8px;\r\n            cursor: default;\r\n            display: table-cell;\r\n        }\r\n\r\n        .sb-bread-crumb-text>div.seperator {\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            vertical-align: bottom;\r\n        } \r\n\r\n        .content {\r\n        overflow: auto;\r\n        height: calc(100% - 50px);\r\n        top: 50px;\r\n        }\r\n\r\n\r\n        .sample-content {\r\n            top: 48px;\r\n            background: #FFFFFF;\r\n        }\r\n\r\n        .div {\r\n        display: block;\r\n        }\r\n\r\n        .control-section {\r\n            padding-left: 4px;\r\n        }\r\n\r\n        .crumb-sample {\r\n            color: #000000;\r\n            line-height: 18px;\r\n        }\r\n\r\n        #description {\r\n            padding-bottom: 16px;\r\n            padding-left: 20px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n            padding-top: 14px;\r\n        }\r\n\r\n        #action-description {\r\n            padding-left: 20px;\r\n            padding-bottom: 15px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        #description-section {\r\n            padding-left: 20px;\r\n            padding-top: 30px;\r\n            opacity: 0.87;\r\n            font-family:Roboto;\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n\r\n\r\n    </style>\r\n</head>\r\n\r\n<body class='e-view ej2-new' aria-busy=\"true\">\r\n        <div class=\"sample-browser\">\r\n            <div id='sample-header' class=\"sb-header\" role=\"banner\">\r\n                <div class='sb-header-left sb-left sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"header-logo\">\r\n                            <a href=\"https://ej2.syncfusion.com/home/react.html\" target=\"\" rel=\"noopener noreferrer\">\r\n                                <div class=\"footer-logo\"> </div>\r\n                            </a>\r\n                        </div>\r\n    \r\n                    </div>\r\n                    <div class=\"sb-header-splitter sb-download-splitter\"></div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div id='sb-header-text' class='e-sb-header-text'>\r\n    \r\n                            <span class='sb-header-text-left'>Essential JS 2 for React</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class='sb-header-right sb-right sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class='product-style'>\r\n                            <div><a href=\"https://www.syncfusion.com/products/react/rich-text-editor\">PRODUCT DETAILS</a></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"sb-header-item sb-table-cell sb-download-wrapper\">\r\n                            <a href=\"https://www.syncfusion.com/downloads/essential-js2\" target=\"_blank\">\r\n                                <button id=\"download-now\" class=\"sb-download-btn\">\r\n                                    <span class=\"sb-download-text\">DOWNLOAD</span>\r\n                                </button>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n            <div class ='content e-view'>\r\n            <div class='sample-content'>\r\n                <div id=\"sample-bread-crumb\" class=\"sb-bread-crumb\">\r\n                    <div class=\"sb-bread-crumb-text\">\r\n                        <div class=\"category-allcontrols\"><a href=\"https://ej2.syncfusion.com/react/demos\"><span>All Controls</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"category-text bread-ctext\"><a href=\"https://ej2.syncfusion.com/react/demos/#/material/rich-text-editor/default.html\"><span>Rich-text-editor</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"crumb-sample\">CustomTool</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"control-content\">\r\n                <div id=\"action-description\">\r\n                        <p>\r\n                            \n          <p>This sample shows how to add your own commands to toolbar of the rich text editor. \n            The <code>&#x201C;&#x3A9;&#x201D; </code>  command is added to insert special characters in the editor. \n            Click the &#x201C;&#x3A9;&#x201D; command to show the special characters list, and then choose the character to be inserted in the editor.\n          </p>\n        \r\n                        </p>\r\n                    </div>\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"control-section\">\r\n                            <div id='sample'>\r\n                                <div id='loader'>Loading....</div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    </div>\r\n                    <div id=\"description-section\">Description</div>    \r\n                    <div id=\"description\">\r\n                        <p>\r\n                           \n          <p>The rich text editor allows you to configure your own commands to its toolbar using <code>toolbarSettings</code> property. \n            The command can be plain text, icon, or HTML template. \n            You can also define the order and group where the command should be included. \n            Bind the action to the command by getting its instance. </p>\n          <p><b>Injecting Module</b></p>\n          <p>RichTextEditor component features are segregated into individual feature-wise modules. To use richtexteditor feature, we need to inject <code>Toolbar, Link, Image, HtmlEditor, QuickToolbar</code> modules into the services.</p>\n        \r\n                         </p>     \r\n                    </div>    \r\n                </div>             \r\n            </div>\r\n                \r\n            </div>\r\n        </div>\r\n          \r\n</body>\r\n</html>\r\n","app/index.tsx":"/**\r\n * RichTextEditor custom toolbar sample\r\n */\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { RichTextEditorComponent, HtmlEditor, Inject, Toolbar, NodeSelection, Image, Link, IToolbarItems, QuickToolbar } from '@syncfusion/ej2-react-richtexteditor';\r\nimport { SampleBase } from './sample-base';\r\nimport { DialogComponent } from '@syncfusion/ej2-react-popups';\r\n\r\nexport class CustomTool extends SampleBase<{}, {}> {\r\n\r\n  private rteObj: RichTextEditorComponent;\r\n  // set the value to RichTextEditor\r\n  private template: string = `<div style=\"display:block;\"><p style=\"margin-right:10px\">The custom command \"insert special character\" is configured as the last item of the toolbar. Click on the command and choose the special character you want to include from the popup.</p></div>`;\r\n\r\n  public selection: NodeSelection = new NodeSelection();\r\n  public ranges: Range;\r\n  public dialogObj: DialogComponent;\r\n  // RichTextEditor items list\r\n  private items: (string | IToolbarItems)[] = ['Bold', 'Italic', 'Underline', '|', 'Formats', 'Alignments', 'OrderedList',\r\n  'UnorderedList', '|', 'CreateLink', 'Image', '|', 'SourceCode',\r\n  {\r\n      tooltipText: 'Insert Symbol',\r\n      template: '<button class=\"e-tbar-btn e-btn\" tabindex=\"-1\" id=\"custom_tbar\"  style=\"width:100%\"><div class=\"e-tbar-btn-text\" style=\"font-weight: 500;\"> &#937;</div></button>'\r\n  }, '|', 'Undo', 'Redo'\r\n  ];\r\n\r\n  //RichTextEditor ToolbarSettings\r\n  private toolbarSettings: object = {\r\n    items: this.items\r\n  };\r\n\r\n  public dlgButtons: any = [{ buttonModel: { content: \"Insert\", isPrimary: true }, click: this.onInsert.bind(this) },\r\n  { buttonModel: { content: 'Cancel' }, click: this.onCancel }];\r\n  public header: string = 'Special Characters';\r\n  public target: Element = document.getElementById('rteSection');\r\n  public height: any = 'auto';\r\n\r\n\r\n  public onCreate(): void {\r\n    let customBtn: HTMLElement = document.getElementById('custom_tbar') as HTMLElement;\r\n    customBtn.onclick = (e: Event) => {\r\n        this.ranges = this.selection.getRange(document);\r\n        this.dialogObj.width = (this.rteObj as any).element.offsetWidth * 0.5;\r\n        this.dialogObj.content = document.getElementById('rteSpecial_char');\r\n        this.dialogObj.dataBind();\r\n        this.dialogObj.show();\r\n    };\r\n  }\r\n\r\n\r\n  public dialogCreate(): void {\r\n    let dialogCtn: HTMLElement = document.getElementById('rteSpecial_char');\r\n    dialogCtn.onclick = (e: Event) => {\r\n        let target: HTMLElement = e.target as HTMLElement;\r\n        let activeEle: Element = this.dialogObj.element.querySelector('.char_block.e-active');\r\n        if (target.classList.contains('char_block')) {\r\n            target.classList.add('e-active');\r\n            if (activeEle) {\r\n                activeEle.classList.remove('e-active');\r\n            }\r\n        }\r\n    };\r\n}\r\npublic onInsert(): void {\r\n    let activeEle: Element = this.dialogObj.element.querySelector('.char_block.e-active');\r\n    if (activeEle) {\r\n        this.ranges.insertNode(document.createTextNode(activeEle.textContent));\r\n    }\r\n    this.dialogOverlay();\r\n}\r\n\r\npublic dialogOverlay(): void {\r\n    let activeEle: Element = this.dialogObj.element.querySelector('.char_block.e-active');\r\n    if (activeEle) {\r\n        activeEle.classList.remove('e-active');\r\n    }\r\n    this.dialogObj.hide();\r\n}\r\n\r\npublic onCancel(e: any): void {\r\n  let activeEle: Element = (this as any).element.querySelector('.char_block.e-active');\r\n  if (activeEle) {\r\n      activeEle.classList.remove('e-active');\r\n  }\r\n  (this as any).hide();\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className='control-pane'>\r\n          <div className='control-section e-rte-custom-tbar-section' id=\"rteCustomTool\">\r\n            <div className='rte-control-section' id='rteSection'>\r\n            <RichTextEditorComponent id=\"defaultRTE\" ref={(scope) => { this.rteObj = scope }}\r\n            valueTemplate={this.template} toolbarSettings={this.toolbarSettings} created={this.onCreate.bind(this)}>\r\n              <Inject services={[HtmlEditor, Toolbar, Link, Image, QuickToolbar]} />\r\n            </RichTextEditorComponent>\r\n            <DialogComponent id='customTbarDlg' ref={(scope) => { this.dialogObj = scope }}  \r\n            buttons={this.dlgButtons} overlayClick={this.dialogOverlay.bind(this)} header={this.header} visible={false}\r\n                showCloseIcon={false} target={'#rteSection'} height={this.height} created={this.dialogCreate.bind(this)} isModal={true}>\r\n            </DialogComponent>\r\n            <div id=\"customTbarDialog\" style={{display: 'none'}}>\r\n                <div id=\"rteSpecial_char\">\r\n                    <div className=\"char_block\" title=\"&#94;\">&#94;</div>\r\n                    <div className=\"char_block\" title=\"&#95;\">&#95;</div>\r\n                    <div className=\"char_block\" title=\"&#96;\">&#96;</div>\r\n                    <div className=\"char_block\" title=\"&#123;\">&#123;</div>\r\n                    <div className=\"char_block\" title=\"&#124;\">&#124;</div>\r\n                    <div className=\"char_block\" title=\"&#125;\">&#125;</div>\r\n                    <div className=\"char_block\" title=\"&#126;\">&#126;</div>\r\n                    <div className=\"char_block\" title=\"&#160;\">&#160;</div>\r\n                    <div className=\"char_block\" title=\"&#161;\">&#161;</div>\r\n                    <div className=\"char_block\" title=\"&#162;\">&#162;</div>\r\n                    <div className=\"char_block\" title=\"&#163;\">&#163;</div>\r\n                    <div className=\"char_block\" title=\"&#164;\">&#164;</div>\r\n                    <div className=\"char_block\" title=\"&#165;\">&#165;</div>\r\n                    <div className=\"char_block\" title=\"&#x20B9;\">&#x20B9;</div>\r\n                    <div className=\"char_block\" title=\"&#166;\">&#166;</div>\r\n                    <div className=\"char_block\" title=\"&#167;\">&#167;</div>\r\n                    <div className=\"char_block\" title=\"&#168;\">&#168;</div>\r\n                    <div className=\"char_block\" title=\"&#169;\">&#169;</div>\r\n                    <div className=\"char_block\" title=\"&#170;\">&#170;</div>\r\n                    <div className=\"char_block\" title=\"&#171;\">&#171;</div>\r\n                    <div className=\"char_block\" title=\"&#172;\">&#172;</div>\r\n                    <div className=\"char_block\" title=\"&#173;\">&#173;</div>\r\n                    <div className=\"char_block\" title=\"&#174;\">&#174;</div>\r\n                    <div className=\"char_block\" title=\"&#175;\">&#175;</div>\r\n                    <div className=\"char_block\" title=\"&#176;\">&#176;</div>\r\n                    <div className=\"char_block\" title=\"&#177;\">&#177;</div>\r\n                    <div className=\"char_block\" title=\"&#178;\">&#178;</div>\r\n                    <div className=\"char_block\" title=\"&#179;\">&#179;</div>\r\n                    <div className=\"char_block\" title=\"&#180;\">&#180;</div>\r\n                    <div className=\"char_block\" title=\"&#181;\">&#181;</div>\r\n                    <div className=\"char_block\" title=\"&#182;\">&#182;</div>\r\n                    <div className=\"char_block\" title=\"&#183;\">&#183;</div>\r\n                    <div className=\"char_block\" title=\"&#184;\">&#184;</div>\r\n                    <div className=\"char_block\" title=\"&#185;\">&#185;</div>\r\n                    <div className=\"char_block\" title=\"&#186;\">&#186;</div>\r\n                    <div className=\"char_block\" title=\"&#187;\">&#187;</div>\r\n                    <div className=\"char_block\" title=\"&#188;\">&#188;</div>\r\n                    <div className=\"char_block\" title=\"&#189;\">&#189;</div>\r\n                    <div className=\"char_block\" title=\"&#190;\">&#190;</div>\r\n                    <div className=\"char_block\" title=\"&#191;\">&#191;</div>\r\n                    <div className=\"char_block\" title=\"&#192;\">&#192;</div>\r\n                    <div className=\"char_block\" title=\"&#193;\">&#193;</div>\r\n                    <div className=\"char_block\" title=\"&#194;\">&#194;</div>\r\n                    <div className=\"char_block\" title=\"&#195;\">&#195;</div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\nReactDOM.render(<CustomTool />, document.getElementById('sample'));","app/sample-base.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { enableRipple } from '@syncfusion/ej2-base';\r\n\r\nenableRipple((window as any).ripple);\r\nexport class SampleBase<P, S> extends React.PureComponent<RouteComponentProps<any> & P, S>{\r\n    public rendereComplete(): void {\r\n        /**custom render complete function */\r\n    }\r\n    componentDidMount(): void {\r\n        setTimeout(() => {\r\n            this.rendereComplete();\r\n        }\r\n        );\r\n    }\r\n}"}