{"index.css":"\r\n#rteUseCase .control-wrapper .tagSection {\r\n    float: left;\r\n}\r\n\r\n#rteUseCase .control-wrapper .likeAnswer span.e-icon {\r\n    float: left;\r\n}\r\n\r\n#rteUseCase .control-wrapper img.e-icon {\r\n    width: 13px;\r\n    height: 25px;\r\n}\r\n\r\n#rteUseCase .control-wrapper span.questionSide {\r\n    margin-left: 24px;\r\n    float: left;\r\n}\r\n\r\n#rteUseCase .control-wrapper .e-dislike {\r\n    margin-left: 16px;\r\n    float: left;\r\n}\r\n\r\n#rteUseCase .control-wrapper .questionHeader {\r\n    margin-top: 12px;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .header {\r\n    font-size: 16px;\r\n    font-family: roboto-Semibold, SegoeUI-Semibold;\r\n    color: #000000;\r\n    font-weight: bold;\r\n    clear: both;\r\n}\r\n\r\n@media (max-width: 550px) {\r\n    #rteUseCase .control-wrapper .forum {\r\n        padding: 20px 20px 60px 20px;\r\n    }\r\n}\r\n\r\n@media (min-width: 550px) {\r\n    #rteUseCase .control-wrapper .forum {\r\n        margin: 0 auto;\r\n        width: 80%;\r\n        border: 1px solid #d8d8c0;\r\n        padding: 10px 90px 60px 90px;\r\n        box-shadow: 2px 2px 2px 2px #f5f5ef;\r\n    }\r\n}\r\n\r\n#rteUseCase .control-wrapper .e-like span {\r\n    font-family: Helvetica, Times New Roman;\r\n    color: #E3175A;\r\n    font-size: 12px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .e-dislike span {\r\n    font-family: Helvetica, Times New Roman;\r\n    color: #717171;\r\n    font-size: 12px;\r\n\r\n}\r\n\r\n#rteUseCase .control-wrapper .detailsQuestion {\r\n    font-size: 12px;\r\n    font-family: roboto, SegoeUI;\r\n    color: #575757;\r\n    margin-top: 8px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .explain {\r\n    margin-top: 16px;\r\n    font-size: 13px;\r\n    font-family: roboto, SegoeUI;\r\n    color: #000000;\r\n}\r\n\r\n#rteUseCase .control-wrapper .separator {\r\n    margin-top: 5px;\r\n    border-bottom: 1px solid #DADADA;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .tags td:first-child div {\r\n    margin-left: 0px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .tag {\r\n    color: #000000;\r\n    padding: 3px 14px;\r\n    background-color: #DDDDDD;\r\n    font-size: 13px;\r\n    margin-left: 8px;\r\n    border-radius: 6px;\r\n    float: left;\r\n    text-transform: lowercase;\r\n    font-family: roboto, SegoeUI;\r\n}\r\n\r\n#rteUseCase .control-wrapper .answerCount {\r\n    color: #575757;\r\n    margin-top: 24px;\r\n    margin-bottom: 24px;\r\n    font-family: roboto-Semibold, SegoeUI-Semibold;\r\n    width: 63px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .likeAnswer {\r\n    margin-top: 13px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .tags {\r\n    margin-top: 10px;\r\n    margin-bottom: 24px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .questionar {\r\n    width: 32px;\r\n    background: url(./src/rich-text-editor/images/emp1.png);\r\n    height: 32px;\r\n    float: left;\r\n    -ms-flex-line-pack: center;\r\n    align-content: center;\r\n    -ms-flex-align: center;\r\n    align-items: center;\r\n    background-color: #bcbcbc;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    border-radius: 50%;\r\n    color: #fff;\r\n    margin-top: 2px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .raiser {\r\n    height: 34px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .Questionarname {\r\n    margin-top: 13px;\r\n    float: left;\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .your-answer {\r\n    color: #3b3b3b;\r\n    font-weight: 300;\r\n}\r\n\r\n#rteUseCase .control-wrapper .rating {\r\n    padding-left: 10px;\r\n    margin-top: -95px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .logos {\r\n    background: url(./src/rich-text-editor/images/emp2.png);\r\n    height: 32px;\r\n    -ms-flex-line-pack: center;\r\n    align-content: center;\r\n    -ms-flex-align: center;\r\n    align-items: center;\r\n    background-color: #bcbcbc;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    border-radius: 50%;\r\n    color: #fff;\r\n    width: 32px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .logo {\r\n    background: url(./src/rich-text-editor/images/author.png) no-repeat scroll 0 0 transparent;\r\n    height: 32px;\r\n    width: 32px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .emp1 {\r\n    background: url(./src/rich-text-editor/images/1.png) no-repeat scroll 0 0 transparent;\r\n    height: 32px;\r\n    width: 32px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .emp2 {\r\n    background: url(./src/rich-text-editor/images/2.png) no-repeat scroll 0 0 transparent;\r\n    height: 32px;\r\n    width: 32px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .emp3 {\r\n    background: url(./src/rich-text-editor/images/3.png) no-repeat scroll 0 0 transparent;\r\n    height: 32px;\r\n    width: 32px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .author {\r\n    margin-bottom: 5px;\r\n    height: 50px;\r\n    margin-top: 5px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .name {\r\n    margin: 5px;\r\n    float: left;\r\n    color: blue;\r\n}\r\n\r\n#rteUseCase .control-wrapper .posting {\r\n    clear: both;\r\n    color: #000;\r\n    line-height: 24px;\r\n    margin-top: 12px;\r\n    font-family: roboto, SegoeUI;\r\n    font-size: 13px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .authorname {\r\n    font-family: SegoeUI-Semibold;\r\n    color: #000000;\r\n    font-size: 13px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .detailsAnswer {\r\n    color: #575757;\r\n    font-size: 12px;\r\n    font-family: roboto, SegoeUI;\r\n    margin-top: 7px;\r\n}\r\n\r\n#rteUseCase .control-wrapper #buttonSection {\r\n    float: right;\r\n    margin-top: 11px;\r\n\r\n}\r\n\r\n#rteUseCase .control-wrapper #buttonSection button {\r\n    margin-right: 11px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .authorname,\r\n#rteUseCase .control-wrapper .detailsAnswer {\r\n    margin-left: 11px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .answerCount {\r\n    color: #76766f;\r\n    margin-top: 20px;\r\n    margin-bottom: 12px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .questDesc {\r\n    min-height: 120px;\r\n    width: 100%;\r\n}\r\n\r\n#rteUseCase .control-wrapper .answerHeader {\r\n    border-bottom: 1px solid #ced1d1;\r\n    margin-bottom: 20px;\r\n    margin-top: -40px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .answer {\r\n    margin-top: 15px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .editorholder h4 {\r\n    padding: 15px 0;\r\n}\r\n\r\n#rteUseCase .control-wrapper #createpostholder {\r\n    margin-top: 25px;\r\n}\r\n\r\n#rteUseCase .e-richtexteditor .e-rte-content .e-content {\r\n    float: left;\r\n    width: 100%;\r\n}\r\n\r\n#rteUseCase {\r\n    overflow: hidden;\r\n}\r\n\r\n#rteUseCase .content-wrapper {\r\n    width: auto;\r\n    margin: 0;\r\n}","systemjs.config.js":"System.config({\r\n    transpiler: \"ts\",\r\n    typescriptOptions: {\r\n            target: \"es5\",\r\n            module: \"commonjs\",\r\n            moduleResolution: \"node\",\r\n            emitDecoratorMetadata: true,\r\n            experimentalDecorators: true,\r\n            \"jsx\": \"react\"\r\n    },\r\n     meta: {\r\n      'typescript': {\r\n        \"exports\": \"ts\"\r\n      },\r\n      '*.json': { loader: 'plugin-json' }\r\n    },\r\n    paths: {\r\n        \"syncfusion:\": \"http://cdn.syncfusion.com/ej2/\"},\r\n    map: {\r\n        app: 'app',\r\n        ts: \"https://unpkg.com/plugin-typescript@4.0.10/lib/plugin.js\",\r\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\r\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\r\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\r\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-splitbuttons\": \"syncfusion:ej2-splitbuttons/dist/ej2-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-maps\": \"syncfusion:ej2-maps/dist/ej2-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-treemap\": \"syncfusion:ej2-treemap/dist/ej2-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\r\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-schedule\": \"syncfusion:ej2-schedule/dist/ej2-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\r\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\r\n        \"@syncfusion/ej2-documenteditor\": \"syncfusion:ej2-documenteditor/dist/ej2-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-notifications\": \"syncfusion:ej2-notifications/dist/ej2-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-richtexteditor\": \"syncfusion:ej2-richtexteditor/dist/ej2-richtexteditor.umd.min.js\",\r\n\t\t\"@syncfusion/ej2-svg-base\": \"syncfusion:ej2-svg-base/dist/ej2-svg-base.umd.min.js\",\r\n        \"@syncfusion/ej2-pivotview\": \"syncfusion:ej2-pivotview/dist/ej2-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-heatmap\": \"syncfusion:ej2-heatmap/dist/ej2-heatmap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-base\": \"syncfusion:ej2-react-base/dist/ej2-react-base.umd.min.js\",\r\n        \"@syncfusion/ej2-react-buttons\": \"syncfusion:ej2-react-buttons/dist/ej2-react-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-splitbuttons\": \"syncfusion:ej2-react-splitbuttons/dist/ej2-react-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-charts\": \"syncfusion:ej2-react-charts/dist/ej2-react-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-react-maps\": \"syncfusion:ej2-react-maps/dist/ej2-react-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-react-treemap\": \"syncfusion:ej2-react-treemap/dist/ej2-react-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-circulargauge\": \"syncfusion:ej2-react-circulargauge/dist/ej2-react-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lineargauge\": \"syncfusion:ej2-react-lineargauge/dist/ej2-react-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-calendars\": \"syncfusion:ej2-react-calendars/dist/ej2-react-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-react-dropdowns\": \"syncfusion:ej2-react-dropdowns/dist/ej2-react-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-react-grids\": \"syncfusion:ej2-react-grids/dist/ej2-react-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-react-inputs\": \"syncfusion:ej2-react-inputs/dist/ej2-react-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lists\": \"syncfusion:ej2-react-lists/dist/ej2-react-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-react-navigations\": \"syncfusion:ej2-react-navigations/dist/ej2-react-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-react-popups\": \"syncfusion:ej2-react-popups/dist/ej2-react-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-react-schedule\": \"syncfusion:ej2-react-schedule/dist/ej2-react-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-react-documenteditor\": \"syncfusion:ej2-react-documenteditor/dist/ej2-react-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-notifications\": \"syncfusion:ej2-react-notifications/dist/ej2-react-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-react-richtexteditor\": \"syncfusion:ej2-react-richtexteditor/dist/ej2-react-richtexteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-pivotview\": \"syncfusion:ej2-react-pivotview/dist/ej2-react-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-react-heatmap\": \"syncfusion:ej2-react-heatmap/dist/ej2-react-heatmap.umd.min.js\",\r\n        \"react-dom\":\"https://unpkg.com/react-dom@15.5.4/dist/react-dom.min.js\",\r\n        \"react\":\"https://unpkg.com/react@15.5.4/dist/react.min.js\",\r\n    },\r\n    packages: {\r\n        'app': { main: 'index', defaultExtension: 'tsx' },\r\n    }\r\n});\r\n\r\nSystem.import('app');","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Rich-text-editor · Forums · Essential JS 2 for React · Syncfusion</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <!-- {{:meta}} -->\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <script type=\"text/javascript\">\r\n        var themeName = location.hash || 'material';\r\n        themeName = themeName.replace('#','');\r\n        window.ripple = (themeName === \"material\")\r\n        document.write('<link href=\"http://cdn.syncfusion.com/ej2/' + themeName + '.css\" rel=\"stylesheet\">');\r\n    </script>\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\r\n    <script src=\"systemjs.config.js\"></script>\r\n    <link href=\"index.css\" rel=\"stylesheet\" />\r\n     <style>\r\n        #loader {\r\n            color: #008cff;\r\n            height: 40px;\r\n            left: 45%;\r\n            position: absolute;\r\n            top: 45%;\r\n            width: 30%;\r\n        }\r\n        body {\r\n            touch-action:none;\r\n        }\r\n        .body {\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n        }\r\n\r\n        .e-view {\r\n            bottom: 0;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n        }\r\n\r\n        .sb-left {\r\n            float: left;\r\n        }\r\n\r\n        .sb-right {\r\n            float: right;\r\n        }\r\n\r\n        .sb-block {\r\n            display: block;\r\n        }\r\n\r\n        .sb-table {\r\n            display: table;\r\n        }\r\n\r\n        .sb-table-cell {\r\n            display: table-cell;\r\n            vertical-align: middle;\r\n        }\r\n\r\n        /*sample header*/\r\n\r\n\r\n        .sb-header {\r\n            height: 48px;\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.12);\r\n            z-index: 1001;\r\n            opacity: 100;\r\n        }\r\n\r\n\r\n        .sb-header-left, .sb-header-right {\r\n            height: 100%;\r\n        }\r\n\r\n        #sb-header-text {\r\n            padding-left: 22px;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        .header-logo {\r\n            float: left;\r\n            padding-left: 8px;\r\n            padding-right: 22px;\r\n        }\r\n\r\n        .footer-logo {\r\n            background: url(https://ej2.syncfusion.com/home/images/footer-logo.svg) no-repeat right;\r\n            height: 40px;\r\n            width: 140px;\r\n        }\r\n\r\n        .sb-header-splitter {\r\n            float: left;\r\n            border-left: 1px solid rgb(196, 196, 196);\r\n            height: 32px;\r\n            margin-top: 8px;\r\n            padding-left: 22 px;\r\n        }\r\n\r\n        .sb-header-settings {\r\n            display: none;\r\n        }\r\n\r\n        .product-style a{\r\n        padding-right: 15px;\r\n        font-family:Roboto;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        color: #363636;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        }\r\n        .product-style a:hover {\r\n            color:#3C78EF;\r\n        }\r\n\r\n        .sb-download-btn a {\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-download-text {\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-wrapper {\r\n            padding-right: 27px;\r\n        }\r\n\r\n        .sb-download-btn:hover .sb-download-btn:focus .sb-download-btn.active {\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\";\r\n            font-weight: bold;\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-btn:hover {\r\n            background: #006CE6;\r\n        }\r\n\r\n        .sb-download-btn:focus {\r\n            background: #0051CB;\r\n        }\r\n\r\n        .sb-download-btn.active {\r\n            background: #0036B1;\r\n        }\r\n\r\n        .sb-download-btn {\r\n            background-color: #3C78EF;\r\n            opacity: 100;\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n            font-weight: 500;\r\n            line-height: 18px;\r\n            height: 32px;\r\n            border-color: transparent;\r\n        }\r\n\r\n        .sb-bread-crumb {\r\n            padding-left: 20px;\r\n            padding-top: 24px;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        .category-allcontrols a, .category-text a, .crumb-sample {\r\n            display: table;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #3C78EF;\r\n            text-align: left;\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-bread-crumb .sb-bread-crumb-text>div {\r\n            font-size: 15px;\r\n            font-weight: 500;\r\n            padding-right: 8px;\r\n            cursor: default;\r\n            display: table-cell;\r\n        }\r\n\r\n        .sb-bread-crumb-text>div.seperator {\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            vertical-align: bottom;\r\n        } \r\n\r\n        .content {\r\n        overflow: auto;\r\n        height: calc(100% - 50px);\r\n        top: 50px;\r\n        }\r\n\r\n\r\n        .sample-content {\r\n            top: 48px;\r\n            background: #FFFFFF;\r\n        }\r\n\r\n        .div {\r\n        display: block;\r\n        }\r\n\r\n        .control-section {\r\n            padding-left: 4px;\r\n        }\r\n\r\n        .crumb-sample {\r\n            color: #000000;\r\n            line-height: 18px;\r\n        }\r\n\r\n        #description {\r\n            padding-bottom: 16px;\r\n            padding-left: 20px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n            padding-top: 14px;\r\n        }\r\n\r\n        #action-description {\r\n            padding-left: 20px;\r\n            padding-bottom: 15px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        #description-section {\r\n            padding-left: 20px;\r\n            padding-top: 30px;\r\n            opacity: 0.87;\r\n            font-family:Roboto;\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n\r\n\r\n    </style>\r\n</head>\r\n\r\n<body class='e-view ej2-new' aria-busy=\"true\">\r\n        <div class=\"sample-browser\">\r\n            <div id='sample-header' class=\"sb-header\" role=\"banner\">\r\n                <div class='sb-header-left sb-left sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"header-logo\">\r\n                            <a href=\"https://ej2.syncfusion.com/home/react.html\" target=\"\" rel=\"noopener noreferrer\">\r\n                                <div class=\"footer-logo\"> </div>\r\n                            </a>\r\n                        </div>\r\n    \r\n                    </div>\r\n                    <div class=\"sb-header-splitter sb-download-splitter\"></div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div id='sb-header-text' class='e-sb-header-text'>\r\n    \r\n                            <span class='sb-header-text-left'>Essential JS 2 for React</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class='sb-header-right sb-right sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class='product-style'>\r\n                            <div><a href=\"https://www.syncfusion.com/products/react/rich-text-editor\">PRODUCT DETAILS</a></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"sb-header-item sb-table-cell sb-download-wrapper\">\r\n                            <a href=\"https://www.syncfusion.com/downloads/essential-js2\" target=\"_blank\">\r\n                                <button id=\"download-now\" class=\"sb-download-btn\">\r\n                                    <span class=\"sb-download-text\">DOWNLOAD</span>\r\n                                </button>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n            <div class ='content e-view'>\r\n            <div class='sample-content'>\r\n                <div id=\"sample-bread-crumb\" class=\"sb-bread-crumb\">\r\n                    <div class=\"sb-bread-crumb-text\">\r\n                        <div class=\"category-allcontrols\"><a href=\"https://ej2.syncfusion.com/react/demos\"><span>All Controls</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"category-text bread-ctext\"><a href=\"https://ej2.syncfusion.com/react/demos/#/material/rich-text-editor/default.html\"><span>Rich-text-editor</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"crumb-sample\">Forums</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"control-content\">\r\n                <div id=\"action-description\">\r\n                        <p>\r\n                            \n                    <p>This sample demonstrates how to design forum application using rich text editor. You can type the content and click reply\n                        button to post it. </p>\n                \r\n                        </p>\r\n                    </div>\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"control-section\">\r\n                            <div id='sample'>\r\n                                <div id='loader'>Loading....</div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    </div>\r\n                    <div id=\"description-section\">Description</div>    \r\n                    <div id=\"description\">\r\n                        <p>\r\n                           \n                    <p>RichTextEditor is a WYSIWYG editing control which will reduce the effort for users while trying to express their formatting\n                        word content as HTML or Markdown format. So, RichTextEditor can easily customized to use for blog posting, forums\n                        as an editor for response.</p>\n                    <p><b>Injecting Module</b></p>\n                    <p>RichTextEditor component features are segregated into individual feature-wise modules. To use richtexteditor feature, we need to inject <code>Toolbar, Link, Image, HtmlEditor</code> modules into the services.</p>\n                \r\n                         </p>     \r\n                    </div>    \r\n                </div>             \r\n            </div>\r\n                \r\n            </div>\r\n        </div>\r\n          \r\n</body>\r\n</html>\r\n","app/index.tsx":"/**\r\n * RichTextEditor usecase sample\r\n */\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { RichTextEditorComponent, HtmlEditor, Inject, Toolbar, Image, Link, QuickToolbar } from '@syncfusion/ej2-react-richtexteditor';\r\nimport { SampleBase } from './sample-base';\r\n\r\nexport class Forums extends SampleBase<{}, {}> {\r\n\r\n    private rteObj: RichTextEditorComponent;\r\n\r\n    public rendereComplete(): void {\r\n        let buttonEle: HTMLElement = document.getElementById('rteSubmit');\r\n        let cancelEle: HTMLElement = document.getElementById('rteCancel');\r\n        cancelEle.addEventListener('click', (e: any) => {\r\n            this.resetMessage();\r\n        });\r\n        let empCount: number = 0;\r\n        buttonEle.addEventListener('click', (e: any) => {\r\n            this.postMessage();\r\n        });\r\n    }\r\n\r\n    private resetMessage(): void {\r\n        let answerElement: Element = this.rteObj.contentModule.getEditPanel();\r\n        answerElement.innerHTML = '';\r\n        this.rteObj.value = '';\r\n        this.rteObj.dataBind();\r\n        this.rteObj.refresh();\r\n    }\r\n\r\n    private postMessage(): void {\r\n        let empCount: number = 0;\r\n        let answerElement: HTMLElement = this.rteObj.contentModule.getEditPanel() as HTMLElement;\r\n        let comment: string = answerElement.innerHTML;\r\n        let empList: string[] = ['emp1', 'emp2', 'emp3'];\r\n        let nameListList: string[] = ['Anne Dodsworth', 'Janet Leverling', 'Laura Callahan'];\r\n        if (comment !== null && comment.trim() !== '' && answerElement.innerText.trim() !== '') {\r\n            let answer: HTMLElement = document.querySelector('.answer');\r\n            let cloneAnswer: HTMLElement = answer.cloneNode(true) as HTMLElement;\r\n            let authorName: HTMLElement = cloneAnswer.querySelector('.authorname');\r\n            let logo: HTMLElement = cloneAnswer.querySelector('.logos');\r\n            logo.classList.remove('logos');\r\n            if (empCount < 3) {\r\n                logo.classList.add(empList[empCount]);\r\n                authorName.innerHTML = nameListList[empCount];\r\n                empCount++;\r\n            } else {\r\n                logo.classList.add('logo');\r\n                authorName.innerHTML = 'User';\r\n            }\r\n            let timeZone: HTMLElement = cloneAnswer.querySelector('.detailsAnswer');\r\n            let day: string = this.getMonthName(new Date().getMonth()) + ' ' + new Date().getDate();\r\n            let hr: string = new Date().getHours() + ':' + new Date().getMinutes();\r\n            if (new Date().getHours() > 12) {\r\n                hr = hr + ' PM';\r\n            } else {\r\n                hr = hr + ' AM';\r\n            }\r\n            timeZone.innerHTML = 'Answered on ' + day + ', ' + new Date().getFullYear() + ' ' + hr;\r\n            let postContent: HTMLElement = cloneAnswer.querySelector('.posting');\r\n            postContent.innerHTML = comment;\r\n            let postElement: HTMLElement = document.querySelector('.answerSection');\r\n            postElement.appendChild(cloneAnswer);\r\n            let countEle: HTMLElement = document.querySelector('.answerCount');\r\n            let count: number = parseInt(countEle.innerHTML, null);\r\n            count = count + 1;\r\n            countEle.innerHTML = count.toString() + ' Answers';\r\n            answerElement.innerHTML = '';\r\n            this.rteObj.value = '';\r\n            this.rteObj.dataBind();\r\n            this.rteObj.refresh();\r\n        }\r\n    }\r\n\r\n    private getMonthName(index: number): string {\r\n        let month: string[] = [];\r\n        month[0] = 'January';\r\n        month[1] = 'February';\r\n        month[2] = 'March';\r\n        month[3] = 'April';\r\n        month[4] = 'May';\r\n        month[5] = 'June';\r\n        month[6] = 'July';\r\n        month[7] = 'August';\r\n        month[8] = 'September';\r\n        month[9] = 'October';\r\n        month[10] = 'November';\r\n        month[11] = 'December';\r\n        return month[index];\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='control-pane'>\r\n                <div className=\"control-section\" id=\"rteUseCase\">\r\n                    <div className=\"control-wrapper\">\r\n                        <div className='forum'>\r\n                            <div className='questionSection'>\r\n                                <div className='raiser'>\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>\r\n                                            <div className='questionar'> </div>\r\n                                            </td>\r\n                                            <td>\r\n                                            <div className='Questionarname'>Kimberly</div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </div>\r\n                                <div className='questionHeader'>\r\n                                    <div className='header'>\r\n                                        How to add a custom item to the toolbar of RichTextEditor\r\n                                    </div>\r\n                                    <div className='detailsQuestion'>Posted on May 7, 2018 6.10 PM</div>\r\n                                    <div className='explain'>\r\n                                        I want to add a custom icon, “code-mirror” to the toolbar of RichTextEditor and display the RichTextEditor content in code-mirror format.\r\n                                    </div>\r\n                                    <div className='tags'>\r\n                                        <div className='tagSection'>\r\n                                            <table>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <div className='tag'> HTML </div>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <div className='tag'> JavaScript </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            </table>\r\n                                        </div>\r\n                                        <div className='questionLikes'>\r\n                                            <table>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <span className='e-icon e-like questionSide'>\r\n                                                        <img className='e-icon' src='http://ej2.syncfusion.com/react/demos/src/rich-text-editor/images/like.svg'/>\r\n                                                        <span>Like</span>\r\n                                                    </span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <span className='e-icon e-dislike'>\r\n                                                        <img className='e-icon' src='http://ej2.syncfusion.com/react/demos/src/rich-text-editor/images/dislike.svg'/>\r\n                                                        <span>Dislike</span>\r\n                                                    </span>\r\n                                                </td>\r\n                                            </tr>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='answerSection'>\r\n                                <div className='answerCount'>1 Answer</div>\r\n                                <div className='answer'>\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td rowSpan={2}>\r\n                                                <div className='logos'> </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div className='authorname'>Mabel Weber</div>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <div className='detailsAnswer'>Answered on May 7, 2018 6.30 PM</div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </table>\r\n                                    <div className='posting'>\r\n                                        To add a custom icon <b>code-mirror</b> to the toolbar, you have to use template option of the <b>toolbarSettings</b>. To know more about adding custom icons, refer to <a href='https://ej2.syncfusion.com/home/' target='_blank'>custom tool</a> sample of RichTextEditor.\r\n                                    </div>\r\n                                    <div className='likeAnswer'>\r\n                                        <table>\r\n                                            <tr>\r\n                                            <td>\r\n                                                <span className='e-icon e-like'>\r\n                                                    <img className='e-icon' src='http://ej2.syncfusion.com/react/demos/src/rich-text-editor/images/like.svg'/>\r\n                                                    <span>Like</span>\r\n                                                </span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span className='e-icon e-dislike'>\r\n                                                    <img className='e-icon' src='http://ej2.syncfusion.com/react/demos/src/rich-text-editor/images/dislike.svg'/>\r\n                                                    <span>Dislike</span>\r\n                                                </span>\r\n                                            </td>\r\n                                            </tr>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"createpostholder\">\r\n                                <form>\r\n                                    <RichTextEditorComponent id=\"defaultRTE\" ref={(richtexteditor) => { this.rteObj = richtexteditor }}>\r\n                                        <Inject services={[Toolbar, Image, Link, HtmlEditor, QuickToolbar]} />\r\n                                        </RichTextEditorComponent>\r\n                                    <div id='buttonSection'>\r\n                                        <ButtonComponent id=\"rteCancel\" type='button'>Cancel</ButtonComponent>\r\n                                        <ButtonComponent id=\"rteSubmit\" cssClass='e-primary' type='button'>Reply</ButtonComponent>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div >);\r\n        }\r\n    }\r\n\nReactDOM.render(<Forums />, document.getElementById('sample'));","app/sample-base.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { enableRipple } from '@syncfusion/ej2-base';\r\n\r\nenableRipple((window as any).ripple);\r\nexport class SampleBase<P, S> extends React.PureComponent<RouteComponentProps<any> & P, S>{\r\n    public rendereComplete(): void {\r\n        /**custom render complete function */\r\n    }\r\n    componentDidMount(): void {\r\n        setTimeout(() => {\r\n            this.rendereComplete();\r\n        }\r\n        );\r\n    }\r\n}"}