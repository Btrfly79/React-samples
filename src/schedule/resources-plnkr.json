{"index.css":".e-tooltip-wrap.e-schedule-event-tooltip .airline-flex-row {\r\n    display: flex;\r\n    padding: 0 5px;\r\n    line-height: 20px;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .airline-flex-col {\r\n    flex: 0 0 50%;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .text-right {\r\n    text-align: right;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .margin-right {\r\n    margin-left: -21px;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .text-size {\r\n    font-size: 14px;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .border-right {\r\n    border-right: 1px solid #fff;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .airline-fare {\r\n    padding-left: 8px;\r\n}\r\n\r\n.schedule-resources.e-schedule .e-appointment .template-wrap {\r\n    color: black;\r\n    width: 100%;\r\n}\r\n\r\n.schedule-resources.highcontrast .e-schedule .e-appointment .template-wrap,\r\n    .schedule-resources.highcontrast .e-schedule .best-price:not(.e-work-cells) {\r\n        color: #fff;\r\n    }\r\n\r\n    .schedule-resources.e-schedule .e-work-cells.best-price {\r\n        background-color: #FFFBDF;\r\n    }\r\n\r\n    .schedule-resources.e-schedule .best-price:not(.e-work-cells) {\r\n        color: #1A961A;\r\n        float: right;\r\n        margin-top: -22px;\r\n        margin-right: 3px;\r\n        width: auto;\r\n        font-size: 12px;\r\n    }\r\n\r\n    .schedule-resources.highcontrast .e-schedule .best-price:not(.e-work-cells) {\r\n        color: #33DB33;\r\n    }\r\n\r\n\r\n    .schedule-resources.highcontrast .e-schedule .e-work-cells.best-price {\r\n        background-color: #393939;\r\n    }\r\n\r\n    .schedule-resources .e-schedule.e-device .best-price:not(.e-work-cells) {\r\n        display: none;\r\n    }\r\n\r\n.schedule-demo-heading {\r\n    font-size: 16px;\r\n    padding-bottom: 15px;\r\n    text-align: center;\r\n    font-weight: 500\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip {\r\n    width: 217px;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .airline {\r\n    width: 40%;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip .airline-header {\r\n    display: flex;\r\n    padding: 8px 0px 8px 0px;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip .airline-details {\r\n    display: flex;\r\n    padding: 8px 5px 8px 5px;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip .airline-timings,\r\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip .airline-timings-title {\r\n    display: flex;\r\n    padding: 5px;\r\n}\r\n\r\n.e-schedule-event-tooltip .event-tooltip .airline-header {\r\n    border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.e-schedule-event-tooltip .event-tooltip .airline-logo,\r\n.schedule-resources.e-schedule .template-wrap .airline-logo {\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    margin-top: -3px;\r\n    width: 25px;\r\n    height: 25px;\r\n}\r\n\r\n.e-schedule-event-tooltip .event-tooltip .airline-logo.airways-1,\r\n.schedule-resources.e-schedule .template-wrap .airline-logo.airways-1 {\r\n    background-image: url('http://ej2.syncfusion.com/react/demos/src/schedule/images/airways-1.svg');\r\n}\r\n\r\n.e-schedule-event-tooltip .event-tooltip .airline-logo.airways-2,\r\n.schedule-resources.e-schedule .template-wrap .airline-logo.airways-2 {\r\n    background-image: url('http://ej2.syncfusion.com/react/demos/src/schedule/images/airways-2.svg');\r\n}\r\n\r\n.e-schedule-event-tooltip .event-tooltip .airline-logo.airways-3,\r\n.schedule-resources.e-schedule .template-wrap .airline-logo.airways-3 {\r\n    background-image: url('http://ej2.syncfusion.com/react/demos/src/schedule/images/airways-3.svg');\r\n}\r\n\r\n.schedule-resources.e-schedule .fare-detail {\r\n    color: #00837B;\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    height: 25px;\r\n    padding-left: 5px;\r\n}\r\n\r\n.schedule-resources.highcontrast .e-schedule .fare-detail {\r\n    color: #1B96BB;\r\n}\r\n\r\n.schedule-resources.e-schedule.e-device .fare-detail {\r\n    font-size: 11px;\r\n}\r\n\r\n.schedule-resources.e-schedule .e-toolbar-item.e-date-range {\r\n    margin-left: 8px;\r\n    pointer-events: none;\r\n}\r\n\r\n.schedule-resources.e-schedule .airway-name {\r\n    font-size: 12px;\r\n    overflow: hidden;\r\n    padding-left: 5px;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.schedule-resources.e-schedule.e-device .airway-name {\r\n    display: none;\r\n}\r\n\r\n.schedule-resources.e-schedule .e-month-view .e-appointment {\r\n    height: 45px;\r\n    background: none;\r\n    border-width: 0;\r\n    top: 10px !important;\r\n}\r\n\r\n.schedule-resources.e-schedule.e-device .e-month-view .e-appointment {\r\n    height: 45px;\r\n}\r\n\r\n.e-bigger .schedule-resources.e-schedule .e-month-view .e-appointment {\r\n    height: 40px;\r\n}\r\n\r\n.schedule-resources.e-schedule .e-month-view .e-appointment .e-appointment-details {\r\n    height: inherit;\r\n}\r\n\r\n.schedule-resources.e-schedule .e-month-view .e-more-indicator {\r\n    display: none\r\n}\r\n\r\n.schedule-resources.e-schedule .e-month-view .e-appointment.e-appointment-border,\r\n.schedule-resources.e-schedule .e-month-view .e-appointment:focus {\r\n    border-width: 0;\r\n}\r\n\r\n.e-tooltip-wrap.e-popup.e-schedule-event-tooltip {\r\n    opacity: 1;\r\n}\r\n\r\n.highcontrast .e-tooltip-wrap.e-popup.e-schedule-event-tooltip {\r\n    border-color: #e0e0e0;\r\n    background-color: #fff;\r\n}\r\n\r\n.highcontrast .e-tooltip-wrap.e-popup.e-schedule-event-tooltip .e-tip-content {\r\n    color: #000;\r\n}\r\n\r\n.e-tooltip-wrap.e-popup.e-schedule-event-tooltip .event-tooltip .airline-name {\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    padding-left: 10px;\r\n    padding-top: 3px;\r\n\r\n}\r\n\r\n.e-tooltip-wrap.e-popup.e-schedule-event-tooltip .event-tooltip .airline-title {\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n}\r\n\r\n.e-tooltip-wrap.e-popup.e-schedule-event-tooltip .event-tooltip .airline-logo {\r\n    padding: 5px;\r\n    margin-left: 5px;\r\n    background-size: 25px;\r\n    height: 25px;\r\n    width: 25px;\r\n    margin-top: 0px;\r\n}\r\n\r\n.property-panel-content .e-checkbox-wrapper.e-resource.e-airways-1 .e-frame {\r\n    background-color: #EA7A57;\r\n    border-color: transparent;\r\n}\r\n\r\n.property-panel-content .e-checkbox-wrapper.e-resource.e-airways-2 .e-frame {\r\n    background-color: #357CD2;\r\n    border-color: transparent;\r\n}\r\n\r\n.property-panel-content .e-checkbox-wrapper.e-resource.e-airways-3 .e-frame {\r\n    background-color: #7FA900;\r\n    border-color: transparent;\r\n}\r\n\r\n@media (max-width: 550px) {\r\n    .schedule-demo-heading {\r\n        font-size: 14px;\r\n    }\r\n}\r\n","app/property-pane.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nexport class PropertyPane extends React.Component<{ title: string }, {}>{\r\n\r\n    render() {\r\n        return (\r\n            <div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","systemjs.config.js":"System.config({\r\n    transpiler: \"ts\",\r\n    typescriptOptions: {\r\n            target: \"es5\",\r\n            module: \"commonjs\",\r\n            moduleResolution: \"node\",\r\n            emitDecoratorMetadata: true,\r\n            experimentalDecorators: true,\r\n            \"jsx\": \"react\"\r\n    },\r\n     meta: {\r\n      'typescript': {\r\n        \"exports\": \"ts\"\r\n      },\r\n      '*.json': { loader: 'plugin-json' }\r\n    },\r\n    paths: {\r\n        \"syncfusion:\": \"http://cdn.syncfusion.com/ej2/\"},\r\n    map: {\r\n        app: 'app',\r\n        ts: \"https://unpkg.com/plugin-typescript@4.0.10/lib/plugin.js\",\r\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\r\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\r\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\r\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-splitbuttons\": \"syncfusion:ej2-splitbuttons/dist/ej2-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-maps\": \"syncfusion:ej2-maps/dist/ej2-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-treemap\": \"syncfusion:ej2-treemap/dist/ej2-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\r\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-schedule\": \"syncfusion:ej2-schedule/dist/ej2-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\r\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\r\n        \"@syncfusion/ej2-documenteditor\": \"syncfusion:ej2-documenteditor/dist/ej2-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-notifications\": \"syncfusion:ej2-notifications/dist/ej2-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-richtexteditor\": \"syncfusion:ej2-richtexteditor/dist/ej2-richtexteditor.umd.min.js\",\r\n\t\t\"@syncfusion/ej2-svg-base\": \"syncfusion:ej2-svg-base/dist/ej2-svg-base.umd.min.js\",\r\n        \"@syncfusion/ej2-pivotview\": \"syncfusion:ej2-pivotview/dist/ej2-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-heatmap\": \"syncfusion:ej2-heatmap/dist/ej2-heatmap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-base\": \"syncfusion:ej2-react-base/dist/ej2-react-base.umd.min.js\",\r\n        \"@syncfusion/ej2-react-buttons\": \"syncfusion:ej2-react-buttons/dist/ej2-react-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-splitbuttons\": \"syncfusion:ej2-react-splitbuttons/dist/ej2-react-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-charts\": \"syncfusion:ej2-react-charts/dist/ej2-react-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-react-maps\": \"syncfusion:ej2-react-maps/dist/ej2-react-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-react-treemap\": \"syncfusion:ej2-react-treemap/dist/ej2-react-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-circulargauge\": \"syncfusion:ej2-react-circulargauge/dist/ej2-react-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lineargauge\": \"syncfusion:ej2-react-lineargauge/dist/ej2-react-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-calendars\": \"syncfusion:ej2-react-calendars/dist/ej2-react-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-react-dropdowns\": \"syncfusion:ej2-react-dropdowns/dist/ej2-react-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-react-grids\": \"syncfusion:ej2-react-grids/dist/ej2-react-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-react-inputs\": \"syncfusion:ej2-react-inputs/dist/ej2-react-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lists\": \"syncfusion:ej2-react-lists/dist/ej2-react-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-react-navigations\": \"syncfusion:ej2-react-navigations/dist/ej2-react-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-react-popups\": \"syncfusion:ej2-react-popups/dist/ej2-react-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-react-schedule\": \"syncfusion:ej2-react-schedule/dist/ej2-react-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-react-documenteditor\": \"syncfusion:ej2-react-documenteditor/dist/ej2-react-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-notifications\": \"syncfusion:ej2-react-notifications/dist/ej2-react-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-react-richtexteditor\": \"syncfusion:ej2-react-richtexteditor/dist/ej2-react-richtexteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-pivotview\": \"syncfusion:ej2-react-pivotview/dist/ej2-react-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-react-heatmap\": \"syncfusion:ej2-react-heatmap/dist/ej2-react-heatmap.umd.min.js\",\r\n        \"react-dom\":\"https://unpkg.com/react-dom@15.5.4/dist/react-dom.min.js\",\r\n        \"react\":\"https://unpkg.com/react@15.5.4/dist/react.min.js\",\r\n    },\r\n    packages: {\r\n        'app': { main: 'index', defaultExtension: 'tsx' },\r\n    }\r\n});\r\n\r\nSystem.import('app');","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Schedule · Resources · Essential JS 2 for React · Syncfusion</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <!-- {{:meta}} -->\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <script type=\"text/javascript\">\r\n        var themeName = location.hash || 'material';\r\n        themeName = themeName.replace('#','');\r\n        window.ripple = (themeName === \"material\")\r\n        document.write('<link href=\"http://cdn.syncfusion.com/ej2/' + themeName + '.css\" rel=\"stylesheet\">');\r\n    </script>\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\r\n    <script src=\"systemjs.config.js\"></script>\r\n    <link href=\"index.css\" rel=\"stylesheet\" />\r\n     <style>\r\n        #loader {\r\n            color: #008cff;\r\n            height: 40px;\r\n            left: 45%;\r\n            position: absolute;\r\n            top: 45%;\r\n            width: 30%;\r\n        }\r\n        body {\r\n            touch-action:none;\r\n        }\r\n        .body {\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n        }\r\n\r\n        .e-view {\r\n            bottom: 0;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n        }\r\n\r\n        .sb-left {\r\n            float: left;\r\n        }\r\n\r\n        .sb-right {\r\n            float: right;\r\n        }\r\n\r\n        .sb-block {\r\n            display: block;\r\n        }\r\n\r\n        .sb-table {\r\n            display: table;\r\n        }\r\n\r\n        .sb-table-cell {\r\n            display: table-cell;\r\n            vertical-align: middle;\r\n        }\r\n\r\n        /*sample header*/\r\n\r\n\r\n        .sb-header {\r\n            height: 48px;\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.12);\r\n            z-index: 1001;\r\n            opacity: 100;\r\n        }\r\n\r\n\r\n        .sb-header-left, .sb-header-right {\r\n            height: 100%;\r\n        }\r\n\r\n        #sb-header-text {\r\n            padding-left: 22px;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        .header-logo {\r\n            float: left;\r\n            padding-left: 8px;\r\n            padding-right: 22px;\r\n        }\r\n\r\n        .footer-logo {\r\n            background: url(https://ej2.syncfusion.com/home/images/footer-logo.svg) no-repeat right;\r\n            height: 40px;\r\n            width: 140px;\r\n        }\r\n\r\n        .sb-header-splitter {\r\n            float: left;\r\n            border-left: 1px solid rgb(196, 196, 196);\r\n            height: 32px;\r\n            margin-top: 8px;\r\n            padding-left: 22 px;\r\n        }\r\n\r\n        .sb-header-settings {\r\n            display: none;\r\n        }\r\n\r\n        .product-style a{\r\n        padding-right: 15px;\r\n        font-family:Roboto;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        color: #363636;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        }\r\n        .product-style a:hover {\r\n            color:#3C78EF;\r\n        }\r\n\r\n        .sb-download-btn a {\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-download-text {\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-wrapper {\r\n            padding-right: 27px;\r\n        }\r\n\r\n        .sb-download-btn:hover .sb-download-btn:focus .sb-download-btn.active {\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\";\r\n            font-weight: bold;\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-btn:hover {\r\n            background: #006CE6;\r\n        }\r\n\r\n        .sb-download-btn:focus {\r\n            background: #0051CB;\r\n        }\r\n\r\n        .sb-download-btn.active {\r\n            background: #0036B1;\r\n        }\r\n\r\n        .sb-download-btn {\r\n            background-color: #3C78EF;\r\n            opacity: 100;\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n            font-weight: 500;\r\n            line-height: 18px;\r\n            height: 32px;\r\n            border-color: transparent;\r\n        }\r\n\r\n        .sb-bread-crumb {\r\n            padding-left: 20px;\r\n            padding-top: 24px;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        .category-allcontrols a, .category-text a, .crumb-sample {\r\n            display: table;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #3C78EF;\r\n            text-align: left;\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-bread-crumb .sb-bread-crumb-text>div {\r\n            font-size: 15px;\r\n            font-weight: 500;\r\n            padding-right: 8px;\r\n            cursor: default;\r\n            display: table-cell;\r\n        }\r\n\r\n        .sb-bread-crumb-text>div.seperator {\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            vertical-align: bottom;\r\n        } \r\n\r\n        .content {\r\n        overflow: auto;\r\n        height: calc(100% - 50px);\r\n        top: 50px;\r\n        }\r\n\r\n\r\n        .sample-content {\r\n            top: 48px;\r\n            background: #FFFFFF;\r\n        }\r\n\r\n        .div {\r\n        display: block;\r\n        }\r\n\r\n        .control-section {\r\n            padding-left: 4px;\r\n        }\r\n\r\n        .crumb-sample {\r\n            color: #000000;\r\n            line-height: 18px;\r\n        }\r\n\r\n        #description {\r\n            padding-bottom: 16px;\r\n            padding-left: 20px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n            padding-top: 14px;\r\n        }\r\n\r\n        #action-description {\r\n            padding-left: 20px;\r\n            padding-bottom: 15px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        #description-section {\r\n            padding-left: 20px;\r\n            padding-top: 30px;\r\n            opacity: 0.87;\r\n            font-family:Roboto;\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n\r\n\r\n    </style>\r\n</head>\r\n\r\n<body class='e-view ej2-new' aria-busy=\"true\">\r\n        <div class=\"sample-browser\">\r\n            <div id='sample-header' class=\"sb-header\" role=\"banner\">\r\n                <div class='sb-header-left sb-left sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"header-logo\">\r\n                            <a href=\"https://ej2.syncfusion.com/home/react.html\" target=\"\" rel=\"noopener noreferrer\">\r\n                                <div class=\"footer-logo\"> </div>\r\n                            </a>\r\n                        </div>\r\n    \r\n                    </div>\r\n                    <div class=\"sb-header-splitter sb-download-splitter\"></div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div id='sb-header-text' class='e-sb-header-text'>\r\n    \r\n                            <span class='sb-header-text-left'>Essential JS 2 for React</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class='sb-header-right sb-right sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class='product-style'>\r\n                            <div><a href=\"https://www.syncfusion.com/products/react/schedule\">PRODUCT DETAILS</a></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"sb-header-item sb-table-cell sb-download-wrapper\">\r\n                            <a href=\"https://www.syncfusion.com/downloads/essential-js2\" target=\"_blank\">\r\n                                <button id=\"download-now\" class=\"sb-download-btn\">\r\n                                    <span class=\"sb-download-text\">DOWNLOAD</span>\r\n                                </button>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n            <div class ='content e-view'>\r\n            <div class='sample-content'>\r\n                <div id=\"sample-bread-crumb\" class=\"sb-bread-crumb\">\r\n                    <div class=\"sb-bread-crumb-text\">\r\n                        <div class=\"category-allcontrols\"><a href=\"https://ej2.syncfusion.com/react/demos\"><span>All Controls</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"category-text bread-ctext\"><a href=\"https://ej2.syncfusion.com/react/demos/#/material/schedule/default.html\"><span>Schedule</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"crumb-sample\">Resources</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"control-content\">\r\n                <div id=\"action-description\">\r\n                        <p>\r\n                            \n                    <p>\n                        This demo illustrates how to customize the schedule to showcase it as an\n                       <strong>Airfare calendar</strong> depicting the lowest available price on each day of a month for a specific route,\n                                   say between Barcelona and Los Angeles.\n                    </p>\n                \r\n                        </p>\r\n                    </div>\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"control-section\">\r\n                            <div id='sample'>\r\n                                <div id='loader'>Loading....</div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    </div>\r\n                    <div id=\"description-section\">Description</div>    \r\n                    <div id=\"description\">\r\n                        <p>\r\n                           \n                    <p>\n                        In this demo, Schedule initially displays the fare of the airline service which offers lowest price on each day by\n                         comparing between the 3 available airlines. Here, the 3 airline services acts as the Schedule resources.\n                        Appointment collection has been dynamically generated for a month (for all the 3 resources) within the\n                        <code>generateEvents</code> method and then filtered externally based on the ascending Fare value within the\n                        <code>filterByFare</code> method. Since each day of the Schedule needs to display only a single appointment showing\n                         the fare value, therefore it&#x2019;s been queried to take only the first 30 values from the sorted list and assigned it\n                          to the Schedule\n                        <code>dataSource</code>. Here, the filtering process needs to be carried out during the\n                        <code>databinding</code> event and therefore, the dataSource of Schedule is assigned within this event.\n                    </p>\n                    <p>\n                        Schedule has been rendered in a readonly mode and therefore no editing actions are allowed here.\n                         To customize the look of the appointments that displays the fare value,\n                        <code>template</code> option within the\n                        <code>eventSettings</code> is being used. To highlight the day that holds the overall lowest price of a month,\n                         the background color of that day&#x2019;s cell is customized within the\n                        <code>dataBound</code> event. Also, the tooltip has been enabled with\n                        <code>template</code> option to display the flight details in a customized style.\n                    </p>\n                \r\n                         </p>     \r\n                    </div>    \r\n                </div>             \r\n            </div>\r\n                \r\n            </div>\r\n        </div>\r\n          \r\n</body>\r\n</html>\r\n","app/index.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport {\r\n    Month, EventFieldsMapping, Inject, PopupOpenEventArgs, ActionEventArgs, ToolbarActionArgs, ScheduleComponent, Schedule,\r\n    ViewsDirective, ViewDirective, ResourcesDirective, ResourceDirective\r\n} from '@syncfusion/ej2-react-schedule';\r\n\r\nimport { CheckBoxComponent, ChangeEventArgs } from '@syncfusion/ej2-react-buttons';\r\nimport { extend, Internationalization, createElement, closest, remove, addClass, removeClass } from '@syncfusion/ej2-base';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\n\r\n/**\r\n * schedule resources fare-calendar sample\r\n */\r\n\r\nexport class Resources extends SampleBase<{}, {}> {\r\n    private dManager: Object[] = [];\r\n    private initalLoad: Boolean = true;\r\n    private scheduleObj: ScheduleComponent;\r\n    private getAirwaysName(value: number) {\r\n        return (value === 1) ? 'Airways 1' : (value === 2) ? 'Airways 2' : 'Airways 3';\r\n    }\r\n    private getAirwaysImage(value: number) {\r\n        return (value === 1) ? 'airways-1' : (value === 2) ? 'airways-2' : 'airways-3';\r\n    }\r\n    private instance: Internationalization = new Internationalization();\r\n    private getFormattedTime(date: Date) {\r\n        return this.instance.formatDate(date, { skeleton: 'Hm' });\r\n    }\r\n    private onActionBegin(args: ActionEventArgs & ToolbarActionArgs): void {\r\n        if (args.requestType === 'toolbarItemRendering') {\r\n            args.items[2].align = 'Center';\r\n            args.items[2].suffixIcon = '';\r\n            args.items = args.items.splice(2, 1);\r\n        }\r\n    }\r\n\r\n    private onDataBinding(): void {\r\n        if (this.initalLoad) {\r\n            this.scheduleObj.eventSettings.dataSource = this.generateEvents(this.scheduleObj);\r\n            this.initalLoad = false;\r\n        }\r\n    }\r\n\r\n    private onDataBound(): void {\r\n        let eventCollections: Object[] = this.scheduleObj.getCurrentViewEvents();\r\n        eventCollections.sort((a: { [key: string]: Object }, b: { [key: string]: Object }) =>\r\n            ((a.Fare as number) - (b.Fare as number)));\r\n        let indexDate: Date = new Date(((eventCollections[0] as { [key: string]: Object }).StartTime as Date).getTime());\r\n        indexDate.setHours(0, 0, 0, 0);\r\n        let index: number = this.scheduleObj.getIndexOfDate(this.scheduleObj.activeView.renderDates, indexDate);\r\n        let target: HTMLElement = this.scheduleObj.element.querySelectorAll('.e-work-cells')[index] as HTMLElement;\r\n        addClass([target], 'best-price');\r\n        target.appendChild(createElement('div', { className: 'best-price', innerHTML: 'Best Price' }));\r\n    }\r\n\r\n    private onPopupOpen(args: PopupOpenEventArgs): void {\r\n        args.cancel = true;\r\n    }\r\n\r\n    private resourceData: Object[] = [\r\n        { text: 'Airways 1', id: 1 },\r\n        { text: 'Airways 2', id: 2 },\r\n        { text: 'Airways 3', id: 3 }\r\n    ];\r\n\r\n    private onChange(args: ChangeEventArgs): void {\r\n        let tdElement: HTMLElement = this.scheduleObj.element.querySelector('.best-price:not(.e-work-cells)');\r\n        if (tdElement) {\r\n            removeClass([closest(tdElement, 'td')], 'best-price');\r\n            remove(tdElement);\r\n        }\r\n        let scheduleData: Object[] = extend([], this.dManager, null, true) as Object[];\r\n        let selectedResource: number[] = [];\r\n        let resourceCollection: HTMLElement[] = [].slice.call(document.querySelectorAll('.e-resource'));\r\n        resourceCollection.forEach((element: HTMLElement, index: number) => {\r\n            if (element.getAttribute('aria-checked') === 'true') {\r\n                selectedResource.push(index);\r\n            }\r\n        });\r\n        let filteredData: Object[] = [];\r\n        let resources: { [key: string]: Object }[] =\r\n            this.scheduleObj.resourceBase.resourceCollection.slice(-1)[0].dataSource as { [key: string]: Object }[];\r\n        for (let resource of selectedResource) {\r\n            let data: Object[] = scheduleData.filter((event: { [key: string]: Object }) => resources[resource].id === event.AirlineId);\r\n            filteredData = filteredData.concat(data);\r\n        }\r\n        filteredData = this.filterByFare(filteredData, this.scheduleObj);\r\n        this.scheduleObj.eventSettings.dataSource = filteredData;\r\n        this.scheduleObj.dataBind();\r\n    }\r\n\r\n    private filterByFare(appointments: Object[], scheduleObj: Schedule): Object[] {\r\n        let fieldMapping: EventFieldsMapping = scheduleObj.eventFields;\r\n        appointments.sort((object1: { [key: string]: Object }, object2: { [key: string]: Object }) => {\r\n            let d1: number = +(object1[fieldMapping.startTime] as Date);\r\n            let d2: number = +(object2[fieldMapping.startTime] as Date);\r\n            let d3: number = +(object1[fieldMapping.endTime] as Date);\r\n            let d4: number = +(object2[fieldMapping.endTime] as Date);\r\n            return ((d1 - d2) || ((d4 - d2) - (d3 - d1)));\r\n        });\r\n        let renderDate: Date[] = scheduleObj.activeView.getRenderDates();\r\n        let finalData: Object[] = [];\r\n        for (let date of renderDate) {\r\n            if (scheduleObj.selectedDate.getMonth() === date.getMonth()) {\r\n                let strTime: Date = new Date(+date);\r\n                let endTime: Date = new Date(new Date(strTime.getTime()).setHours(23, 59, 59, 59));\r\n                let perDayData: Object[] = scheduleObj.eventBase.filterEvents(strTime, endTime, appointments);\r\n                if (perDayData.length > 0) {\r\n                    perDayData.sort((a: { [key: string]: Object }, b: { [key: string]: Object }) =>\r\n                        ((a.Fare as number) - (b.Fare as number)));\r\n                    finalData.push(perDayData[0]);\r\n                }\r\n            }\r\n        }\r\n        return finalData;\r\n    }\r\n\r\n    private generateEvents(scheduleObj: Schedule): Object[] {\r\n        let collections: Object[] = [];\r\n        let dataCollections: { [key: string]: Object }[] = [\r\n            {\r\n                Id: 100,\r\n                StartTime: new Date(2018, 3, 1, 8, 30),\r\n                EndTime: new Date(2018, 3, 1, 10, 0),\r\n                AirlineId: 1\r\n            }, {\r\n                Id: 102,\r\n                StartTime: new Date(2018, 3, 1, 11, 0),\r\n                EndTime: new Date(2018, 3, 1, 12, 0),\r\n                AirlineId: 2\r\n            }, {\r\n                Id: 103,\r\n                StartTime: new Date(2018, 3, 1, 14, 0),\r\n                EndTime: new Date(2018, 3, 1, 15, 0),\r\n                AirlineId: 3\r\n            }\r\n        ];\r\n        let start: Date = new Date(2018, 3, 1);\r\n        let dateCollections: Date[] = Array.apply(null, { length: 30 })\r\n            .map((value: number, index: number) => { return new Date(start.getTime() + (1000 * 60 * 60 * 24 * index)); });\r\n        let id: number = 1;\r\n        let day: number = 0;\r\n        for (let date of dateCollections) {\r\n            let resource: number = 1;\r\n            for (let data of dataCollections) {\r\n                let strDate: Date = new Date((data.StartTime as Date).getTime());\r\n                let endDate: Date = new Date((data.EndTime as Date).getTime());\r\n                collections.push({\r\n                    Id: id,\r\n                    StartTime: new Date(strDate.setDate(strDate.getDate() + day)),\r\n                    EndTime: new Date(endDate.setDate(endDate.getDate() + day)),\r\n                    AirlineId: resource,\r\n                    Fare: ((Math.random() * 500) + 100).toFixed(2)\r\n                });\r\n                resource += 1;\r\n                id += 1;\r\n            }\r\n            day += 1;\r\n        }\r\n        this.dManager = extend([], collections, null, true) as Object[];\r\n        let filteredCollection: Object[] = this.filterByFare(collections, scheduleObj);\r\n        return filteredCollection;\r\n    }\r\n\r\n    private template(props): JSX.Element {\r\n        return (<div className=\"template-wrap\">\r\n            <div className=\"fare-detail\">${props.Fare}</div>\r\n            <div className=\"airline-name\" style={{ display: 'flex', paddingLeft: '5px' }}>\r\n                <div className={\"airline-logo \" + this.getAirwaysImage(props.AirlineId)}></div>\r\n                <div className=\"airway-name\">{this.getAirwaysName(props.AirlineId)}</div>\r\n            </div></div>);\r\n    }\r\n\r\n    private toolTipTemplate(props): JSX.Element {\r\n        return (<div className=\"event-tooltip\">\r\n            <div className=\"airline-header\">\r\n                <div className={\"airline-logo \" + this.getAirwaysImage(props.AirlineId)}></div>\r\n                <div className=\"airline-name\">{this.getAirwaysName(props.AirlineId)}</div>\r\n            </div>\r\n            <div className=\"airline-details text-size\">\r\n                <div className=\"airline-title\">Fare Details:</div>\r\n                <div className=\"airline-fare\">${props.Fare} per person</div>\r\n            </div>\r\n            <div className=\"airline-flex-row text-size\">\r\n                <div className=\"airline-flex-col airline-title border-right\">Arrival</div>\r\n                <div className=\"airline-flex-col airline-title text-right\">Depature</div>\r\n            </div>\r\n            <div className=\"airline-flex-row text-size\">\r\n                <div className=\"airline-flex-col border-right\">{this.getFormattedTime(props.StartTime)}</div>\r\n                <div className=\"airline-flex-col margin-right text-right\">{this.getFormattedTime(props.EndTime)}</div>\r\n            </div></div>\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='schedule-control-section'>\r\n                <div className='col-lg-9 control-section'>\r\n                    <div className='control-wrapper'>\r\n                        <div className='schedule-demo-heading'>\r\n                            Cheapest one way fares from Barcelona to Los Angeles\r\n                    </div>\r\n                        <ScheduleComponent ref={schedule => this.scheduleObj = schedule} cssClass='schedule-resources' width='100%'\r\n                            height='650px' readonly={true} selectedDate={new Date(2018, 3, 1)}\r\n                            eventSettings={{\r\n                                template: this.template.bind(this), enableTooltip: true,\r\n                                tooltipTemplate: this.toolTipTemplate.bind(this)\r\n                            }}\r\n                            actionBegin={this.onActionBegin.bind(this)} dataBinding={this.onDataBinding.bind(this)}\r\n                            popupOpen={this.onPopupOpen.bind(this)} dataBound={this.onDataBound.bind(this)} >\r\n                            <ResourcesDirective>\r\n                                <ResourceDirective field='AirlineId' title='Airline' name='Airlines' allowMultiple={true}\r\n                                    dataSource={this.resourceData} textField='text' idField='id' >\r\n                                </ResourceDirective>\r\n                            </ResourcesDirective>\r\n                            < ViewsDirective >\r\n                                <ViewDirective option='Month' />\r\n                            </ViewsDirective>\r\n                            < Inject services={[Month]} />\r\n                        </ScheduleComponent>\r\n                    </div>\r\n                </div>\r\n                <div className='col-lg-3 property-section'>\r\n                    <PropertyPane title='Properties'>\r\n                        <table id='property' title='Properties' className='property-panel-table' style={{ width: '100%' }}>\r\n                            <tbody>\r\n                                <tr style={{ height: '50px' }}>\r\n                                    <td style={{ width: '100%' }}>\r\n                                        <div className='airways-1'>\r\n                                            <CheckBoxComponent id='airways-1' cssClass='e-resource e-airways-1' checked={true}\r\n                                                label='Airways 1' change={this.onChange.bind(this)} >\r\n                                            </CheckBoxComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr style={{ height: '50px' }}>\r\n                                    <td style={{ width: '100%' }}>\r\n                                        <div className='airways-2'>\r\n                                            <CheckBoxComponent id='airways-2' cssClass='e-resource e-airways-2' checked={true}\r\n                                                label='Airways 2' change={this.onChange.bind(this)} ></CheckBoxComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr style={{ height: '50px' }}>\r\n                                    <td style={{ width: '100%' }}>\r\n                                        <div className='airways-3'>\r\n                                            <CheckBoxComponent id='airways-3' cssClass='e-resource e-airways-3' checked={true}\r\n                                                label='Airways 3' change={this.onChange.bind(this)} >\r\n                                            </CheckBoxComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\nReactDOM.render(<Resources />, document.getElementById('sample'));","app/sample-base.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { enableRipple } from '@syncfusion/ej2-base';\r\n\r\nenableRipple((window as any).ripple);\r\nexport class SampleBase<P, S> extends React.PureComponent<RouteComponentProps<any> & P, S>{\r\n    public rendereComplete(): void {\r\n        /**custom render complete function */\r\n    }\r\n    componentDidMount(): void {\r\n        setTimeout(() => {\r\n            this.rendereComplete();\r\n        }\r\n        );\r\n    }\r\n}"}