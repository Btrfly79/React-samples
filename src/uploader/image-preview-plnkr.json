{"index.css":".control_wrapper .imagepreview{\r\n    max-width: 505px;\r\n    margin: auto;\r\n}\r\n.imagepreview .e-file-select-wrap {\r\n    display: none;\r\n}\r\n.imagepreview .e-upload {\r\n    border: none;\r\n    margin-top: 10px;\r\n    width: 100%;\r\n}\r\n.imagepreview #dropimage {\r\n    font-size: 14px;\r\n}\r\n.e-bigger .imagepreview #dropimage {\r\n    font-size: 15px;\r\n}\r\n.control-pane #uploadpreview {\r\n    overflow: initial;\r\n}\r\n.imagepreview #dropArea {\r\n    border: 1px dashed #c3c3cc;\r\n    position: relative;\r\n    text-align: center;\r\n    padding-top: 20px;\r\n    display: block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n}\r\n.imagepreview #dropArea .e-upload .e-upload-files {\r\n    text-align: initial;\r\n    border-top: none;\r\n}\r\n.imagepreview #dropArea .e-upload-files .e-file-delete-btn.e-icons,\r\n.imagepreview #dropArea .e-upload-files .e-file-remove-btn.e-icons {\r\n    top: 120px;\r\n    background-color: white;\r\n    border-radius: 50%;\r\n    font-size: 12px;\r\n    left: 80px;\r\n}\r\n.imagepreview #dropArea .e-upload-files li .e-file-remove-btn.e-icons.e-upload-icon {\r\n    font-size: 14px;\r\n    left: 20px;\r\n}\r\n.imagepreview #dropArea .e-upload-files li:hover .e-icons {\r\n    visibility: visible;\r\n}\r\n.imagepreview #dropArea .e-upload-files li .e-icons {\r\n    visibility: hidden;\r\n}\r\n.imagepreview #dropArea .e-upload .e-upload-files .e-icons.e-upload-icon::before{\r\n    content: '\\e725';\r\n}\r\n.imagepreview #dropArea .e-upload .e-upload-files .e-icons.e-upload-icon{\r\n    font-size: 16px;\r\n    left: 20px;\r\n}\r\n.imagepreview #dropArea .e-upload .e-upload-files .e-icons:not(.e-uploaded):hover{\r\n    background-color: #e6e6e6;\r\n    border-color: #adadad;\r\n    color: #333;\r\n}\r\n.highcontrast .imagepreview #dropArea .e-upload-files .e-file-remove-btn.e-icons,\r\n.highcontrast .imagepreview #dropArea .e-upload-files .e-file-delete-btn.e-icons {\r\n    background-color: #ffd939;\r\n}\r\n.highcontrast .imagepreview #dropArea .e-upload .e-upload-files .e-file-delete-btn.e-icons::before,\r\n.highcontrast .imagepreview #dropArea .e-upload .e-upload-files .e-file-remove-btn.e-icons::before{\r\n    color: black;\r\n}\r\n.imagepreview #dropArea .e-upload .e-upload-files .e-upload-file-list {\r\n    border: 0;\r\n    display: inline-block;\r\n    width: 165px;\r\n}\r\n.imagepreview .upload-image {\r\n    width: 150px;\r\n    height: 150px;\r\n    display: inline-flex;\r\n    background-size: contain;\r\n    margin: 7px;\r\n    text-align: center;\r\n    line-height: 10;\r\n    border-radius: 5px;\r\n}\r\n.imagepreview .upload-image:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 6px;\r\n    left: 6px;\r\n    width: inherit;\r\n    height: inherit;\r\n    background: lightgray url('http://via.placeholder.com/300?text=Loading...') no-repeat center;\r\n    color: transparent;\r\n    border-radius: 5px;\r\n}\r\n.highcontrast .imagepreview div.file-name {\r\n    color: white;\r\n}\r\n.imagepreview div.file-name {\r\n    color: rgba(0, 0, 0, 0.87);\r\n    font-size: 14px;\r\n    padding: 3px 10px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    width: 90%;\r\n    white-space: nowrap;\r\n}\r\n.highcontrast .imagepreview div.file-size {\r\n    color: white;\r\n}\r\n.imagepreview div.file-size {\r\n    font-size: 13px;\r\n    padding: 3px 10px;\r\n    overflow: hidden;\r\n}\r\n.imagepreview .progressbar {\r\n    background: #ff4081;\r\n    border: none;\r\n    border-radius: 10px;\r\n    height: 4px;\r\n    margin-left: 7px;\r\n    width: 90%;\r\n    top: -60px;\r\n    position: relative;\r\n}\r\n.imagepreview #dropArea progress {\r\n    border: none;\r\n    background: #fff;\r\n    margin-left: 8px;\r\n}\r\n.highcontrast .imagepreview #dropArea progress {\r\n    border: none;\r\n    background: black;\r\n}\r\n.imagepreview progress::-webkit-progress-bar {\r\n    border: none;\r\n    background-color: #ffffff;\r\n}\r\n.highcontrast .imagepreview progress::-webkit-progress-bar {\r\n    border: none;\r\n    background-color: #000000;\r\n}\r\n.material .imagepreview progress::-webkit-progress-value {\r\n    border-radius: 2px; \r\n    background-color: #ff4081;\r\n}\r\n.bootstrap .imagepreview progress::-webkit-progress-value {\r\n    border-radius: 2px; \r\n    background-color: #1f496e;\r\n}\r\n.fabric .imagepreview progress::-webkit-progress-value {\r\n    background-color: #1763ff;\r\n    border-radius: 2px; \r\n    top: -66px;\r\n}\r\n.highcontrast .imagepreview progress::-webkit-progress-value {\r\n    background-color: #ffd939;\r\n    border-radius: 2px; \r\n}\r\n.material .imagepreview progress::-moz-progress-bar {\r\n    border-radius: 2px; \r\n    background-color: #ff4081;\r\n}\r\n.bootstrap .imagepreview progress::-moz-progress-bar {\r\n    border-radius: 2px; \r\n    background-color: #1f496e;\r\n}\r\n.fabric .imagepreview progress::-moz-progress-bar {\r\n    background-color: #1763ff;\r\n    border-radius: 2px; \r\n    top: -66px;\r\n}\r\n.highcontrast .imagepreview progress::-moz-progress-bar {\r\n    background-color: #ffd939;\r\n    border-radius: 2px; \r\n}\r\n.material .imagepreview #dropimage a {\r\n    color:#ff4081;\r\n}\r\n.fabric .imagepreview #dropimage a {\r\n    color: #1763ff;\r\n}\r\n.bootstrap .imagepreview #dropimage a {\r\n    color: #1f496e;\r\n}\r\n.highcontrast .imagepreview #dropimage a {\r\n    color: #ffd939;\r\n}\r\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\r\n\t.imagepreview .dropTarget .e-upload .e-upload-files .e-file-remove-btn.e-icons, .e-bigger .imagepreview .dropTarget .e-upload .e-upload-files .e-file-remove-btn.e-icons {\r\n\t   padding: 18px 25px 18px 12px;\r\n\t}\r\n}\r\n\r\n.panel-style {\r\n    padding-top: 25px;\r\n}","app/property-pane.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nexport class PropertyPane extends React.Component<{ title: string }, {}>{\r\n\r\n    render() {\r\n        return (\r\n            <div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","systemjs.config.js":"System.config({\r\n    transpiler: \"ts\",\r\n    typescriptOptions: {\r\n            target: \"es5\",\r\n            module: \"commonjs\",\r\n            moduleResolution: \"node\",\r\n            emitDecoratorMetadata: true,\r\n            experimentalDecorators: true,\r\n            \"jsx\": \"react\"\r\n    },\r\n     meta: {\r\n      'typescript': {\r\n        \"exports\": \"ts\"\r\n      },\r\n      '*.json': { loader: 'plugin-json' }\r\n    },\r\n    paths: {\r\n        \"syncfusion:\": \"http://cdn.syncfusion.com/ej2/\"},\r\n    map: {\r\n        app: 'app',\r\n        ts: \"https://unpkg.com/plugin-typescript@4.0.10/lib/plugin.js\",\r\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\r\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\r\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\r\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-splitbuttons\": \"syncfusion:ej2-splitbuttons/dist/ej2-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-maps\": \"syncfusion:ej2-maps/dist/ej2-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-treemap\": \"syncfusion:ej2-treemap/dist/ej2-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\r\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-schedule\": \"syncfusion:ej2-schedule/dist/ej2-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\r\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\r\n        \"@syncfusion/ej2-documenteditor\": \"syncfusion:ej2-documenteditor/dist/ej2-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-notifications\": \"syncfusion:ej2-notifications/dist/ej2-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-richtexteditor\": \"syncfusion:ej2-richtexteditor/dist/ej2-richtexteditor.umd.min.js\",\r\n\t\t\"@syncfusion/ej2-svg-base\": \"syncfusion:ej2-svg-base/dist/ej2-svg-base.umd.min.js\",\r\n        \"@syncfusion/ej2-pivotview\": \"syncfusion:ej2-pivotview/dist/ej2-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-heatmap\": \"syncfusion:ej2-heatmap/dist/ej2-heatmap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-base\": \"syncfusion:ej2-react-base/dist/ej2-react-base.umd.min.js\",\r\n        \"@syncfusion/ej2-react-buttons\": \"syncfusion:ej2-react-buttons/dist/ej2-react-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-splitbuttons\": \"syncfusion:ej2-react-splitbuttons/dist/ej2-react-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-charts\": \"syncfusion:ej2-react-charts/dist/ej2-react-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-react-maps\": \"syncfusion:ej2-react-maps/dist/ej2-react-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-react-treemap\": \"syncfusion:ej2-react-treemap/dist/ej2-react-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-circulargauge\": \"syncfusion:ej2-react-circulargauge/dist/ej2-react-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lineargauge\": \"syncfusion:ej2-react-lineargauge/dist/ej2-react-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-calendars\": \"syncfusion:ej2-react-calendars/dist/ej2-react-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-react-dropdowns\": \"syncfusion:ej2-react-dropdowns/dist/ej2-react-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-react-grids\": \"syncfusion:ej2-react-grids/dist/ej2-react-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-react-inputs\": \"syncfusion:ej2-react-inputs/dist/ej2-react-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lists\": \"syncfusion:ej2-react-lists/dist/ej2-react-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-react-navigations\": \"syncfusion:ej2-react-navigations/dist/ej2-react-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-react-popups\": \"syncfusion:ej2-react-popups/dist/ej2-react-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-react-schedule\": \"syncfusion:ej2-react-schedule/dist/ej2-react-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-react-documenteditor\": \"syncfusion:ej2-react-documenteditor/dist/ej2-react-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-notifications\": \"syncfusion:ej2-react-notifications/dist/ej2-react-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-react-richtexteditor\": \"syncfusion:ej2-react-richtexteditor/dist/ej2-react-richtexteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-pivotview\": \"syncfusion:ej2-react-pivotview/dist/ej2-react-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-react-heatmap\": \"syncfusion:ej2-react-heatmap/dist/ej2-react-heatmap.umd.min.js\",\r\n        \"react-dom\":\"https://unpkg.com/react-dom@15.5.4/dist/react-dom.min.js\",\r\n        \"react\":\"https://unpkg.com/react@15.5.4/dist/react.min.js\",\r\n    },\r\n    packages: {\r\n        'app': { main: 'index', defaultExtension: 'tsx' },\r\n    }\r\n});\r\n\r\nSystem.import('app');","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Uploader · Preview · Essential JS 2 for React · Syncfusion</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <!-- {{:meta}} -->\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <script type=\"text/javascript\">\r\n        var themeName = location.hash || 'material';\r\n        themeName = themeName.replace('#','');\r\n        window.ripple = (themeName === \"material\")\r\n        document.write('<link href=\"http://cdn.syncfusion.com/ej2/' + themeName + '.css\" rel=\"stylesheet\">');\r\n    </script>\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\r\n    <script src=\"systemjs.config.js\"></script>\r\n    <link href=\"index.css\" rel=\"stylesheet\" />\r\n     <style>\r\n        #loader {\r\n            color: #008cff;\r\n            height: 40px;\r\n            left: 45%;\r\n            position: absolute;\r\n            top: 45%;\r\n            width: 30%;\r\n        }\r\n        body {\r\n            touch-action:none;\r\n        }\r\n        .body {\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n        }\r\n\r\n        .e-view {\r\n            bottom: 0;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n        }\r\n\r\n        .sb-left {\r\n            float: left;\r\n        }\r\n\r\n        .sb-right {\r\n            float: right;\r\n        }\r\n\r\n        .sb-block {\r\n            display: block;\r\n        }\r\n\r\n        .sb-table {\r\n            display: table;\r\n        }\r\n\r\n        .sb-table-cell {\r\n            display: table-cell;\r\n            vertical-align: middle;\r\n        }\r\n\r\n        /*sample header*/\r\n\r\n\r\n        .sb-header {\r\n            height: 48px;\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.12);\r\n            z-index: 1001;\r\n            opacity: 100;\r\n        }\r\n\r\n\r\n        .sb-header-left, .sb-header-right {\r\n            height: 100%;\r\n        }\r\n\r\n        #sb-header-text {\r\n            padding-left: 22px;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        .header-logo {\r\n            float: left;\r\n            padding-left: 8px;\r\n            padding-right: 22px;\r\n        }\r\n\r\n        .footer-logo {\r\n            background: url(https://ej2.syncfusion.com/home/images/footer-logo.svg) no-repeat right;\r\n            height: 40px;\r\n            width: 140px;\r\n        }\r\n\r\n        .sb-header-splitter {\r\n            float: left;\r\n            border-left: 1px solid rgb(196, 196, 196);\r\n            height: 32px;\r\n            margin-top: 8px;\r\n            padding-left: 22 px;\r\n        }\r\n\r\n        .sb-header-settings {\r\n            display: none;\r\n        }\r\n\r\n        .product-style a{\r\n        padding-right: 15px;\r\n        font-family:Roboto;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        color: #363636;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        }\r\n        .product-style a:hover {\r\n            color:#3C78EF;\r\n        }\r\n\r\n        .sb-download-btn a {\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-download-text {\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-wrapper {\r\n            padding-right: 27px;\r\n        }\r\n\r\n        .sb-download-btn:hover .sb-download-btn:focus .sb-download-btn.active {\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\";\r\n            font-weight: bold;\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-btn:hover {\r\n            background: #006CE6;\r\n        }\r\n\r\n        .sb-download-btn:focus {\r\n            background: #0051CB;\r\n        }\r\n\r\n        .sb-download-btn.active {\r\n            background: #0036B1;\r\n        }\r\n\r\n        .sb-download-btn {\r\n            background-color: #3C78EF;\r\n            opacity: 100;\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n            font-weight: 500;\r\n            line-height: 18px;\r\n            height: 32px;\r\n            border-color: transparent;\r\n        }\r\n\r\n        .sb-bread-crumb {\r\n            padding-left: 20px;\r\n            padding-top: 24px;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        .category-allcontrols a, .category-text a, .crumb-sample {\r\n            display: table;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #3C78EF;\r\n            text-align: left;\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-bread-crumb .sb-bread-crumb-text>div {\r\n            font-size: 15px;\r\n            font-weight: 500;\r\n            padding-right: 8px;\r\n            cursor: default;\r\n            display: table-cell;\r\n        }\r\n\r\n        .sb-bread-crumb-text>div.seperator {\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            vertical-align: bottom;\r\n        } \r\n\r\n        .content {\r\n        overflow: auto;\r\n        height: calc(100% - 50px);\r\n        top: 50px;\r\n        }\r\n\r\n\r\n        .sample-content {\r\n            top: 48px;\r\n            background: #FFFFFF;\r\n        }\r\n\r\n        .div {\r\n        display: block;\r\n        }\r\n\r\n        .control-section {\r\n            padding-left: 4px;\r\n        }\r\n\r\n        .crumb-sample {\r\n            color: #000000;\r\n            line-height: 18px;\r\n        }\r\n\r\n        #description {\r\n            padding-bottom: 16px;\r\n            padding-left: 20px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n            padding-top: 14px;\r\n        }\r\n\r\n        #action-description {\r\n            padding-left: 20px;\r\n            padding-bottom: 15px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        #description-section {\r\n            padding-left: 20px;\r\n            padding-top: 30px;\r\n            opacity: 0.87;\r\n            font-family:Roboto;\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n\r\n\r\n    </style>\r\n</head>\r\n\r\n<body class='e-view ej2-new' aria-busy=\"true\">\r\n        <div class=\"sample-browser\">\r\n            <div id='sample-header' class=\"sb-header\" role=\"banner\">\r\n                <div class='sb-header-left sb-left sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"header-logo\">\r\n                            <a href=\"https://ej2.syncfusion.com/home/react.html\" target=\"\" rel=\"noopener noreferrer\">\r\n                                <div class=\"footer-logo\"> </div>\r\n                            </a>\r\n                        </div>\r\n    \r\n                    </div>\r\n                    <div class=\"sb-header-splitter sb-download-splitter\"></div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div id='sb-header-text' class='e-sb-header-text'>\r\n    \r\n                            <span class='sb-header-text-left'>Essential JS 2 for React</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class='sb-header-right sb-right sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class='product-style'>\r\n                            <div><a href=\"https://www.syncfusion.com/products/react/uploader\">PRODUCT DETAILS</a></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"sb-header-item sb-table-cell sb-download-wrapper\">\r\n                            <a href=\"https://www.syncfusion.com/downloads/essential-js2\" target=\"_blank\">\r\n                                <button id=\"download-now\" class=\"sb-download-btn\">\r\n                                    <span class=\"sb-download-text\">DOWNLOAD</span>\r\n                                </button>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n            <div class ='content e-view'>\r\n            <div class='sample-content'>\r\n                <div id=\"sample-bread-crumb\" class=\"sb-bread-crumb\">\r\n                    <div class=\"sb-bread-crumb-text\">\r\n                        <div class=\"category-allcontrols\"><a href=\"https://ej2.syncfusion.com/react/demos\"><span>All Controls</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"category-text bread-ctext\"><a href=\"https://ej2.syncfusion.com/react/demos/#/material/uploader/default.html\"><span>Uploader</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"crumb-sample\">Preview</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"control-content\">\r\n                <div id=\"action-description\">\r\n                        <p>\r\n                            \n\t\t\t\t<p>This sample demonstrates how to add an image preview of the uploaded files. Only image files (PNG, JPG) are allowed to upload in this demo.</p>\n\t\t\t\t<p>This sample demonstrates the how to preview the uploaded images. Click on browse link to choose image files or drag and drop the selected image files and display it with file name, type and size.</p>\n\t\t\t\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"control-section\">\r\n                            <div id='sample'>\r\n                                <div id='loader'>Loading....</div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    </div>\r\n                    <div id=\"description-section\">Description</div>    \r\n                    <div id=\"description\">\r\n                        <p>\r\n                           \n\t\t\t\t<p>The Uploader component allows to create preview images after uploaded it. The preview images created by reading the file using success event.  Also, the user can create preview images before uploading to server using select event.</p>\n\t\t\t\r\n                         </p>     \r\n                    </div>    \r\n                </div>             \r\n            </div>\r\n                \r\n            </div>\r\n        </div>\r\n          \r\n</body>\r\n</html>\r\n","app/index.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\nimport {UploaderComponent, Uploader, SelectedEventArgs, FileInfo, RemovingEventArgs} from '@syncfusion/ej2-react-inputs';\r\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-react-popups';\r\nimport { EmitType, detach, Browser, createElement, isNullOrUndefined, EventHandler } from '@syncfusion/ej2-base';\r\n\r\n\r\nexport class Preview extends SampleBase<{}, {}> {\r\n// Uploader component\r\npublic filesDetails : FileInfo[] = [];\r\npublic dropElement: HTMLElement;\r\npublic filesList: HTMLElement[] = [];\r\npublic filesName: string[] = [];\r\npublic uploadWrapper: HTMLElement;\r\npublic parentElement: HTMLElement;\r\npublic uploadObj: UploaderComponent;\r\nprivate asyncSettings: object ;\r\nprivate allowedExtensions: string;\r\nprivate dropArea: HTMLElement;\r\nprivate dropContainerRef;\r\nprivate dropContainerEle: HTMLElement;\r\nprivate dropAreaRef;\r\nprivate dropAreaEle: HTMLElement;\r\nprivate dropImageRef;\r\nprivate dropImageEle: HTMLElement;\r\nconstructor(props: {}) {\r\n    super(props);\r\n    this.dropAreaEle = null;\r\n    this.dropContainerEle = null;\r\n    this.dropImageEle =  null;\r\n    this.dropContainerRef = element => {\r\n        this.dropContainerEle = element;\r\n    };\r\n    this.dropAreaRef = element => {\r\n        this.dropAreaEle = element;\r\n    };\r\n    this.dropImageRef = element => {\r\n        this.dropImageEle = element;\r\n    };\r\n    this.asyncSettings = {\r\n        saveUrl: 'https://aspnetmvc.syncfusion.com/services/api/uploadbox/Save',\r\n        removeUrl: 'https://aspnetmvc.syncfusion.com/services/api/uploadbox/Remove'\r\n    };\r\n    this.allowedExtensions= '.jpg,.png,.jpeg'\r\n}\r\n\r\npublic rendereComplete(): void {\r\n    this.dropArea = this.dropAreaEle;\r\n    this.dropElement = this.dropContainerEle;\r\n    if (Browser.isDevice) { this.dropImageEle.style.padding = '0px 10%'; }\r\n    this.uploadObj.element.setAttribute('name', 'UploadFiles');\r\n    document.getElementById('browse').onclick = () => {\r\n        document.getElementsByClassName('e-file-select-wrap')[0].querySelector('button').click();\r\n        return false;\r\n    };\r\n    document.getElementById('clearbtn').onclick = () => {\r\n        if (!this.dropElement.querySelector('ul')) { return; }\r\n        detach(this.dropElement.querySelector('ul'));\r\n        this.filesList = [];\r\n        this.filesDetails = [];\r\n        this.filesName = [];\r\n        if (this.dropArea.classList.contains('e-spinner-pane')) {\r\n            hideSpinner(this.dropArea);\r\n            detach(this.dropElement.querySelector('.e-spinner-pane'));\r\n        }\r\n    };\r\n    document.getElementById('uploadbtn').onclick = () => {\r\n        if (this.dropElement.querySelector('ul') && this.filesDetails.length > 0) {\r\n            this.uploadObj.upload(this.filesDetails, true);\r\n        }\r\n    };\r\n    this.uploadObj.dropArea = this.dropElement;\r\n    this.uploadObj.dataBind();\r\n}\r\nprivate onSelect(args: SelectedEventArgs): void {\r\n    if (!this.dropElement.querySelector('li')) { this.filesDetails = []; }\r\n    if (isNullOrUndefined(this.dropArea.querySelector('.e-upload-files'))) {\r\n        this.parentElement = createElement('ul', { className: 'e-upload-files' });\r\n        document.getElementsByClassName('e-upload')[0].appendChild(this.parentElement);\r\n    }\r\n    let validFiles: FileInfo[] = this.validateFiles(args, this.filesDetails);\r\n    if (validFiles.length === 0) {\r\n        args.cancel = true;\r\n        return;\r\n    }\r\n    for (let i : number = 0; i < validFiles.length; i++) {\r\n        this.formSelectedData(validFiles[i], this);\r\n    }\r\n    this.filesDetails = this.filesDetails.concat(validFiles);\r\n    args.cancel = true;\r\n}\r\n\r\nprivate validateFiles (args: any, viewedFiles: FileInfo[]): FileInfo[] {\r\n    let modifiedFiles: FileInfo[] = [];\r\n    let validFiles: FileInfo[] = [];\r\n    let isModified: boolean = false;\r\n    if (args.event.type === 'drop') {\r\n        isModified = true;\r\n        let allImages: string[] = ['png', 'jpg', 'jpeg'];\r\n        let files: FileInfo[] = args.filesData;\r\n        for (let file of files) {\r\n            if (allImages.indexOf(file.type) !== -1) {\r\n                modifiedFiles.push(file);\r\n            }\r\n        }\r\n    }\r\n    let files: FileInfo[] = modifiedFiles.length > 0 || isModified ? modifiedFiles : args.filesData;\r\n    if (this.filesName.length > 0) {\r\n        for (let file of files) {\r\n            if (this.filesName.indexOf(file.name) === -1) {\r\n                this.filesName.push(file.name);\r\n                validFiles.push(file);\r\n            }\r\n        }\r\n    } else {\r\n        for (let file of files) {\r\n            this.filesName.push(file.name);\r\n            validFiles.push(file);\r\n        }\r\n    }\r\n    return validFiles;\r\n}\r\n\r\nprivate formSelectedData (file : FileInfo, proxy: any): void {\r\n    let liEle : HTMLElement = createElement('li',  {className: 'e-upload-file-list', attrs: {'data-file-name': file.name}});\r\n    let imageTag: HTMLImageElement = createElement('IMG',  {className: 'upload-image', attrs: {'alt': 'Image'}}) as HTMLImageElement;\r\n    let wrapper: HTMLElement = createElement('span', {className: 'wrapper'});\r\n    wrapper.appendChild(imageTag); liEle.appendChild(wrapper);\r\n    liEle.appendChild(createElement('div', {className: 'file-name', innerHTML: file.name, attrs: {'title': file.name}}));\r\n    liEle.appendChild(createElement('div', {className: 'file-size', innerHTML: proxy.uploadObj.bytesToSize(file.size) }));\r\n    let clearbtn: HTMLElement;\r\n    let uploadbtn: HTMLElement;\r\n    clearbtn = createElement('span', {id: 'removeIcon', className: 'e-icons e-file-remove-btn', attrs: {'title': 'Remove'}});\r\n    EventHandler.add(clearbtn, 'click', this.removeFiles, proxy);\r\n    liEle.setAttribute('title', 'Ready to Upload');\r\n    uploadbtn = createElement('span', {className: 'e-upload-icon e-icons e-file-remove-btn', attrs: {'title': 'Upload'}});\r\n    uploadbtn.setAttribute('id', 'iconUpload'); EventHandler.add(uploadbtn, 'click', this.uploadFile, proxy);\r\n    let progressbarContainer: HTMLElement;\r\n    progressbarContainer = createElement('progress', {className: 'progressbar', id: 'progressBar', attrs: {value: '0', max: '100'}});\r\n    liEle.appendChild(clearbtn); liEle.appendChild(uploadbtn);\r\n    liEle.appendChild(progressbarContainer);\r\n    this.readURL(liEle, file); document.querySelector('.e-upload-files').appendChild(liEle);\r\n    proxy.filesList.push(liEle);\r\n}\r\n\r\nprivate uploadFile(args: any): void {\r\n    this.uploadObj.upload([this.filesDetails[this.filesList.indexOf(args.currentTarget.parentElement)]], true);\r\n}\r\n\r\nprivate removeFiles(args: any): void {\r\n    let removeFile: FileInfo = this.filesDetails[this.filesList.indexOf(args.currentTarget.parentElement)];\r\n    let statusCode: string = removeFile.statusCode;\r\n    if (statusCode === '2' || statusCode === '1') {\r\n        this.uploadObj.remove(removeFile, true);\r\n        this.uploadObj.element.value = '';\r\n    }\r\n    let index: number = this.filesList.indexOf(args.currentTarget.parentElement);\r\n    this.filesList.splice(index, 1);\r\n    this.filesDetails.splice(index, 1);\r\n    this.filesName.splice(this.filesName.indexOf(removeFile.name), 1);\r\n    if (statusCode !== '2') { detach(args.currentTarget.parentElement); }\r\n}\r\n\r\nprivate onFileUpload(args: any): void {\r\n    let li : Element = this.dropArea.querySelector('[data-file-name=\"' + args.file.name + '\"]');\r\n    let iconEle: HTMLElement = li.querySelector('#iconUpload') as HTMLElement;\r\n    iconEle.style.cursor = 'not-allowed';\r\n    iconEle.classList.add('e-uploaded');\r\n    EventHandler.remove(li.querySelector('#iconUpload'), 'click', this.uploadFile);\r\n    let progressValue : number = Math.round((args.e.loaded / args.e.total) * 100);\r\n    if (!isNaN(progressValue) && li.querySelector('.progressbar')) {\r\n        li.getElementsByTagName('progress')[0].value = progressValue;\r\n    }\r\n}\r\n\r\nprivate onUploadSuccess(args: any): void {\r\n    let spinnerElement: HTMLElement = document.getElementById('dropArea');\r\n    let li : HTMLElement = this.dropArea.querySelector('[data-file-name=\"' + args.file.name + '\"]');\r\n    if (li && !isNullOrUndefined(li.querySelector('.progressbar'))) {\r\n        (li.querySelector('.progressbar') as HTMLElement).style.visibility = 'hidden';\r\n    }\r\n    if (args.operation === 'upload') {\r\n        EventHandler.remove(li.querySelector('#iconUpload'), 'click', this.uploadFile);\r\n        (li.querySelector('.file-name') as HTMLElement).style.color = 'green';\r\n        (li.querySelector('.e-icons') as HTMLElement).onclick = () => {\r\n            this.generateSpinner(this.dropArea);\r\n        };\r\n    } else {\r\n        detach(li);\r\n        hideSpinner(spinnerElement); detach(spinnerElement.querySelector('.e-spinner-pane'));\r\n    }\r\n    if (!isNullOrUndefined(li)) {\r\n        li.setAttribute('title', args.e.currentTarget.statusText);\r\n    }\r\n}\r\n\r\nprivate generateSpinner(targetElement: HTMLElement): void {\r\n    createSpinner({ target: targetElement, width: '25px' });\r\n    showSpinner(targetElement);\r\n}\r\n\r\nprivate onUploadFailed(args : any): void {\r\n    let li : Element = this.dropArea.querySelector('[data-file-name=\"' + args.file.name + '\"]');\r\n    (li.querySelector('.file-name') as HTMLElement).style.color = 'red';\r\n    li.setAttribute('title', args.e.currentTarget.statusText)\r\n    if (args.operation === 'upload') {\r\n        EventHandler.remove(li.querySelector('#iconUpload'), 'click', this.uploadFile);\r\n        (li.querySelector('.progressbar') as HTMLElement).style.visibility = 'hidden';\r\n    }\r\n}\r\n\r\nprivate readURL(li: HTMLElement, args: any): void {\r\n    let preview: HTMLImageElement = li.querySelector('.upload-image');\r\n    let file: File = args.rawFile; let reader: FileReader = new FileReader();\r\n    reader.addEventListener('load', () => { preview.src = reader.result; }, false);\r\n    if (file) { reader.readAsDataURL(file); }\r\n}\r\nprivate onRemoveFile(args: RemovingEventArgs): void {\r\n    args.postRawFile = false;\r\n}\r\n\r\npublic render(): JSX.Element {\r\n    return (\r\n      <div className = 'control-pane' ref={this.dropContainerRef}>\r\n\t\t\t<div className='control-section' id='uploadpreview'>\r\n\t\t\t\t<div className= 'col-lg-9'>\r\n\t\t\t\t\t<div className='imagepreview'>\r\n\t\t\t\t\t\t<div id='dropArea' ref={this.dropAreaRef} className='dropTarget'>\r\n\t\t\t\t\t\t\t<span id='dropimage' ref={this.dropImageRef} className='file-name-drop'> Drop image (JPG, PNG) files here or <a href=\"\" id='browse'><u>Browse</u></a> </span>\r\n                            <UploaderComponent id='previewfileupload' type = 'file' ref={upload => this.uploadObj = upload}\r\n                                asyncSettings={this.asyncSettings}\r\n\t\t\t\t\t\t\t\tsuccess={ this.onUploadSuccess.bind(this) }\r\n\t\t\t\t\t\t\t\tselected= {this.onSelect.bind(this)}\r\n                                removing= { this.onRemoveFile.bind(this)}\r\n\t\t\t\t\t\t\t\tprogress= {this.onFileUpload.bind(this)}\r\n                                failure= {this.onUploadFailed.bind(this)}\r\n                                allowedExtensions={this.allowedExtensions}\r\n\t\t\t\t\t\t\t></UploaderComponent>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='property-section uploader-panel col-lg-3'>\r\n\t\t\t\t\t<PropertyPane title='Properties'>\r\n\t\t\t\t\t\t<div className='panel-style'>\r\n\t\t\t\t\t\t\t<button className=\"e-btn e-css\" id=\"clearbtn\" title=\"Clear All\">Clear All</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='panel-style'>\r\n\t\t\t\t\t\t\t<button className=\"e-btn e-css\" id=\"uploadbtn\" title=\"Upload All\">Upload All</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</PropertyPane>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\nReactDOM.render(<Preview />, document.getElementById('sample'));","app/sample-base.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { enableRipple } from '@syncfusion/ej2-base';\r\n\r\nenableRipple((window as any).ripple);\r\nexport class SampleBase<P, S> extends React.PureComponent<RouteComponentProps<any> & P, S>{\r\n    public rendereComplete(): void {\r\n        /**custom render complete function */\r\n    }\r\n    componentDidMount(): void {\r\n        setTimeout(() => {\r\n            this.rendereComplete();\r\n        }\r\n        );\r\n    }\r\n}"}