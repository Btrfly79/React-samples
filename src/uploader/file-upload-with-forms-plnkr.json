{"index.css":".form-group {\r\n padding-top: 11px; \r\n }\r\n \r\n .form-group .e-upload.e-control.e-keyboard{\r\n\tdisplay: none;\r\n }\r\n .form-group .address-field{\r\n    resize: none;\r\n}\r\n#control_wrapper {\r\n    max-width: 500px;\r\n    margin: auto;\r\n    border: 0.5px solid #BEBEBE;\r\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.36);\r\n    padding: 1% 4% 2%;\r\n    background: #f9f9f9;\r\n}\r\n.highcontrast #control_wrapper {\r\n\tbackground: #000;\r\n}\r\n\r\n.e-float-input.upload-area {\r\n  width: 75%;\r\n}\r\n\r\n.e-bigger.fabric .e-float-input.upload-area, .e-bigger.highcontrast .e-float-input.upload-area {\r\n  width: 72%;\r\n  display: block;\r\n}\r\n\r\n.material .e-float-input.upload-area button#browse {\r\n    float: right;\r\n\tmargin-right: -106px;\r\n\tmargin-top: -26px;\r\n}\r\n\r\n.e-bigger.material .e-float-input.upload-area button#browse {\r\n    margin-top: -36px;\r\n    margin-right: -106px;\r\n}\r\n\r\n.fabric .e-float-input.upload-area button#browse, .highcontrast .e-float-input.upload-area button#browse {\r\n    float: right;\r\n\tmargin-right: -106px;\r\n\tmargin-top: -32px;\r\n}\r\n.e-bigger.fabric .e-float-input.upload-area button#browse, .e-bigger.highcontrast .e-float-input.upload-area button#browse {\r\n\tmargin-right: -120px;\r\n    margin-top: -40px;\r\n}\r\n.bootstrap .e-float-input.upload-area button#browse {\r\n    float: right;\r\n\tmargin-right: -106px;\r\n\tmargin-top: -35px;\r\n}\r\n.e-bigger.bootstrap .e-float-input.upload-area button#browse {\r\n\tmargin-top: -40px;\r\n}\r\n\r\n.form-title {\r\n    text-align: center;\r\n}\r\n\r\n.submitBtn .desc {\r\n    margin: 2% 23% 0% 18%;\r\n}\r\n@media only screen and (max-width: 500px) {\r\n    .submitBtn .desc {\r\n        margin: 12px;\r\n    }\r\n    .upload-area, .e-bigger .upload-area {\r\n        width: 60%;\r\n    }\r\n}\r\n\r\n.submitBtn {\r\n    text-align: center;\r\n\tposition: relative;\r\n}\r\n\r\n.form-group #mobile-no input[type=number]::-webkit-inner-spin-button,\r\n.form-group #mobile-no input[type=number]::-webkit-outer-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n}\r\n","app/property-pane.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nexport class PropertyPane extends React.Component<{ title: string }, {}>{\r\n\r\n    render() {\r\n        return (\r\n            <div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","systemjs.config.js":"System.config({\r\n    transpiler: \"ts\",\r\n    typescriptOptions: {\r\n            target: \"es5\",\r\n            module: \"commonjs\",\r\n            moduleResolution: \"node\",\r\n            emitDecoratorMetadata: true,\r\n            experimentalDecorators: true,\r\n            \"jsx\": \"react\"\r\n    },\r\n     meta: {\r\n      'typescript': {\r\n        \"exports\": \"ts\"\r\n      },\r\n      '*.json': { loader: 'plugin-json' }\r\n    },\r\n    paths: {\r\n        \"syncfusion:\": \"http://cdn.syncfusion.com/ej2/\"},\r\n    map: {\r\n        app: 'app',\r\n        ts: \"https://unpkg.com/plugin-typescript@4.0.10/lib/plugin.js\",\r\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\r\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\r\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\r\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-splitbuttons\": \"syncfusion:ej2-splitbuttons/dist/ej2-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-maps\": \"syncfusion:ej2-maps/dist/ej2-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-treemap\": \"syncfusion:ej2-treemap/dist/ej2-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\r\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-schedule\": \"syncfusion:ej2-schedule/dist/ej2-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\r\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\r\n        \"@syncfusion/ej2-documenteditor\": \"syncfusion:ej2-documenteditor/dist/ej2-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-notifications\": \"syncfusion:ej2-notifications/dist/ej2-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-richtexteditor\": \"syncfusion:ej2-richtexteditor/dist/ej2-richtexteditor.umd.min.js\",\r\n\t\t\"@syncfusion/ej2-svg-base\": \"syncfusion:ej2-svg-base/dist/ej2-svg-base.umd.min.js\",\r\n        \"@syncfusion/ej2-pivotview\": \"syncfusion:ej2-pivotview/dist/ej2-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-heatmap\": \"syncfusion:ej2-heatmap/dist/ej2-heatmap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-base\": \"syncfusion:ej2-react-base/dist/ej2-react-base.umd.min.js\",\r\n        \"@syncfusion/ej2-react-buttons\": \"syncfusion:ej2-react-buttons/dist/ej2-react-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-splitbuttons\": \"syncfusion:ej2-react-splitbuttons/dist/ej2-react-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-charts\": \"syncfusion:ej2-react-charts/dist/ej2-react-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-react-maps\": \"syncfusion:ej2-react-maps/dist/ej2-react-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-react-treemap\": \"syncfusion:ej2-react-treemap/dist/ej2-react-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-circulargauge\": \"syncfusion:ej2-react-circulargauge/dist/ej2-react-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lineargauge\": \"syncfusion:ej2-react-lineargauge/dist/ej2-react-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-calendars\": \"syncfusion:ej2-react-calendars/dist/ej2-react-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-react-dropdowns\": \"syncfusion:ej2-react-dropdowns/dist/ej2-react-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-react-grids\": \"syncfusion:ej2-react-grids/dist/ej2-react-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-react-inputs\": \"syncfusion:ej2-react-inputs/dist/ej2-react-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lists\": \"syncfusion:ej2-react-lists/dist/ej2-react-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-react-navigations\": \"syncfusion:ej2-react-navigations/dist/ej2-react-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-react-popups\": \"syncfusion:ej2-react-popups/dist/ej2-react-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-react-schedule\": \"syncfusion:ej2-react-schedule/dist/ej2-react-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-react-documenteditor\": \"syncfusion:ej2-react-documenteditor/dist/ej2-react-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-notifications\": \"syncfusion:ej2-react-notifications/dist/ej2-react-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-react-richtexteditor\": \"syncfusion:ej2-react-richtexteditor/dist/ej2-react-richtexteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-pivotview\": \"syncfusion:ej2-react-pivotview/dist/ej2-react-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-react-heatmap\": \"syncfusion:ej2-react-heatmap/dist/ej2-react-heatmap.umd.min.js\",\r\n        \"react-dom\":\"https://unpkg.com/react-dom@15.5.4/dist/react-dom.min.js\",\r\n        \"react\":\"https://unpkg.com/react@15.5.4/dist/react.min.js\",\r\n    },\r\n    packages: {\r\n        'app': { main: 'index', defaultExtension: 'tsx' },\r\n    }\r\n});\r\n\r\nSystem.import('app');","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Uploader · Formsupport · Essential JS 2 for React · Syncfusion</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <!-- {{:meta}} -->\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <script type=\"text/javascript\">\r\n        var themeName = location.hash || 'material';\r\n        themeName = themeName.replace('#','');\r\n        window.ripple = (themeName === \"material\")\r\n        document.write('<link href=\"http://cdn.syncfusion.com/ej2/' + themeName + '.css\" rel=\"stylesheet\">');\r\n    </script>\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\r\n    <script src=\"systemjs.config.js\"></script>\r\n    <link href=\"index.css\" rel=\"stylesheet\" />\r\n     <style>\r\n        #loader {\r\n            color: #008cff;\r\n            height: 40px;\r\n            left: 45%;\r\n            position: absolute;\r\n            top: 45%;\r\n            width: 30%;\r\n        }\r\n        body {\r\n            touch-action:none;\r\n        }\r\n        .body {\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n        }\r\n\r\n        .e-view {\r\n            bottom: 0;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n        }\r\n\r\n        .sb-left {\r\n            float: left;\r\n        }\r\n\r\n        .sb-right {\r\n            float: right;\r\n        }\r\n\r\n        .sb-block {\r\n            display: block;\r\n        }\r\n\r\n        .sb-table {\r\n            display: table;\r\n        }\r\n\r\n        .sb-table-cell {\r\n            display: table-cell;\r\n            vertical-align: middle;\r\n        }\r\n\r\n        /*sample header*/\r\n\r\n\r\n        .sb-header {\r\n            height: 48px;\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.12);\r\n            z-index: 1001;\r\n            opacity: 100;\r\n        }\r\n\r\n\r\n        .sb-header-left, .sb-header-right {\r\n            height: 100%;\r\n        }\r\n\r\n        #sb-header-text {\r\n            padding-left: 22px;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        .header-logo {\r\n            float: left;\r\n            padding-left: 8px;\r\n            padding-right: 22px;\r\n        }\r\n\r\n        .footer-logo {\r\n            background: url(https://ej2.syncfusion.com/home/images/footer-logo.svg) no-repeat right;\r\n            height: 40px;\r\n            width: 140px;\r\n        }\r\n\r\n        .sb-header-splitter {\r\n            float: left;\r\n            border-left: 1px solid rgb(196, 196, 196);\r\n            height: 32px;\r\n            margin-top: 8px;\r\n            padding-left: 22 px;\r\n        }\r\n\r\n        .sb-header-settings {\r\n            display: none;\r\n        }\r\n\r\n        .product-style a{\r\n        padding-right: 15px;\r\n        font-family:Roboto;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        color: #363636;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        }\r\n        .product-style a:hover {\r\n            color:#3C78EF;\r\n        }\r\n\r\n        .sb-download-btn a {\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-download-text {\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-wrapper {\r\n            padding-right: 27px;\r\n        }\r\n\r\n        .sb-download-btn:hover .sb-download-btn:focus .sb-download-btn.active {\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\";\r\n            font-weight: bold;\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-btn:hover {\r\n            background: #006CE6;\r\n        }\r\n\r\n        .sb-download-btn:focus {\r\n            background: #0051CB;\r\n        }\r\n\r\n        .sb-download-btn.active {\r\n            background: #0036B1;\r\n        }\r\n\r\n        .sb-download-btn {\r\n            background-color: #3C78EF;\r\n            opacity: 100;\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n            font-weight: 500;\r\n            line-height: 18px;\r\n            height: 32px;\r\n            border-color: transparent;\r\n        }\r\n\r\n        .sb-bread-crumb {\r\n            padding-left: 20px;\r\n            padding-top: 24px;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        .category-allcontrols a, .category-text a, .crumb-sample {\r\n            display: table;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #3C78EF;\r\n            text-align: left;\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-bread-crumb .sb-bread-crumb-text>div {\r\n            font-size: 15px;\r\n            font-weight: 500;\r\n            padding-right: 8px;\r\n            cursor: default;\r\n            display: table-cell;\r\n        }\r\n\r\n        .sb-bread-crumb-text>div.seperator {\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            vertical-align: bottom;\r\n        } \r\n\r\n        .content {\r\n        overflow: auto;\r\n        height: calc(100% - 50px);\r\n        top: 50px;\r\n        }\r\n\r\n\r\n        .sample-content {\r\n            top: 48px;\r\n            background: #FFFFFF;\r\n        }\r\n\r\n        .div {\r\n        display: block;\r\n        }\r\n\r\n        .control-section {\r\n            padding-left: 4px;\r\n        }\r\n\r\n        .crumb-sample {\r\n            color: #000000;\r\n            line-height: 18px;\r\n        }\r\n\r\n        #description {\r\n            padding-bottom: 16px;\r\n            padding-left: 20px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n            padding-top: 14px;\r\n        }\r\n\r\n        #action-description {\r\n            padding-left: 20px;\r\n            padding-bottom: 15px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        #description-section {\r\n            padding-left: 20px;\r\n            padding-top: 30px;\r\n            opacity: 0.87;\r\n            font-family:Roboto;\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n\r\n\r\n    </style>\r\n</head>\r\n\r\n<body class='e-view ej2-new' aria-busy=\"true\">\r\n        <div class=\"sample-browser\">\r\n            <div id='sample-header' class=\"sb-header\" role=\"banner\">\r\n                <div class='sb-header-left sb-left sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"header-logo\">\r\n                            <a href=\"https://ej2.syncfusion.com/home/react.html\" target=\"\" rel=\"noopener noreferrer\">\r\n                                <div class=\"footer-logo\"> </div>\r\n                            </a>\r\n                        </div>\r\n    \r\n                    </div>\r\n                    <div class=\"sb-header-splitter sb-download-splitter\"></div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div id='sb-header-text' class='e-sb-header-text'>\r\n    \r\n                            <span class='sb-header-text-left'>Essential JS 2 for React</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class='sb-header-right sb-right sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class='product-style'>\r\n                            <div><a href=\"https://www.syncfusion.com/products/react/uploader\">PRODUCT DETAILS</a></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"sb-header-item sb-table-cell sb-download-wrapper\">\r\n                            <a href=\"https://www.syncfusion.com/downloads/essential-js2\" target=\"_blank\">\r\n                                <button id=\"download-now\" class=\"sb-download-btn\">\r\n                                    <span class=\"sb-download-text\">DOWNLOAD</span>\r\n                                </button>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n            <div class ='content e-view'>\r\n            <div class='sample-content'>\r\n                <div id=\"sample-bread-crumb\" class=\"sb-bread-crumb\">\r\n                    <div class=\"sb-bread-crumb-text\">\r\n                        <div class=\"category-allcontrols\"><a href=\"https://ej2.syncfusion.com/react/demos\"><span>All Controls</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"category-text bread-ctext\"><a href=\"https://ej2.syncfusion.com/react/demos/#/material/uploader/default.html\"><span>Uploader</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"crumb-sample\">Formsupport</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"control-content\">\r\n                <div id=\"action-description\">\r\n                        <p>\r\n                            \n                <p> This sample demonstrates the Uploader component supported with HTML form upload.Fill the mandatory details in a form and click the submit button. </p>\n            \r\n                        </p>\r\n                    </div>\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"control-section\">\r\n                            <div id='sample'>\r\n                                <div id='loader'>Loading....</div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    </div>\r\n                    <div id=\"description-section\">Description</div>    \r\n                    <div id=\"description\">\r\n                        <p>\r\n                           \n                <p>The Uploader component works in synchronous mode using HTML form.When the end-user submits the form, the selected files are submitted to server with the <code>name</code> attribute of input element.</p>\n                <p>More information on the form support can be found on this <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/uploader/form-support.html\"> documentation section</a>.</p>\n            \r\n                         </p>     \r\n                    </div>    \r\n                </div>             \r\n            </div>\r\n                \r\n            </div>\r\n        </div>\r\n          \r\n</body>\r\n</html>\r\n","app/index.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\nimport {UploaderComponent} from '@syncfusion/ej2-react-inputs';\r\nimport { FormValidator, FormValidatorModel } from '@syncfusion/ej2-inputs';\r\nimport { DialogComponent } from '@syncfusion/ej2-react-popups';\r\nimport { detach, isNullOrUndefined, createElement, EventHandler, Browser } from '@syncfusion/ej2-base';\r\nimport { FileInfo, SelectedEventArgs } from '@syncfusion/ej2-inputs';\r\n\r\n\r\nexport class Formsupport extends SampleBase<{}, {}> {\r\n\r\n    public formValidator: FormValidatorModel;\r\n    public uploadObj: UploaderComponent;\r\n    public dialogInstance: DialogComponent;\r\n    public formObject: FormValidator;\r\n    private animationSettings: Object;\r\n    private autoUpload: boolean;\r\n    private allowedExtensions: string;\r\n    private multiple: boolean;\r\n    private inputElement: HTMLInputElement\r\n    private inputRef;\r\n    private inputRefElement: HTMLInputElement;\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.inputRefElement = null;\r\n    this.inputRef = element => {\r\n        this.inputRefElement = element;\r\n    };\r\n        this.animationSettings = { effect: 'Zoom' };\r\n        this.autoUpload = false;\r\n        this.allowedExtensions= 'image/*';\r\n        this.multiple = false;\r\n    }\r\n    // Uploader component\r\n    public rendereComplete(): void {\r\n        let input: NodeList = document.querySelectorAll('.e-input-group .e-input,.e-float-input.e-input-group input');\r\n        let inputIcon: NodeList  = document.querySelectorAll('.e-input-group-icon');\r\n        for (let i: number = 0; i < input.length; i++) {\r\n            {/* Focus Event binding Floating input label */}\r\n            input[i].addEventListener('focus', () => {\r\n                getParentNode(input[i] as HTMLElement).classList.add('e-input-focus');\r\n            });\r\n\r\n            {/* FocusOut Event binding Floating input label */}\r\n            input[i].addEventListener('blur', () => {\r\n                getParentNode(input[i] as HTMLElement).classList.remove('e-input-focus');\r\n            });\r\n        }\r\n        for (let i: number = 0; i < inputIcon.length; i++) {\r\n            {/* Mousedown Event binding for input icon Ripple Effect */}\r\n            inputIcon[i].addEventListener('mousedown',  function() : void {\r\n                this.classList.add('e-input-btn-ripple');\r\n            });\r\n            {/* MouseUp Event binding for input icon Ripple Effect */}\r\n            inputIcon[i].addEventListener('mouseup',  function() : void {\r\n                let ele: HTMLElement = this;\r\n                setTimeout(\r\n                    () => {ele.classList.remove('e-input-btn-ripple'); },\r\n                    500);\r\n            });\r\n        }\r\n        function getParentNode(element: HTMLInputElement | HTMLElement): HTMLElement {\r\n            let parentNode: HTMLElement = element.parentNode as HTMLElement;\r\n            if (parentNode.classList.contains('e-input-in-wrap')) {\r\n                return parentNode.parentNode as HTMLElement;\r\n            }\r\n            return parentNode;\r\n        }\r\n        document.getElementById('browse').onclick = () => { \r\n            document.getElementsByClassName('e-file-select-wrap')[0].querySelector('button').click();\r\n            return false;\r\n        };\r\n        this.formValidator = {\r\n            // Defines the validation rules\r\n            rules: {\r\n                'name': {\r\n                    required: [true, '* Enter your name']\r\n                },\r\n                'email': {\r\n                    required: [true, '* Enter your email']\r\n                },\r\n                'upload': {\r\n                    required: [true, '* Select any file']\r\n                },\r\n                'mobile': {\r\n                    required: [true, '* Enter your mobile number']\r\n                }\r\n            }\r\n        };\r\n        this.formObject = new FormValidator('#formTemp', this.formValidator);\r\n    };\r\n        private onSubmitClick(): void {\r\n        if(this.formObject.validate()) {\r\n          this.formObject.element.reset();\r\n          this.dialogInstance.show();\r\n            }\r\n        }\r\n\r\n    private onFileSelected(args : SelectedEventArgs): void {\r\n            this.inputElement = this.inputRefElement;\r\n            this.inputElement.value = args.filesData[0].name;\r\n            this.inputElement.classList.remove('e-error');\r\n            this.inputElement.classList.remove('e-valid');\r\n            this.inputElement.removeAttribute('aria-invalid');\r\n            this.inputElement.setAttribute('aria-invalid', 'false');\r\n    }\r\n\r\npublic render(): JSX.Element {\r\n    return (\r\n      <div className = 'control-pane'>\r\n\t\t\t<div className='control-section col-lg-12 uploadpreview'>\r\n                <h4 className=\"form-title\">Photo Contest</h4>\r\n                    <div className=\"control_wrapper\" id=\"control_wrapper\">\r\n                        <form id=\"formTemp\"  method=\"post\">\r\n                            <div className=\"form-group\" >\r\n                                <div className=\"e-float-input\">\r\n                                <input type=\"text\" id=\"name\" name=\"name\" data-msg-containerid=\"nameError\" />\r\n                                <span className=\"e-float-line\"></span>\r\n                                <label className=\"e-float-text e-label-top\" htmlFor=\"name\">Name</label>\r\n                                </div>\r\n                                <div id=\"nameError\"></div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"e-float-input\">\r\n                                <input type=\"email\" id=\"Email\" name=\"email\" data-msg-containerid=\"mailError\"/>\r\n                                    <span className=\"e-float-line\"></span>\r\n                                    <label className=\"e-float-text e-label-top\" htmlFor=\"email\" >Email</label>\r\n                                </div>\r\n                                <div id=\"mailError\"></div>\r\n                            </div>\r\n                            <div className=\"form-group\" >\r\n                                <div className=\"e-float-input\" id=\"mobile-no\">\r\n                                    <input type=\"number\" id=\"mobileno\" name=\"mobile\" data-msg-containerid=\"noError\" />\r\n                                    <span className=\"e-float-line\"></span>\r\n                                    <label className=\"e-float-text e-label-top\"  htmlFor=\"mobile\" >Mobile no</label>\r\n                                </div>\r\n                                <div id=\"noError\"></div>\r\n                            </div>\r\n                            <div className=\"form-group\" >\r\n                                <div className=\"e-float-input upload-area\">\r\n                                    <input type=\"text\" readOnly id=\"upload\" ref={this.inputRef} name=\"upload\" data-msg-containerid=\"uploadError\"/>\r\n                                    <button id=\"browse\" className=\"e-control e-btn e-info\">Browse...</button>\r\n                                    <span className=\"e-float-line\"></span>\r\n                                    <label className=\"e-float-text e-label-top\">Choose a file</label>\r\n                                </div>\r\n                                <div id=\"uploadError\"></div>\r\n                                    <UploaderComponent id='fileUpload' type = 'file' ref = {(scope) => {this.uploadObj = scope}}\r\n                                selected={this.onFileSelected.bind(this)}\r\n                                autoUpload = {this.autoUpload}\r\n                                allowedExtensions= {this.allowedExtensions} multiple = {this.multiple}></UploaderComponent>\r\n                            </div>\r\n                            <div className=\"form-group\" >\r\n                                <div className=\"e-float-input\">\r\n                                    <textarea className=\"address-field\" id=\"Address\" name=\"Address\"></textarea>\r\n                                    <span className=\"e-float-line\"></span>\r\n                                    <label className=\"e-float-text e-label-top\" >Address</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"submitBtn\">\r\n                                <button className=\"submit-btn e-btn\" id=\"submit-btn\" onClick={this.onSubmitClick.bind(this)}>Submit</button>\r\n                                <div className=\"desc\"><span>*This button is not a submit type and the form submit handled from externally.</span></div>                      \r\n                            </div>                \r\n                        </form>\r\n                    </div>\r\n                    <DialogComponent id=\"defaultdialog\" isModal={true} header='Success' showCloseIcon={true} visible ={false} content = 'Your details have been updated successfully, Thank you.' animationSettings={this.animationSettings} width={'50%'}  ref={dialog => this.dialogInstance = dialog}\r\n                    target={'.control-section'} ></DialogComponent>\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\nReactDOM.render(<Formsupport />, document.getElementById('sample'));","app/sample-base.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { enableRipple } from '@syncfusion/ej2-base';\r\n\r\nenableRipple((window as any).ripple);\r\nexport class SampleBase<P, S> extends React.PureComponent<RouteComponentProps<any> & P, S>{\r\n    public rendereComplete(): void {\r\n        /**custom render complete function */\r\n    }\r\n    componentDidMount(): void {\r\n        setTimeout(() => {\r\n            this.rendereComplete();\r\n        }\r\n        );\r\n    }\r\n}"}